[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js",
    "content": "/**\n * FlightDelay API microservice\n */\nclass FlightDelayInsurance {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.name = `${process.env.npm_package_name}.v${process.env.npm_package_version}`;\n  }\n\n  /**\n   * Process submitted application data\n   * @param {string} clientId\n   * @param {{}} payload\n   */\n  onApplied(clientId, payload) {\n    // validate form data\n    this.log.info('Form applied:', clientId, payload);\n\n    this.dip.createPolicy(clientId, payload);\n  }\n\n  /**\n   * Handle error\n   * @param {string} client\n   * @param {Error} error\n   */\n  onError(client, error) {\n    this.log.error(client, error);\n  }\n\n  /**\n   * Handle LogSetState event from contract\n   * @param {string} policyId\n   * @param {{}} payload\n   * @return {Promise}\n   */\n  onLogSetState(policyId, payload) {\n    // Applied\n    if (payload.state === 0) return this.onPolicyAppliedState(policyId, payload);\n\n    // Accepted\n    if (payload.state === 1) return this.onPolicyAcceptedState(policyId, payload);\n\n    // Revoked\n    if (payload.state === 2) return this.onPolicyRevoked(policyId, payload);\n\n    // PaidOut\n    if (payload.state === 3) return this.onPolicyPaidOutState(policyId, payload);\n\n    // Expired\n    if (payload.state === 4) return this.onPolicyExpiredState(policyId, payload);\n\n    // Declined\n    if (payload.state === 5) return this.onPolicyDeclinedState(policyId, payload);\n\n    // SendFailed\n    if (payload.state === 6) return this.onPolicySendFailedState(policyId, payload);\n\n    return null;\n  }\n\n  /**\n   * Policy state handlers\n   */\n\n  /**\n   * Handle applied policy state\n   * @param {string} policyId\n   */\n  onPolicyAppliedState(policyId) {\n    // Policy applied\n    this.dip.send(policyId, { from: this.name, msg: `Policy ${policyId} applied` });\n  }\n\n  /**\n   * Handle accepted policy state\n   * @param {string} policyId\n   */\n  onPolicyAcceptedState(policyId) {\n    // Policy accepted\n    this.dip.send(policyId, { from: this.name, msg: `Policy ${policyId} underwritten by oracle` });\n\n    this.dip.chargeCard(policyId);\n  }\n\n  /**\n   * Handle revoked policy state\n   * @param {string} policyId\n   */\n  onPolicyRevoked(policyId) {\n    // Policy revoked\n    this.dip.send(policyId, { from: this.name, msg: `Policy ${policyId} revoked` });\n  }\n\n  /**\n   * Handle paidOut policy state\n   * @param {string} policyId\n   */\n  onPolicyPaidOutState(policyId) {\n    // Policy paidout\n    this.dip.send(policyId, { from: this.name, msg: `Policy ${policyId} for payout` });\n    this.dip.payout(policyId);\n  }\n\n  /**\n   * Handle expired policy state\n   * @param {string} policyId\n   */\n  onPolicyExpiredState(policyId) {\n    // Policy expired\n    this.dip.send(policyId, { from: this.name, msg: `Policy ${policyId} expired` });\n  }\n\n  /**\n   * Handle declined policy state\n   * @param {string} policyId\n   */\n  onPolicyDeclinedState(policyId) {\n    // Policy declined\n    this.dip.send(policyId, { from: this.name, msg: `Policy ${policyId} declined` });\n  }\n\n  /**\n   * Handle send failed policy state\n   * @param {string} policyId\n   */\n  onPolicySendFailedState(policyId) {\n    // Policy send failed\n    this.dip.send(policyId, { from: this.name, msg: `Policy ${policyId} send failed` });\n\n    // this.dip.notifyAdministrator(policyId, { msg: 'Send failed' });\n  }\n\n  /**\n   * App logic\n   */\n\n  /**\n   * On card charged event handler\n   * @param {string} policyId\n   */\n  onCardCharged(policyId) {\n    this.dip.issueCertificate(policyId);\n  }\n\n  /**\n   * On certificated issued event handler\n   * @param {string} policyId\n   */\n  onCertificateIssued(policyId) {\n    this.dip.send(policyId, { from: this.name, msg: `Policy ${policyId} accepted` });\n  }\n}\n\nmodule.exports = FlightDelayInsurance;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "FlightDelayInsurance",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js",
    "importStyle": "FlightDelayInsurance",
    "description": "FlightDelay API microservice",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 8
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "name",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#name",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "onApplied",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onApplied",
    "access": "public",
    "description": "Process submitted application data",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clientId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "onError",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onError",
    "access": "public",
    "description": "Handle error",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "onLogSetState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onLogSetState",
    "access": "public",
    "description": "Handle LogSetState event from contract",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "onPolicyAppliedState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyAppliedState",
    "access": "public",
    "description": "Handle applied policy state",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "onPolicyAcceptedState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyAcceptedState",
    "access": "public",
    "description": "Handle accepted policy state",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "onPolicyRevoked",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyRevoked",
    "access": "public",
    "description": "Handle revoked policy state",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "onPolicyPaidOutState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyPaidOutState",
    "access": "public",
    "description": "Handle paidOut policy state",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "onPolicyExpiredState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyExpiredState",
    "access": "public",
    "description": "Handle expired policy state",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "onPolicyDeclinedState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyDeclinedState",
    "access": "public",
    "description": "Handle declined policy state",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "onPolicySendFailedState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicySendFailedState",
    "access": "public",
    "description": "Handle send failed policy state",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "onCardCharged",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onCardCharged",
    "access": "public",
    "description": "On card charged event handler",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "onCertificateIssued",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onCertificateIssued",
    "access": "public",
    "description": "On certificated issued event handler",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "content": "const WebSocket = require('ws');\nconst uuid = require('uuid/v1');\nconst amqp = require('amqplib');\nconst http = require('http');\n\n\nconst shared = {\n  exhanges: {\n    policy: 'POLICY',\n  },\n  queues: {\n    policyLog: 'policy.log',\n    policyCreate: 'policy.create',\n  },\n  topic: {\n    policyCreate: 'policy.create',\n    policyCreationSuccess: 'policy.creation_success',\n  },\n};\n\n/**\n * Logger\n */\nclass Logger {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.info = console.log;\n    this.error = console.error;\n  }\n}\n\n/**\n * Generic Insurance application wrapper\n */\nclass GenericInsurance {\n  /**\n   * Constructor\n   * @param {{}} app\n   */\n  constructor(app) {\n    const logger = new Logger();\n\n    this._app = app;\n    this._app.dip = this;\n    this._app.log = logger;\n\n    this.log = logger;\n\n    this._connections = {};\n\n    this._amqp = null;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @param {string} amqpBroker\n   * @param {string} wsPort\n   * @return {*}\n   */\n  async listen({ amqpBroker, wsPort }) {\n    const conn = await amqp.connect(amqpBroker);\n\n    this._amqp = await conn.createChannel();\n\n    const server = http.createServer(((req, res) => {\n      res.writeHead(200, { 'Content-Type': 'application/json' });\n      res.write('{\"status\":200}');\n      res.end();\n    }));\n\n    const wss = new WebSocket.Server({ server });\n\n    server.listen(wsPort);\n\n    wss.on('connection', ws => this.register(ws));\n\n    await this._amqp.assertExchange(shared.exhanges.policy, 'topic', { durable: true });\n\n    const q = await this._amqp.assertQueue(shared.queues.policyLog, { exclusive: false });\n    await this._amqp.bindQueue(q.queue, shared.exhanges.policy, '#');\n\n    await this._amqp.consume(q.queue, (message) => {\n      console.log(`[READ]: ${message.fields.routingKey}: '${message.content.toString()}'`);\n\n      this.send(message.properties.correlationId, {\n        from: `${message.properties.headers.originatorName}.v${message.properties.headers.originatorVersion}`,\n        topic: message.fields.routingKey,\n        msg: message.content.toString(),\n      });\n\n      if (message.fields.routingKey === 'policy.state_changed.v1') {\n        this._app.onLogSetState(message.properties.correlationId, {\n          state: JSON.parse(message.content.toString()).state,\n        });\n      }\n\n      if (message.fields.routingKey === 'policy.card_charged.v1') {\n        this._app.onCardCharged(message.properties.correlationId, {});\n      }\n\n      if (message.fields.routingKey === 'policy.sertificate_issued.v1') {\n        this._app.onCertificateIssued(message.properties.correlationId, {});\n      }\n    }, { noAck: true });\n\n\n    this.log.info(`${this._app.name} listening at ws://localhost:${wsPort}/ws`);\n  }\n\n  /**\n   * Registrer WebSocket connection\n   * @param {{}} connection\n   */\n  register(connection) {\n    const connectionId = uuid();\n\n    this._connections[connectionId] = connection;\n\n    this.send(connectionId, {\n      from: `${process.env.npm_package_name}.v${process.env.npm_package_version}`,\n      topic: null,\n      msg: 'WebSocket connection successfully established',\n    });\n\n    connection.on('message', message => this.processMessage(connectionId, message));\n  }\n\n  /**\n   * Process broker's message\n   * @param {string} connectionId\n   * @param {{}} message\n   */\n  processMessage(connectionId, message) {\n    const payload = JSON.parse(message);\n\n    if (payload.type === 'apply') {\n      this._app.onApplied(connectionId, payload.data);\n      this.send(connectionId, {\n        from: `${process.env.npm_package_name}.v${process.env.npm_package_version}`,\n        topic: null,\n        msg: `Applied data: ${message}`,\n      });\n    }\n  }\n\n  /**\n   * Send message to WebSocket client\n   * @param {string} connectionId\n   * @param {{}} msg\n   */\n  send(connectionId, msg) {\n    this._connections[connectionId].send(JSON.stringify(msg));\n  }\n\n  /**\n   * Send policy creation message to broker\n   * @param {string} clientId\n   * @param {{}} payload\n   * @return {Promise<void>}\n   */\n  async createPolicy(clientId, payload) {\n    const key = `${shared.topic.policyCreate}.v1`;\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish(shared.exhanges.policy, key, Buffer.from(JSON.stringify(payload)), {\n      correlationId: clientId,\n      headers: {\n        originatorName: process.env.npm_package_name,\n        originatorVersion: process.env.npm_package_version,\n      },\n    });\n  }\n\n  /**\n   * Send card charding message to broker\n   * @param {string} policyId\n   * @return {Promise<void>}\n   */\n  async chargeCard(policyId) {\n    const key = 'policy.charge_card.v1';\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish(\n      shared.exhanges.policy,\n      key,\n      Buffer.from(JSON.stringify({ policyId })),\n      {\n        correlationId: policyId,\n        headers: {\n          originatorName: process.env.npm_package_name,\n          originatorVersion: process.env.npm_package_version,\n        },\n      },\n    );\n  }\n\n  /**\n   * Send fiat payout message to broker\n   * @param {string} policyId\n   * @return {Promise<void>}\n   */\n  async payout(policyId) {\n    const key = 'policy.payout.v1';\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish(\n      shared.exhanges.policy,\n      key,\n      Buffer.from(JSON.stringify({ policyId })),\n      {\n        correlationId: policyId,\n        headers: {\n          originatorName: process.env.npm_package_name,\n          originatorVersion: process.env.npm_package_version,\n        },\n      },\n    );\n  }\n\n  /**\n   * Send certificate issuing message to broker\n   * @param {string} policyId\n   * @return {Promise<void>}\n   */\n  async issueCertificate(policyId) {\n    const key = 'policy.issue_certificate.v1';\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish(\n      shared.exhanges.policy,\n      key,\n      Buffer.from(JSON.stringify({ policyId })),\n      {\n        correlationId: policyId,\n        headers: {\n          originatorName: process.env.npm_package_name,\n          originatorVersion: process.env.npm_package_version,\n        },\n      },\n    );\n  }\n}\n\nmodule.exports = GenericInsurance;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "shared",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~shared",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "{\"exhanges\": *, \"queues\": *, \"topic\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "class",
    "name": "Logger",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~Logger",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "importStyle": null,
    "description": "Logger",
    "lineNumber": 24,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~Logger#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 28
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "info",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~Logger",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~Logger#info",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "error",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~Logger",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~Logger#error",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "class",
    "name": "GenericInsurance",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "importStyle": "GenericInsurance",
    "description": "Generic Insurance application wrapper",
    "lineNumber": 37,
    "interface": false
  },
  {
    "__docId__": 71,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "_app",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#_app",
    "access": "private",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "log",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#log",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "_connections",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#_connections",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "listen",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#listen",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "amqpBroker",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "wsPort",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "register",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#register",
    "access": "public",
    "description": "Registrer WebSocket connection",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "processMessage",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#processMessage",
    "access": "public",
    "description": "Process broker's message",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "connectionId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "send",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#send",
    "access": "public",
    "description": "Send message to WebSocket client",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "connectionId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "createPolicy",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#createPolicy",
    "access": "public",
    "description": "Send policy creation message to broker",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clientId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "chargeCard",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#chargeCard",
    "access": "public",
    "description": "Send card charding message to broker",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "payout",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#payout",
    "access": "public",
    "description": "Send fiat payout message to broker",
    "lineNumber": 208,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "issueCertificate",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#issueCertificate",
    "access": "public",
    "description": "Send certificate issuing message to broker",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js",
    "content": "const FlightDelayInsurance = require('./FlightDelayInsurance');\nconst GenericInsurance = require('./GenericInsurance');\n\n\nconst flightDelayInsurance = new FlightDelayInsurance();\nconst genericInsurance = new GenericInsurance(flightDelayInsurance);\n\ngenericInsurance.listen({\n  amqpBroker: process.env.MESSAGE_BROKER || 'amqp://localhost:5672',\n  wsPort: 3000,\n});\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "flightDelayInsurance",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js~flightDelayInsurance",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "genericInsurance",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js~genericInsurance",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/internals/enzyme-setup.js",
    "content": "import { configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\n\nconfigure({ adapter: new Adapter() });\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/internals/enzyme-setup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js",
    "content": "import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport Root from '../containers/Root';\n\n/**\n * Application\n * @return {*}\n * @constructor\n */\nconst App = () => <Root />;\n\n\nexport default hot(module)(App);\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "App",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js~App",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js",
    "importStyle": null,
    "description": "Application",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, Text, Button, TextInputField,\n} from 'evergreen-ui';\n\n/**\n * Formatted log message component\n * @param {{}} msg\n * @param {numver} id\n * @return {*}\n * @constructor\n */\nconst LogMessage = ({ msg, id }) => {\n  const { from, topic, msg: message } = JSON.parse(msg);\n\n  return (\n    <Card elevation={0} backgroundColor=\"#ebf3fc\" paddingLeft={10} paddingRight={10} paddingTop={4} paddingBottom={4} marginTop={10}>\n      <div>\n        <Text fontSize={14} fontWeight=\"bold\">\n          {id}\n.\n          {from}\n        </Text>\n      </div>\n      {topic && (\n      <div>\n        <Text fontSize={13} fontWeight=\"bold\">\n        Topic:\n          {' '}\n          {topic}\n        </Text>\n        <br />\n      </div>\n      )}\n      <div style={{ marginTop: 2 }}>\n        <Text fontSize={13}>\n          {message}\n        </Text>\n      </div>\n    </Card>\n  );\n};\n\nLogMessage.propTypes = {\n  msg: PropTypes.shape.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\n/**\n * Layout\n */\nclass App extends Component {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {\n      socket: null,\n      logs: [],\n      form: {\n        firstname: '',\n        lastname: '',\n        email: '',\n        from: '',\n        to: '',\n        date: '',\n      },\n    };\n  }\n\n  /**\n   * ComponentDipMount component's livecycle event\n   */\n  componentDidMount() {\n    const socket = new WebSocket(`${window.location.href.replace(/^http/, 'ws')}api/ws`);\n\n    socket.onopen = () => this.state.socket = socket;\n    socket.onclose = () => this.pushLog(JSON.stringify({ app: 'UI', msg: 'WS connection closed' }));\n    socket.onmessage = msg => this.pushLog(msg.data);\n    socket.onerror = (err) => {\n      console.log(err);\n    };\n  }\n\n  /**\n   * Prepend logs message with new message\n   * @param {{}} msg\n   */\n  pushLog = (msg) => {\n    const { logs } = this.state;\n    this.setState({ logs: [msg, ...logs] });\n  };\n\n  /**\n   * Handle application form submit event\n   * @param {event} event\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { socket, form } = this.state;\n\n    if (socket) {\n      socket.send(JSON.stringify({ type: 'apply', data: form }));\n    } else {\n      this.setState({ logs: [{ from: 'etherisc_flight_delay_ui', msg: 'WS connection is not established' }] });\n    }\n  };\n\n  /**\n   * Handle application form field change\n   * @param {string} field\n   * @return {Function}\n   */\n  handleChange = field => (event) => {\n    const { form } = this.state;\n\n    this.setState({ form: { ...form, [field]: event.target.value } });\n  };\n\n  /**\n   * Render component\n   * @return {*}\n   */\n  render() {\n    const { logs, form } = this.state;\n\n    const {\n      firstname, lastname, email, from, to, date,\n    } = form;\n\n    const messages = logs.map((log, i) => (\n      <LogMessage\n        key={Math.random()}\n        msg={log}\n        id={logs.length - i}\n      />\n    ));\n\n    return (\n      <div>\n        <Card display=\"flex\">\n          <Card\n            backgroundColor=\"white\"\n            elevation={2}\n            width=\"50%\"\n            margin={24}\n            display=\"flex\"\n            padding={24}\n            flexDirection=\"column\"\n          >\n            <Text marginBottom={20}>Flight Delay Dapp UI</Text>\n\n            <form onSubmit={this.handleSubmit}>\n              <TextInputField\n                label=\"First name\"\n                placeholder=\"Enter your first name\"\n                value={firstname}\n                onChange={this.handleChange('firstname')}\n              />\n\n              <TextInputField\n                label=\"Last name\"\n                placeholder=\"Enter your last name\"\n                value={lastname}\n                onChange={this.handleChange('lastname')}\n              />\n\n              <TextInputField\n                label=\"Email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={this.handleChange('email')}\n              />\n\n              <TextInputField\n                label=\"From\"\n                placeholder=\"Departure airport, e.g. SFO\"\n                value={from}\n                onChange={this.handleChange('from')}\n              />\n\n              <TextInputField\n                label=\"To\"\n                placeholder=\"Arrival airport, e.g. ZRH\"\n                value={to}\n                onChange={this.handleChange('to')}\n              />\n\n              <TextInputField\n                label=\"Date of departure\"\n                placeholder=\"Enter date of departure, e.g. 2018-09-01\"\n                value={date}\n                onChange={this.handleChange('date')}\n              />\n\n              <Button appearance=\"green\" float=\"right\" type=\"submit\">Apply</Button>\n            </form>\n          </Card>\n\n          <Card\n            backgroundColor=\"#153656\"\n            color=\"white\"\n            elevation={2}\n            width=\"50%\"\n            margin={24}\n            display=\"flex\"\n            padding={24}\n            flexDirection=\"column\"\n          >\n            <Text color=\"white\">App logs</Text>\n\n            <Card height={570} overflow=\"scroll\">\n              {messages}\n            </Card>\n          </Card>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "LogMessage",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~LogMessage",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "importStyle": null,
    "description": "Formatted log message component",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "numver"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "class",
    "name": "App",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "importStyle": "App",
    "description": "Layout",
    "lineNumber": 53,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 94,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 57
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "state",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#state",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "{\"socket\": *, \"logs\": *, \"form\": *}"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#componentDidMount",
    "access": "public",
    "description": "ComponentDipMount component's livecycle event",
    "lineNumber": 77,
    "params": [],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "pushLog",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#pushLog",
    "access": "public",
    "description": "Prepend logs message with new message",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "handleSubmit",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#handleSubmit",
    "access": "public",
    "description": "Handle application form submit event",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "handleChange",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#handleChange",
    "access": "public",
    "description": "Handle application form field change",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "render",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#render",
    "access": "public",
    "description": "Render component",
    "lineNumber": 128,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/root.js",
    "content": "import React from 'react';\nimport { render } from 'react-dom';\nimport App from './bootstrap';\n\n\nrender(<App />, document.getElementById('app'));\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/src/root.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "content": "const path = require('path');\nconst webpack = require('webpack');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\n\nconst PROD = process.env.NODE_ENV === 'production';\n\n/**\n * Append hash suffix\n * @param {string} template\n * @param {string} hash\n * @return {*}\n */\nconst addHash = (template, hash) => template.replace(/\\.[^.]+$/, `.[${hash}]$&`);\n\nconst config = {\n  mode: PROD ? 'production' : 'development',\n\n  entry: {\n    app: [\n      path.join(process.cwd(), 'src/root.js'),\n    ],\n  },\n\n  output: {\n    path: path.join(process.cwd(), 'build'),\n    publicPath: '/',\n    filename: '[name].js',\n    chunkFilename: '[name].chunk.js',\n  },\n\n  resolve: {\n    modules: ['node_modules'],\n    extensions: ['.js'],\n  },\n\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            cacheDirectory: true,\n            babelrc: true,\n          },\n        },\n      },\n      {\n        // Preprocess own .css files\n        // List of loaders, see https://webpack.js.org/loaders/#styling\n        test: /\\.css$/,\n        exclude: /node_modules/,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        // Preprocess 3rd party .css files located in node_modules\n        test: /\\.css$/,\n        include: /node_modules/,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.(eot|otf|ttf|woff|woff2)$/,\n        use: 'file-loader',\n      },\n      {\n        test: /\\.(png|jpg|jpeg|gif|ttf|eot|otf|woff|woff2)/,\n        use: addHash('file-loader?name=[name].[ext]&outputPath=assets/', 'hash:6'),\n      },\n      {\n        test: /\\.svg$/,\n        use: [\n          {\n            loader: 'svg-url-loader',\n            options: {\n              // Inline files smaller than 10 kB\n              limit: 10 * 1024,\n              noquotes: true,\n            },\n          },\n        ],\n      },\n\n      {\n        test: /\\.(mp4|webm)$/,\n        use: {\n          loader: 'url-loader',\n          options: {\n            limit: 10000,\n          },\n        },\n      },\n      {\n        test: /\\.html$/,\n        use: 'html-loader',\n      },\n    ],\n  },\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: path.join(__dirname, 'src/app.html'),\n    }),\n    new webpack.DefinePlugin({\n      'process.env': {\n        NODE_ENV: JSON.stringify(process.env.NODE_ENV),\n        API_HOST: process.env.API_HOST,\n        API_PORT: process.env.API_PORT,\n      },\n    }),\n  ].filter(Boolean),\n\n  target: 'web',\n\n  devServer: {\n    stats: {\n      hash: false,\n      version: false,\n      timings: true,\n      assets: true,\n      chunks: false,\n      modules: false,\n      cached: true,\n      colors: true,\n    },\n    proxy: {\n      '/api/ws': {\n        target: 'ws://localhost:3000',\n        logLevel: 'debug',\n        ws: true,\n      },\n    },\n  },\n};\n\nmodule.exports = config;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "PROD",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js~PROD",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "addHash",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js~addHash",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "importStyle": null,
    "description": "Append hash suffix",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "config",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js~config",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "importStyle": "config",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "{\"mode\": *, \"entry\": *, \"output\": *, \"resolve\": *, \"module\": *, \"plugins\": *, \"target\": string, \"devServer\": *}"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "dip-platform/commands/collectCoverage.js",
    "content": "const { Command } = require('@oclif/command');\nconst glob = require('fast-glob');\nconst fs = require('fs');\nconst path = require('path');\nconst { EOL } = require('os');\n\n/**\n * Collect coverage reports command\n */\nclass CollectCoverage extends Command {\n  /**\n   * Format moverage metric string\n   * @param {{}} metric\n   * @return {string}\n   */\n  getMetric(metric) {\n    return `${metric.pct}% (${metric.covered}/${metric.total})`;\n  }\n\n  /**\n   * Collect coverage reports from microservices and write results into README.md\n   * @return {Promise<void>}\n   */\n  async run() {\n    const patterns = [\n      '**/package.json',\n      '!package.json',\n      '!**/node_modules/**',\n    ];\n\n    const files = await glob(patterns.filter(Boolean));\n\n    const rows = [];\n\n    const header = `###### Test coverage summary\n\nModule         | % Stmts       | % Branch      | % Funcs       | % Lines\n-------------- | --------------| --------------| --------------| --------------`;\n\n    const footer = '[endOfCoverageTable]: #';\n\n    files.forEach((file) => {\n      const packageJson = require(path.join(process.cwd(), file));\n      const name = `${packageJson.name}.v${packageJson.version}`;\n\n      const moduleDir = file.split('/').slice(0, -1);\n      const coverageFile = path.join(process.cwd(), ...moduleDir, 'coverage', 'coverage-summary.json');\n\n      let stats = '- | - | - | -';\n      if (fs.existsSync(coverageFile)) {\n        const { total } = require(coverageFile);\n\n        stats = `${this.getMetric(total.statements)} | ${this.getMetric(total.branches)} | ${this.getMetric(total.functions)} | ${this.getMetric(total.lines)}`;\n      }\n\n      rows.push(`${name} | ${stats}`);\n    });\n\n    const content = `${header}${EOL}${rows.reduce((str, row) => `${str}${row}${EOL}`, '')}${footer}`;\n\n    const readmeFilePath = path.join(process.cwd(), 'README.md');\n    const README = fs.readFileSync(readmeFilePath, 'utf8');\n\n    const updatedReadme = README.replace(/###### Test coverage summary[\\s\\S]+\\[endOfCoverageTable\\]: #/, content);\n\n    fs.writeFileSync(readmeFilePath, updatedReadme);\n  }\n}\n\nCollectCoverage.description = 'Collect coverage reports from modules';\n\nmodule.exports = CollectCoverage;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/commands/collectCoverage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "CollectCoverage",
    "memberof": "dip-platform/commands/collectCoverage.js",
    "static": true,
    "longname": "dip-platform/commands/collectCoverage.js~CollectCoverage",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/commands/collectCoverage.js",
    "importStyle": "CollectCoverage",
    "description": "Collect coverage reports command",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "@oclif/command~Command"
    ]
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "getMetric",
    "memberof": "dip-platform/commands/collectCoverage.js~CollectCoverage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/commands/collectCoverage.js~CollectCoverage#getMetric",
    "access": "public",
    "description": "Format moverage metric string",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "run",
    "memberof": "dip-platform/commands/collectCoverage.js~CollectCoverage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/commands/collectCoverage.js~CollectCoverage#run",
    "access": "public",
    "description": "Collect coverage reports from microservices and write results into README.md",
    "lineNumber": 24,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "dip-platform/commands/deploy.js",
    "content": "const { Command } = require('@oclif/command');\nconst { EOL } = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst { exec, execSync } = require('child_process');\nconst glob = require('fast-glob');\nconst yaml = require('js-yaml');\nconst uuid = require('uuid/v1');\n\n\nconst PROD = process.env.NODE_ENV === 'production';\n\n/**\n * Deploy to k8s command\n */\nclass Deploy extends Command {\n  /**\n   * Promisified exec\n   * @param {string} cmd\n   * @return {Promise}\n   */\n  execute(cmd) {\n    return new Promise((resolve, reject) => {\n      this.log.info(`Run: ${cmd}`);\n\n      const sh = exec(cmd, (err, stdout, stderr) => {\n        if (err) {\n          const error = new Error(err);\n          error.stdout = stdout;\n          error.stderr = stderr;\n\n          this.log.info(stdout);\n          reject(err);\n          return;\n        }\n\n        resolve({ stdout, stderr });\n      });\n\n      sh.stdout.on('data', this.log.info);\n    });\n  }\n\n  /**\n   * Run deploy command\n   * @return {Promise<void>}\n   */\n  async run() {\n    if (PROD && !process.env.GCLOUD_CLUSTER) throw new Error('GKE cluster should be specified');\n    if (PROD && !process.env.GCLOUD_PROJECT) throw new Error('GKE project should be specified');\n    if (PROD && !process.env.GCLOUD_ZONE) throw new Error('GKE zone should be specified');\n\n    this.log = {\n      info: console.log, // eslint-disable-line\n    };\n\n    const patterns = [\n      '**/k8s*.yaml',\n      '!**/node_modules/**',\n      PROD && '!**/secrets/**',\n    ].filter(Boolean);\n\n    const files = await glob(patterns);\n\n    const entities = {};\n\n    files.forEach((file) => {\n      const fileContent = fs.readFileSync(file, 'utf8');\n\n      const list = yaml.safeLoadAll(fileContent);\n\n      list.forEach((element) => {\n        if (!entities[element.kind]) entities[element.kind] = [];\n\n        const entity = {};\n\n        const filePathParts = file.split('/');\n\n        if (/<!--image-->/.test(JSON.stringify(element))) {\n          const dockerfilePath = path.join(...filePathParts.slice(0, -2));\n          const packageJsonfile = path.join(...filePathParts.slice(0, -2), 'package.json');\n\n          const packageJson = require(path.join(process.cwd(), packageJsonfile));\n\n          let imageName;\n          if (process.env.NODE_ENV !== 'production') {\n            imageName = `${packageJson.name}:${uuid()}`;\n          } else {\n            const commitHash = execSync('git rev-parse HEAD').toString().trim();\n            imageName = `gcr.io/${process.env.GCLOUD_PROJECT}/${packageJson.name}:${commitHash}`;\n          }\n\n          entity.dockerfilePath = path.join(process.cwd(), dockerfilePath);\n          entity.imageName = imageName;\n          entity.name = packageJson.name;\n          entity.version = packageJson.version;\n          entity.config = JSON.parse(JSON.stringify(element).replace('<!--image-->', imageName));\n          entity.config.metadata.labels.version = packageJson.version;\n        } else {\n          entity.config = element;\n        }\n\n        entities[element.kind].push(entity);\n      });\n    });\n\n\n    if (process.env.NODE_ENV === 'production') {\n      await this.execute(`kubectl config use-context gke_${process.env.GCLOUD_PROJECT}_${process.env.GCLOUD_ZONE}_${process.env.GCLOUD_CLUSTER}`);\n\n      try {\n        await this.execute('kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user $(gcloud config get-value account)');\n      } catch (e) {\n        this.log.info('cluster-admin-binding already exists');\n      }\n    } else {\n      await this.execute('kubectl config use-context minikube');\n      await this.execute('minikube addons enable ingress');\n    }\n\n    const groups = Object.keys(entities);\n\n    for (let i = 0; i < groups.length; i += 1) {\n      const group = groups[i];\n\n      this.log.info(`${EOL}${i + 1}. ${group}`);\n\n      for (let j = 0; j < entities[group].length; j += 1) {\n        const element = entities[group][j];\n\n        this.log.info(`${EOL}Apply ${group} ${element.config.metadata.name}`);\n\n        if (element.dockerfilePath) {\n          this.log.info(`Start Docker build for ${element.imageName}`);\n\n          if (PROD) {\n            await this.execute(`cd ${element.dockerfilePath}; docker build -t ${element.imageName} .`);\n\n            this.log.info('Push image to GCR');\n            await this.execute(`docker push ${element.imageName}`);\n          } else {\n            const tag = element.imageName.replace('@', '');\n            await this.execute(`eval $(minikube docker-env); cd ${element.dockerfilePath}; docker build -t ${tag} .`);\n          }\n        }\n\n        const file = path.join(process.cwd(), `tempfile-${group}-${element.config.metadata.name}.yaml`);\n\n        fs.writeFileSync(file, yaml.safeDump(element.config));\n        await this.execute(`kubectl apply -f ${file}`);\n        fs.unlinkSync(file);\n      }\n    }\n  }\n}\n\nDeploy.description = 'Deploy to Kubernetes cluster command';\n\nmodule.exports = Deploy;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/commands/deploy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "PROD",
    "memberof": "dip-platform/commands/deploy.js",
    "static": true,
    "longname": "dip-platform/commands/deploy.js~PROD",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/commands/deploy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "class",
    "name": "Deploy",
    "memberof": "dip-platform/commands/deploy.js",
    "static": true,
    "longname": "dip-platform/commands/deploy.js~Deploy",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/commands/deploy.js",
    "importStyle": "Deploy",
    "description": "Deploy to k8s command",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "@oclif/command~Command"
    ]
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "execute",
    "memberof": "dip-platform/commands/deploy.js~Deploy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/commands/deploy.js~Deploy#execute",
    "access": "public",
    "description": "Promisified exec",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "run",
    "memberof": "dip-platform/commands/deploy.js~Deploy",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/commands/deploy.js~Deploy#run",
    "access": "public",
    "description": "Run deploy command",
    "lineNumber": 48,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "log",
    "memberof": "dip-platform/commands/deploy.js~Deploy",
    "static": false,
    "longname": "dip-platform/commands/deploy.js~Deploy#log",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "{\"info\": *}"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "content": "const amqp = require('amqplib');\n\n\nconst shared = {\n  exhanges: {\n    policy: 'POLICY',\n  },\n  queues: {\n    policyLog: 'policy.log',\n    policyCreate: 'policy.create',\n  },\n  topic: {\n    policyCreate: 'policy.create',\n    policyCreationSuccess: 'policy.creation_success',\n  },\n};\n\n/**\n * DIP Ethereum Client microservice\n */\nclass DipEtheremClient {\n  /**\n   * Constructor\n   * @param {string} amqpBroker\n   */\n  constructor({ amqpBroker }) {\n    this._amqpBroker = amqpBroker;\n    this._amqp = null;\n  }\n\n  /**\n   * Bootstap and listen\n   * @return {Promise<void>}\n   */\n  async listen() {\n    const conn = await amqp.connect(this._amqpBroker);\n\n    this._amqp = await conn.createChannel();\n\n    await this._amqp.assertExchange(shared.exhanges.policy, 'topic', { durable: true });\n\n    const q = await this._amqp.assertQueue('success_policies', { exclusive: false });\n    await this._amqp.bindQueue(q.queue, shared.exhanges.policy, `${shared.topic.policyCreationSuccess}.v1`);\n\n    await this._amqp.consume(q.queue, this.createTransaction.bind(this), { noAck: true });\n  }\n\n  /**\n   * Handle successed policy creation message\n   * @param {{}} message\n   * @return {Promise<void>}\n   */\n  async createTransaction(message) {\n    // const { routingKey } = message.fields;\n    // const content = message.content.toString();\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    this._amqp.publish(shared.exhanges.policy, 'policy.transaction_created.v1', Buffer.from(JSON.stringify({ policyId: message.properties.correlationId })), {\n      correlationId: message.properties.correlationId,\n      headers: {\n        originatorName: process.env.npm_package_name,\n        originatorVersion: process.env.npm_package_version,\n      },\n    });\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    this._amqp.publish(shared.exhanges.policy, 'policy.state_changed.v1', Buffer.from(JSON.stringify({ policyId: message.properties.correlationId, state: 0 })), {\n      correlationId: message.properties.correlationId,\n      headers: {\n        originatorName: process.env.npm_package_name,\n        originatorVersion: process.env.npm_package_version,\n      },\n    });\n\n    await new Promise(resolve => setTimeout(resolve, 3000));\n\n    this._amqp.publish(shared.exhanges.policy, 'policy.state_changed.v1', Buffer.from(JSON.stringify({ policyId: message.properties.correlationId, state: 1 })), {\n      correlationId: message.properties.correlationId,\n      headers: {\n        originatorName: process.env.npm_package_name,\n        originatorVersion: process.env.npm_package_version,\n      },\n    });\n\n    await new Promise(resolve => setTimeout(resolve, 10000));\n\n    this._amqp.publish(shared.exhanges.policy, 'policy.state_changed.v1', Buffer.from(JSON.stringify({ policyId: message.properties.correlationId, state: 3 })), {\n      correlationId: message.properties.correlationId,\n      headers: {\n        originatorName: process.env.npm_package_name,\n        originatorVersion: process.env.npm_package_version,\n      },\n    });\n  }\n}\n\nmodule.exports = DipEtheremClient;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "shared",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~shared",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"exhanges\": *, \"queues\": *, \"topic\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 118,
    "kind": "class",
    "name": "DipEtheremClient",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "importStyle": "DipEtheremClient",
    "description": "DIP Ethereum Client microservice",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 119,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "amqpBroker",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "_amqpBroker",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient#_amqpBroker",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "listen",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient#listen",
    "access": "public",
    "description": "Bootstap and listen",
    "lineNumber": 35,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "createTransaction",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient#createTransaction",
    "access": "public",
    "description": "Handle successed policy creation message",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_ethereum_client/bootstrap.js",
    "content": "const DipEthereumClient = require('./DipEtheremClient');\n\n\nconst dipEthereumClient = new DipEthereumClient({ amqpBroker: process.env.MESSAGE_BROKER || 'amqp://localhost:5672' });\n\ndipEthereumClient.listen();\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_ethereum_client/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "dipEthereumClient",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/bootstrap.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/bootstrap.js~dipEthereumClient",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_ethereum_client/bootstrap.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "content": "const { Pool } = require('pg');\nconst amqp = require('amqplib');\n\n\nconst shared = {\n  exhanges: {\n    policy: 'POLICY',\n  },\n  queues: {\n    policyLog: 'policy.log',\n    policyCreate: 'policy.create',\n  },\n  topic: {\n    policyCreate: 'policy.create',\n    policyCreationSuccess: 'policy.creation_success',\n  },\n};\n\n/**\n * DIP Event Logging microservice\n */\nclass DipEventLogging {\n  /**\n   * Constructor\n   * @param {string} amqpBroker\n   * @param {string} pgConnectionString\n   */\n  constructor({ amqpBroker, pgConnectionString }) {\n    this._pool = new Pool({\n      connectionString: pgConnectionString,\n    });\n    this._amqpBroker = amqpBroker;\n    this._amqp = null;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async listen() {\n    const conn = await amqp.connect(this._amqpBroker);\n\n    this._amqp = await conn.createChannel();\n\n    await this._amqp.assertExchange(shared.exhanges.policy, 'topic', { durable: true });\n\n    const q = await this._amqp.assertQueue('', { exclusive: false });\n    await this._amqp.bindQueue(q.queue, shared.exhanges.policy, '#');\n\n    await this._amqp.consume(q.queue, async (message) => {\n      await this._pool.query({\n        text: 'INSERT INTO dip_event_logging(properties, fields, content) VALUES($1, $2, $3)',\n        values: [message.properties, message.fields, message.content.toString()],\n      });\n    }, { noAck: true });\n  }\n}\n\nmodule.exports = DipEventLogging;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "shared",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~shared",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"exhanges\": *, \"queues\": *, \"topic\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "class",
    "name": "DipEventLogging",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "importStyle": "DipEventLogging",
    "description": "DIP Event Logging microservice",
    "lineNumber": 22,
    "interface": false
  },
  {
    "__docId__": 130,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "amqpBroker",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pgConnectionString",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "_pool",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#_pool",
    "access": "private",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "_amqpBroker",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#_amqpBroker",
    "access": "private",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "listen",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#listen",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_event_logging/bootstrap.js",
    "content": "const DipEventLogging = require('./DipEventLogging');\n\n\nconst dipEventLogging = new DipEventLogging({\n  amqpBroker: process.env.MESSAGE_BROKER || 'amqp://localhost:5672',\n  pgConnectionString: process.env.DATABASE_URL || 'postgresql://postgresql:postgresql@localhost:5432/postgresql',\n});\n\ndipEventLogging.listen();\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_event_logging/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "dipEventLogging",
    "memberof": "dip-platform/core_microservices/dip_event_logging/bootstrap.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_event_logging/bootstrap.js~dipEventLogging",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_event_logging/bootstrap.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "content": "const amqp = require('amqplib');\n\n\nconst shared = {\n  exhanges: {\n    policy: 'POLICY',\n  },\n  queues: {\n    policyLog: 'policy.log',\n    policyCreate: 'policy.create',\n  },\n  topic: {\n    policyCreate: 'policy.create',\n    policyCreationSuccess: 'policy.creation_success',\n  },\n};\n\n/**\n * DIP Fiat Payment Gateway microservice\n */\nclass DipFiatPaymentGateway {\n  /**\n   * Constructor\n   * @param {string} amqpBroker\n   */\n  constructor({ amqpBroker }) {\n    this._amqpBroker = amqpBroker;\n    this._amqp = null;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async listen() {\n    const conn = await amqp.connect(this._amqpBroker);\n\n    this._amqp = await conn.createChannel();\n\n    await this._amqp.assertExchange(shared.exhanges.policy, 'topic', { durable: true });\n\n    const q = await this._amqp.assertQueue('payments_gateway', { exclusive: false });\n    await this._amqp.bindQueue(q.queue, shared.exhanges.policy, 'policy.charge_card.v1');\n\n    await this._amqp.consume(q.queue, this.chargeCard.bind(this), { noAck: true });\n  }\n\n  /**\n   * Handle card charding message\n   * @param {{}} message\n   * @return {Promise<void>}\n   */\n  async chargeCard(message) {\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    this._amqp.publish(shared.exhanges.policy, 'policy.card_charged.v1', Buffer.from(JSON.stringify({ policyId: message.properties.correlationId })), {\n      correlationId: message.properties.correlationId,\n      headers: {\n        originatorName: process.env.npm_package_name,\n        originatorVersion: process.env.npm_package_version,\n      },\n    });\n  }\n}\n\nmodule.exports = DipFiatPaymentGateway;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "shared",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~shared",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"exhanges\": *, \"queues\": *, \"topic\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "DipFiatPaymentGateway",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "importStyle": "DipFiatPaymentGateway",
    "description": "DIP Fiat Payment Gateway microservice",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "amqpBroker",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "_amqpBroker",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway#_amqpBroker",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "listen",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway#listen",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 35,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "chargeCard",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway#chargeCard",
    "access": "public",
    "description": "Handle card charding message",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_fiat_payment_gateway/bootstrap.js",
    "content": "const DipFiatPaymentGateway = require('./DipFiatPaymentGateway');\n\n\nconst dipFiatPaymentGateway = new DipFiatPaymentGateway({ amqpBroker: process.env.MESSAGE_BROKER || 'amqp://localhost:5672' });\n\ndipFiatPaymentGateway.listen();\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_fiat_payment_gateway/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "dipFiatPaymentGateway",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/bootstrap.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/bootstrap.js~dipFiatPaymentGateway",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_fiat_payment_gateway/bootstrap.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "content": "const amqp = require('amqplib');\n\n\nconst shared = {\n  exhanges: {\n    policy: 'POLICY',\n  },\n  queues: {\n    policyLog: 'policy.log',\n    policyCreate: 'policy.create',\n  },\n  topic: {\n    policyCreate: 'policy.create',\n    policyCreationSuccess: 'policy.creation_success',\n  },\n};\n\n/**\n * DIP Fiat Payout Gateway microservice\n */\nclass DipFiatPayoutGateway {\n  /**\n   * Constructor\n   * @param {string} amqpBroker\n   */\n  constructor({ amqpBroker }) {\n    this._amqpBroker = amqpBroker;\n    this._amqp = null;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async listen() {\n    const conn = await amqp.connect(this._amqpBroker);\n\n    this._amqp = await conn.createChannel();\n\n    await this._amqp.assertExchange(shared.exhanges.policy, 'topic', { durable: true });\n\n    const policyCreateQ = await this._amqp.assertQueue('payout_q', { exclusive: false });\n    await this._amqp.bindQueue(policyCreateQ.queue, shared.exhanges.policy, 'policy.payout.v1');\n\n    await this._amqp.consume(policyCreateQ.queue, this.payout.bind(this), { noAck: true });\n  }\n\n  /**\n   * Handle payout event message\n   * @param {{}} message\n   * @return {Promise<void>}\n   */\n  async payout(message) {\n    // const { routingKey } = message.fields;\n    // const content = message.content.toString();\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    this._amqp.publish(shared.exhanges.policy, 'policy.paid_out.v1', Buffer.from(JSON.stringify({ policyId: message.properties.correlationId })), {\n      correlationId: message.properties.correlationId,\n      headers: {\n        originatorName: process.env.npm_package_name,\n        originatorVersion: process.env.npm_package_version,\n      },\n    });\n  }\n}\n\nmodule.exports = DipFiatPayoutGateway;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "shared",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~shared",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"exhanges\": *, \"queues\": *, \"topic\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "class",
    "name": "DipFiatPayoutGateway",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "importStyle": "DipFiatPayoutGateway",
    "description": "DIP Fiat Payout Gateway microservice",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 152,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "amqpBroker",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "_amqpBroker",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway#_amqpBroker",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "listen",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway#listen",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 35,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "payout",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway#payout",
    "access": "public",
    "description": "Handle payout event message",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_fiat_payout_gateway/bootstrap.js",
    "content": "const DipFiatPayoutGateway = require('./DipFiatPayoutGateway');\n\n\nconst dipFiatPayoutGateway = new DipFiatPayoutGateway({ amqpBroker: process.env.MESSAGE_BROKER || 'amqp://localhost:5672' });\n\ndipFiatPayoutGateway.listen();\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_fiat_payout_gateway/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "dipFiatPayoutGateway",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/bootstrap.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/bootstrap.js~dipFiatPayoutGateway",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_fiat_payout_gateway/bootstrap.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "content": "const amqp = require('amqplib');\n\n\nconst shared = {\n  exhanges: {\n    policy: 'POLICY',\n  },\n  queues: {\n    policyLog: 'policy.log',\n    policyCreate: 'policy.create',\n  },\n  topic: {\n    policyCreate: 'policy.create',\n    policyCreationSuccess: 'policy.creation_success',\n  },\n};\n\n/**\n * DIP PDF Generator microservice\n */\nclass DipPdfGenerator {\n  /**\n   * Constructor\n   * @param {string} amqpBroker\n   */\n  constructor({ amqpBroker }) {\n    this._amqpBroker = amqpBroker;\n    this._amqp = null;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async listen() {\n    const conn = await amqp.connect(this._amqpBroker);\n\n    this._amqp = await conn.createChannel();\n\n    await this._amqp.assertExchange(shared.exhanges.policy, 'topic', { durable: true });\n\n    const policyCreateQ = await this._amqp.assertQueue('pdf_q', { exclusive: false });\n    await this._amqp.bindQueue(policyCreateQ.queue, shared.exhanges.policy, 'policy.issue_certificate.v1');\n\n    await this._amqp.consume(\n      policyCreateQ.queue,\n      this.issueCertificate.bind(this),\n      { noAck: true },\n    );\n  }\n\n  /**\n   * Handle certificate issuing message\n   * @param {{}} message\n   * @return {Promise<void>}\n   */\n  async issueCertificate(message) {\n    // const { routingKey } = message.fields;\n    // const content = message.content.toString();\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    this._amqp.publish(\n      shared.exhanges.policy, 'policy.certificate_issued.v1',\n      Buffer.from(JSON.stringify({ policyId: message.properties.correlationId })), {\n        correlationId: message.properties.correlationId,\n        headers: {\n          originatorName: process.env.npm_package_name,\n          originatorVersion: process.env.npm_package_version,\n        },\n      },\n    );\n  }\n}\n\nmodule.exports = DipPdfGenerator;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "variable",
    "name": "shared",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~shared",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"exhanges\": *, \"queues\": *, \"topic\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "class",
    "name": "DipPdfGenerator",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "importStyle": "DipPdfGenerator",
    "description": "DIP PDF Generator microservice",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 163,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "amqpBroker",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "_amqpBroker",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#_amqpBroker",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "listen",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#listen",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 35,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "issueCertificate",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#issueCertificate",
    "access": "public",
    "description": "Handle certificate issuing message",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 169,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_pdf_generator/bootstrap.js",
    "content": "const DipPdfGenerator = require('./DipPdfGenerator');\n\n\nconst dipPdfGenerator = new DipPdfGenerator({ amqpBroker: process.env.MESSAGE_BROKER || 'amqp://localhost:5672' });\n\ndipPdfGenerator.listen();\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_pdf_generator/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "dipPdfGenerator",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/bootstrap.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/bootstrap.js~dipPdfGenerator",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_pdf_generator/bootstrap.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "content": "const amqp = require('amqplib');\n\n/**\n * DIP Policy Storage microservice\n */\nclass DipPolicyStorage {\n  /**\n   * Constructor\n   * @param {string} amqpBroker\n   */\n  constructor({ amqpBroker }) {\n    this._amqpBroker = amqpBroker;\n    this._amqp = null;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async listen() {\n    const conn = await amqp.connect(this._amqpBroker);\n\n    this._amqp = await conn.createChannel();\n\n    await this._amqp.assertExchange('POLICY', 'topic', { durable: true });\n\n    const policyCreateQ = await this._amqp.assertQueue('policy_storage_q', { exclusive: false });\n    await this._amqp.bindQueue(policyCreateQ.queue, 'POLICY', 'policy.create.v1');\n\n    await this._amqp.consume(policyCreateQ.queue, this.onPolicyCreate.bind(this), { noAck: true });\n  }\n\n  /**\n   * Handle policy creation message\n   * @param {{}} message\n   * @return {Promise<void>}\n   */\n  async onPolicyCreate(message) {\n    // const { routingKey } = message.fields;\n    // const content = message.content.toString();\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    this._amqp.publish('POLICY', 'policy.creation_success.v1', Buffer.from(JSON.stringify({ policyId: message.properties.correlationId })), {\n      correlationId: message.properties.correlationId,\n      headers: {\n        originatorName: process.env.npm_package_name,\n        originatorVersion: process.env.npm_package_version,\n      },\n    });\n  }\n}\n\nmodule.exports = DipPolicyStorage;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 172,
    "kind": "class",
    "name": "DipPolicyStorage",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "importStyle": "DipPolicyStorage",
    "description": "DIP Policy Storage microservice",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 173,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "amqpBroker",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "_amqpBroker",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#_amqpBroker",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "listen",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#listen",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 20,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "onPolicyCreate",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#onPolicyCreate",
    "access": "public",
    "description": "Handle policy creation message",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 179,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js",
    "content": "/**\n * DIP Policy Storage Microservice\n */\nclass DipPolicyStorage {\n  /**\n   * Constructor\n   * @param {Amqp} amqp\n   * @param {Router} router\n   */\n  constructor({ amqp, router }) {\n    this._amqpBroker = amqp;\n    this._router = router;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    this._router.get('/test', ctx => ctx.body = 'test');\n\n    this._amqp = await this._amqpBroker.connection.createChannel();\n\n    await this._amqp.assertExchange('POLICY', 'topic', { durable: true });\n\n    const policyCreateQ = await this._amqp.assertQueue('policy.create', { exclusive: false });\n    await this._amqp.bindQueue(policyCreateQ.queue, 'POLICY', 'policy.create.v1');\n\n    await this._amqp.consume(policyCreateQ.queue, this.onPolicyCreate.bind(this), { noAck: true });\n  }\n\n  /**\n   * Handle policy.create.v1 message\n   * @param {{}} message\n   * @return {Promise<void>}\n   */\n  async onPolicyCreate(message) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    this._amqp.publish('POLICY', 'policy.creation_success.v1', Buffer.from(JSON.stringify({ policyId: message.properties.correlationId })), {\n      correlationId: message.properties.correlationId,\n      headers: {\n        originatorName: process.env.npm_package_name,\n        originatorVersion: process.env.npm_package_version,\n      },\n    });\n  }\n}\n\nmodule.exports = DipPolicyStorage;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 180,
    "kind": "class",
    "name": "DipPolicyStorage",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js",
    "importStyle": "DipPolicyStorage",
    "description": "DIP Policy Storage Microservice",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 181,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Amqp"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 182,
    "kind": "member",
    "name": "_amqpBroker",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage#_amqpBroker",
    "access": "private",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "_router",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage#_router",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage#bootstrap",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 19,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "onPolicyCreate",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage1.js~DipPolicyStorage#onPolicyCreate",
    "access": "public",
    "description": "Handle policy.create.v1 message",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/bootstrap.js",
    "content": "const DipPolicyStorage = require('./DipPolicyStorage');\n\n\nconst dipPolicyStorage = new DipPolicyStorage({ amqpBroker: process.env.MESSAGE_BROKER || 'amqp://localhost:5672' });\n\ndipPolicyStorage.listen();\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_policy_storage/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "dipPolicyStorage",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/bootstrap.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/bootstrap.js~dipPolicyStorage",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/core_microservices/dip_policy_storage/bootstrap.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/bootstrap1.js",
    "content": "const dipMicroservice = require('dip-microservice');\nconst DipPolicyStorage = require('./DipPolicyStorage');\n\n\ndipMicroservice.bootstrap(DipPolicyStorage, { httpPort: 3010 })\n  .catch((err) => {\n    throw new Error(err);\n  });\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/core_microservices/dip_policy_storage/bootstrap1.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 190,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-messages/index.js",
    "content": "const { Validator } = require('jsonschema');\nconst uuid = require('uuid/v4');\nconst types = require('./types');\n\n\nconst validator = new Validator();\n\n/**\n * Validate message against defined schema\n * @param {{}} object\n * @param {string} type\n * @param {string} version\n */\nconst validate = (object, type, version) => {\n  const versionMatcher = types[type];\n  const schema = versionMatcher(version || 'latest');\n  validator.validate(object, schema);\n};\n\n/**\n * Pack message\n * @param {{}} object\n * @param {string} type\n * @param {string} version\n * @return {Buffer}\n */\nconst pack = (object, type, version) => {\n  validate(object, type, version);\n  return Buffer.from(JSON.stringify(object));\n};\n\n/**\n * Unpack message\n * @param {Bufer} buffer\n * @param {string} type\n * @param {string} version\n * @return {*}\n */\nconst unpack = (buffer, type, version) => {\n  const object = JSON.parse(buffer.toString());\n  validate(object, type, version);\n  return object;\n};\n\n/**\n * Set message headers\n * @param {*} customValues\n * @return {{correlationId: string, headers: *}}\n */\nconst headers = (customValues) => {\n  const serviceName = process.env.npm_package_name;\n  const serviceVersion = process.env.npm_package_version;\n  const correlationId = `${uuid()}-${serviceName}-${serviceVersion}-${process.hrtime()[0]}`;\n\n  return {\n    correlationId,\n    headers: Object.assign({\n      originatorName: serviceName,\n      originatorVersion: serviceVersion,\n    }, customValues || {}),\n  };\n};\n\nmodule.exports = {\n  pack, unpack, validate, headers,\n};\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-messages/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "validator",
    "memberof": "dip-platform/shared/etherisc-messages/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-messages/index.js~validator",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/shared/etherisc-messages/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "validate",
    "memberof": "dip-platform/shared/etherisc-messages/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-messages/index.js~validate",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/shared/etherisc-messages/index.js",
    "importStyle": null,
    "description": "Validate message against defined schema",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "pack",
    "memberof": "dip-platform/shared/etherisc-messages/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-messages/index.js~pack",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/shared/etherisc-messages/index.js",
    "importStyle": null,
    "description": "Pack message",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "unpack",
    "memberof": "dip-platform/shared/etherisc-messages/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-messages/index.js~unpack",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/shared/etherisc-messages/index.js",
    "importStyle": null,
    "description": "Unpack message",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Bufer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "headers",
    "memberof": "dip-platform/shared/etherisc-messages/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-messages/index.js~headers",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/shared/etherisc-messages/index.js",
    "importStyle": null,
    "description": "Set message headers",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "customValues",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{correlationId: string, headers: *}"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-messages/types/index.js",
    "content": "const test = require('./test');\n\n\n/**\n * Provider message schema by version\n * @param {{}} versionMapping\n * @return {Function}\n */\nconst makeVersionMatcher = versionMapping => (version) => {\n  const mappingKeys = Object.keys(versionMapping).sort();\n  if (mappingKeys.indexOf(version) >= 0) {\n    return versionMapping[version];\n  }\n  if (version === 'latest') {\n    return versionMapping[mappingKeys[mappingKeys.length - 1]];\n  }\n\n  throw new Error(`${version} - Version unavailable`);\n};\n\nmodule.exports.test = makeVersionMatcher(test);\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-messages/types/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "makeVersionMatcher",
    "memberof": "dip-platform/shared/etherisc-messages/types/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-messages/types/index.js~makeVersionMatcher",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/shared/etherisc-messages/types/index.js",
    "importStyle": null,
    "description": "Provider message schema by version",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "versionMapping",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "variable",
    "name": "test",
    "memberof": "dip-platform/shared/etherisc-messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-messages/types/index.js~test",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/shared/etherisc-messages/types/index.js",
    "importStyle": "{test}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-messages/types/test.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'test',\n  type: 'object',\n  properties: {\n    text: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-messages/types/test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 200,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-messages/types/test.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-messages/types/test.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/shared/etherisc-messages/types/test.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/index.js",
    "content": "const ioModule = require('./io/module');\n\n\nconst ioDeps = ioModule();\n\n/**\n * Dip Microservice\n */\nclass DipMicroservice {\n  /**\n   * Constructor\n   * @param {*} io\n   */\n  constructor(io) {\n    this.io = io;\n  }\n\n  /**\n   * Bootstrap and run\n   * @param {class} Microservice\n   * @param {{}} config\n   * @return {Promise<void>}\n   */\n  async bootstrap(Microservice, config) {\n    this.config = config;\n\n    this.app = new Microservice({\n      amqp: this.io.amqp,\n      router: this.io.router,\n      log: this.io.log,\n      config: this.config,\n    });\n\n    try {\n      await this.io.amqp.connect(this.config.amqpBroker);\n      await this.app.bootstrap();\n      await new Promise((resolve, reject) => {\n        this.io.http.listen(this.config.httpPort, (err) => {\n          if (err) {\n            reject(new Error(err));\n            return;\n          }\n\n          const name = `${process.env.npm_package_name}.v${process.env.npm_package_version}`;\n          this.io.log.info(`Microservice ${name} is listening http at http://localhost:${this.config.httpPort}`);\n          resolve();\n        });\n      });\n    } catch (err) {\n      this.log.error(err);\n      throw new Error(err);\n    }\n  }\n}\n\nmodule.exports = new DipMicroservice(ioDeps);\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-microservice/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 202,
    "kind": "variable",
    "name": "ioDeps",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~ioDeps",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/shared/etherisc-microservice/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 203,
    "kind": "class",
    "name": "DipMicroservice",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/shared/etherisc-microservice/index.js",
    "importStyle": null,
    "description": "Dip Microservice",
    "lineNumber": 9,
    "pseudoExport": true,
    "interface": false
  },
  {
    "__docId__": 204,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "io",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "io",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice#io",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice#bootstrap",
    "access": "public",
    "description": "Bootstrap and run",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": false,
        "name": "Microservice",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "config",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice#config",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "app",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice#app",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "dipMicroservice",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~dipMicroservice",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/shared/etherisc-microservice/index.js",
    "importStyle": "dipMicroservice",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "dip-platform/shared/etherisc-microservice/index.js~DipMicroservice"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/index.js",
    "content": "const amqplib = require('amqplib');\n\n/**\n * RabbitMQ client\n */\nclass Amqp {\n  /**\n   * Connect to RabbitMQ broker\n   * @param {string} connectionString\n   * @return {Promise<void>}\n   */\n  async connect(connectionString) {\n    this.connection = await amqplib.connect(connectionString || 'amqp://localhost:5672');\n  }\n}\n\nmodule.exports = Amqp;\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-microservice/io/amqp/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "class",
    "name": "Amqp",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/index.js",
    "importStyle": "Amqp",
    "description": "RabbitMQ client",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "connect",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#connect",
    "access": "public",
    "description": "Connect to RabbitMQ broker",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "connectionString",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 213,
    "kind": "member",
    "name": "connection",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#connection",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js",
    "content": "module.exports = async function exceptionHandler(ctx, next) {\n  try {\n    await next();\n  } catch (err) {\n    ctx.status = 500;\n\n    if (process.env.NODE_ENV !== 'production') {\n      ctx.body = ctx.body || { error: err.toString() };\n    }\n\n    ctx.app.emit('error', err, ctx);\n  }\n};\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "function",
    "name": "exceptionHandler",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js~exceptionHandler",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js",
    "importStyle": "exceptionHandler",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/http/index.js",
    "content": "const Koa = require('koa');\nconst Router = require('koa-router');\nconst BodyParser = require('koa-bodyparser');\nconst Cors = require('kcors');\nconst Logger = require('koa-logger');\nconst healthCheck = require('./routes/healthCheck');\nconst exceptionHandler = require('./exceptionHandler');\n\n\nconst http = new Koa();\nconst router = new Router();\n\nrouter.get('/metrics', healthCheck);\n\nhttp\n  .use(exceptionHandler)\n  .use(new Logger())\n  .use(new Cors())\n  .use(new BodyParser())\n  .use(router.routes())\n  .use(router.allowedMethods());\n\n\nmodule.exports = { http, router };\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-microservice/io/http/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "variable",
    "name": "http",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~http",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/shared/etherisc-microservice/io/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 218,
    "kind": "variable",
    "name": "router",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~router",
    "access": "public",
    "export": false,
    "importPath": "dip-platform/dip-platform/shared/etherisc-microservice/io/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 219,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/http/routes/healthCheck.js",
    "content": "module.exports = ctx => ctx.body = {\n  status: 'ok',\n};\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-microservice/io/http/routes/healthCheck.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 220,
    "kind": "function",
    "name": "healthCheck",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/routes/healthCheck.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/routes/healthCheck.js~healthCheck",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/shared/etherisc-microservice/io/http/routes/healthCheck.js",
    "importStyle": "healthCheck",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/log/index.js",
    "content": "module.exports = {\n  info: console.log,\n  error: console.log,\n};\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-microservice/io/log/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/module.js",
    "content": "const Amqp = require('./amqp');\nconst log = require('./log');\nconst { http, router } = require('./http');\n\n\nmodule.exports = () => ({\n  amqp: new Amqp(),\n  log,\n  http,\n  router,\n});\n",
    "static": true,
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/shared/etherisc-microservice/io/module.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "module",
    "memberof": "dip-platform/shared/etherisc-microservice/io/module.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/module.js~module",
    "access": "public",
    "export": true,
    "importPath": "dip-platform/dip-platform/shared/etherisc-microservice/io/module.js",
    "importStyle": "module",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "kind": "index",
    "content": "# DIP Platform Readme\n\n###### Documentation\n![documentation-badge](https://img.shields.io/badge/Documentation-58.51%25%20%2879%2F135%29-yellow.svg)\n\n###### Test coverage summary\n\nModule         | % Stmts       | % Branch      | % Funcs       | % Lines\n-------------- | --------------| --------------| --------------| --------------\n@etherisc/etherisc_flight_delay_api.v0.1.1 | 2.02% (2/99) | 0% (0/24) | 3.23% (1/31) | 2.33% (2/86)\n@etherisc/etherisc_flight_delay_ui.v0.1.1 | 33.33% (11/33) | 0% (0/4) | 28.57% (4/14) | 39.29% (11/28)\n@etherisc/dip_ethereum_client.v0.1.1 | - | - | - | -\ndip_event_logging.v0.1.0 | - | - | - | -\n@etherisc/dip_fiat_payment_gateway.v0.1.1 | - | - | - | -\n@etherisc/dip_fiat_payout_gateway.v0.1.1 | - | - | - | -\n@etherisc/dip_pdf_generator.v1.0.1 | - | - | - | -\n@etherisc/dip_policy_storage.v0.1.1 | - | - | - | -\n@etherisc/test.v0.1.1 | - | - | - | -\n@etherisc/messages.v0.1.1 | - | - | - | -\n@etherisc/microservice.v0.1.1 | - | - | - | -\n[endOfCoverageTable]: #\n\n\n\n* [Contribution guidelines](CONTRIBUTION.md)\n* [License](LICENSE)\n\n## Setup environments\n\n### A. Setup local development environment\n1. Install [Docker](https://docs.docker.com/install/#supported-platforms).\n2. Install [NodeJS](https://nodejs.org/en/). NodeJs version should be >=6 && <10.\n3. `npm install` to install package dependencies\n4. `npm run bootstrap` to install dependencies for Lerna packages\n5. `npm run dev:services:run` to run Docker Compose with RabbitMQ and PostreSQL\n6. `npm run migrate` to run migrations.\n7. `npm run dev` to start applications.\n8. `npm login` login into npm account with access to @etherisc organization private packages.\n9. `npm run publish` to update NPM packages\n\n### B. Setup local development e2e test environment\n1. Install [Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/). Make sure `kubectl` is the latest version.\n2. Run Minikube:\n\n    `minikube start` will start Minikube\n    \n    `minikube ip` will return local Minikube IP\n    \n    `minikube dashboard` will open Minikube dashboard for local Kubernetes cluster\n    \n    `minikube delete` will delete Minikube cluster\n\n    Note that the IP is new each time you restart minikube. You can get it at any time by running `minikube ip`.\n    Keep it handy for all other ports we'll potentially expose later on in the process.\n3. `npm install` to install package dependencies\n\n4. `npm run bootstrap` to install dependencies for Lerna packages\n\n5. `./bin/run deploy` to deploy to Minikube\n\n#### Notes\n- By navigating to a `<minikubeip>:31672` in your browser you can open RabbitMQ's management plugin. The default administrative credentials are `guest/guest`.\n\n- `etherisc_flight_delay_ui` is available on `<minikubeip>:80`.\n\n- `postgresql` is available on `<minikubeip>:30032`. Connections string `postgresql://dipadmin:dippassword@postgres:5432/dip`.\n\n- To check whether the pods were created:\n\n`kubectl get pods --show-labels`\n\n`kubectl describe pod <pod name>`\n\n`kubectl logs <pod name>`\n\n- For the front-end services, the deployments should ideally be accompanied by services exposing node-ports outward. \nBut to forward the ports so deployment port interfaces are available from your local environment, run:\n\n`kubectl port-forward deployment/< DEPLOYMENT NAME> 8080:8080 8081:8081`\n\nFinal param is a list of space-delimetered port pairs going local:minikube.\n    \n    \n### C. Setup local development environment for deployment to GKE clusters\n1. Install and set up [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/)\n2. Install and initialize [Google Cloud SDK](https://cloud.google.com/sdk/docs/quickstarts)\n3. Create account / login to [Google Cloud Platform Console](https://console.cloud.google.com)\n4. In GCP dashboard navigate to Kubernetes Engine > Clusters and create new cluster\n5. Click \"connect\" button and run proposed command.\n6. `npm install` to install package dependencies\n7. `npm run bootstrap` to install dependencies for Lerna packages\n8. `GCLOUD_PROJECT=<project name> GCLOUD_CLUSTER=<cluster name> GLOUD_ZONE=<cluster zone> NODE_ENV=production ./bin/rin deploy` to deploy to GKE cluster\n\n### D. Setup deployment to GKE clusters from Bitbucket Pipelines CI\n\n#### Setup Google Cloud\n1. Create account / login to [Google Cloud Platform Console](https://console.cloud.google.com)\n2. Select or create a GCP project ([manage resources page](https://console.cloud.google.com/cloud-resource-manager))\n3. Make sure that billing is enabled for your project ([learn how](https://cloud.google.com/billing/docs/how-to/modify-project))\n4. Enable the App Engine Admin API ([enable APIs](https://console.cloud.google.com/flows/enableapi?apiid=appengine))\n\n#### Create Kubernetes cluster\n1. In GCP dashboard navigate to Kubernetes Engine > Clusters\n2. Create new cluster\n3. Create secrets using yaml files from `services/secrets`. To encode values use command `echo <password> | tr -d '\\n' | base64`.\n\n#### Create authorization credentials for Bitbucket\nCreate an App Engine service account and API key. Bitbucket needs this information to deploy to App Engine.\n\n1. In the Google Cloud Platform Console, go to the [Credentials](https://console.cloud.google.com/apis/credentials) page.\n\n2. Click Create credentials > Service account key.\n\n3. In the next page select Compute Engine default service account in the Service account dropdown.\n\n4. Click the Create button. A copy of the JSON file downloads to your computer. (This is your JSON credential file)\n\n#### Configure the environment variables required by the pipeline script\nOpen up your terminal and browse to the location of your JSON credential file from earlier. Then run the command below to encode your file in base64 format. Copy the output of the command to your clipboard.\n\n`base64 <your-credentials-file.json>`\n\nGo to your repository settings in Bitbucket and navigate to Pipelines > Environment variables. Create a new variable named GCLOUD_API_KEYFILE and paste the encoded service account credentials in it.\n\nAdd another variable called GCLOUD_PROJECT and set the value to the key of your Google Cloud project that you created in the first step `your-project-name`.\n\nAdd GCLOUD_CLUSTER, GCLOUD_ZONE variables to specify your GKE cluster.\n\nUse custom commands specified in bitbucket-pipelines.yml to deploy info Kubernetes cluster.\n",
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"dip-platform\",\n  \"description\": \"Etherisc Decentralized Insurance Platform\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=9.10.0 <10\",\n    \"npm\": \">6\"\n  },\n  \"scripts\": {\n    \"deploy\": \"./bin/run deploy\",\n    \"bootstrap\": \"lerna bootstrap\",\n    \"migrate\": \"lerna run migrate --parallel\",\n    \"dev\": \"lerna run dev --parallel\",\n    \"dev:services:run\": \"docker-compose -f ./services/compose/docker-compose.yml up -d\",\n    \"dev:services:kill\": \"docker-compose -f ./services/compose/docker-compose.yml kill\",\n    \"lint\": \"eslint --ext js .\",\n    \"docs\": \"esdoc\",\n    \"test:e2e\": \"NODE_ENV=test mocha\",\n    \"test\": \"lerna run test\",\n    \"coverage\": \"lerna run coverage\",\n    \"publish\": \"lerna publish\"\n  },\n  \"files\": [\n    \"*\"\n  ],\n  \"oclif\": {\n    \"commands\": \"./commands\",\n    \"plugins\": [\n      \"@oclif/plugin-help\"\n    ]\n  },\n  \"devDependencies\": {\n    \"amqplib\": \"^0.5.2\",\n    \"app-module-path\": \"^2.2.0\",\n    \"babel-eslint\": \"^9.0.0\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.6.0\",\n    \"eslint-config-airbnb\": \"^17.1.0\",\n    \"eslint-plugin-import\": \"^2.14.0\",\n    \"eslint-plugin-jsx-a11y\": \"^6.1.1\",\n    \"eslint-plugin-react\": \"^7.11.1\",\n    \"lerna\": \"^3.4.0\",\n    \"mocha\": \"^5.2.0\",\n    \"should\": \"^13.2.3\",\n    \"should-sinon\": \"0.0.6\",\n    \"sinon\": \"^6.3.4\",\n    \"wait-on\": \"^3.0.1\",\n    \"ws\": \"^6.0.0\"\n  },\n  \"dependencies\": {\n    \"@oclif/command\": \"^1.5.1\",\n    \"@oclif/config\": \"^1.7.6\",\n    \"@oclif/plugin-help\": \"^2.1.2\",\n    \"@rauschma/stringio\": \"^1.4.0\",\n    \"fast-glob\": \"^2.2.2\",\n    \"js-yaml\": \"^3.12.0\",\n    \"lodash\": \"^4.17.11\",\n    \"uuid\": \"^3.3.2\"\n  }\n}\n",
    "longname": "/Users/kanstantsin/Projects/Altoros/1244_etherisc/dip-platform/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]