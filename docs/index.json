[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "dip-platform/.external-ecmascript.js",
    "static": true,
    "longname": "dip-platform/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "content": "const moment = require('moment');\nconst Web3 = require('web3');\nconst HDWalletProvider = require('truffle-hdwallet-provider');\nconst ABI = require('./EStoreInsurance.json');\n\n\nconst MNEMONIC = 'seed sock milk update focus rotate barely fade car face mechanic mercy';\nconst CONTRACT = '0xeff4c0C8898F05B8c8883D04CfDcc2923CCa7a2A';\nconst ACCOUNT = '0x1b7eeb70b214a41e19fc8ba66fb291b9b097ecaf';\nconst HTTP_PROVIDER = 'https://kovan.infura.io/1reQ7FJQ1zs0QGExhlZ8';\n\nconst CURRENCIES = {\n  EUR: 0,\n  USD: 1,\n  GPB: 2,\n};\n\nconst EXPIRATIONS = {\n  '1 year': () => moment().add(1, 'year').unix(),\n  '2 year': () => moment().add(2, 'year').unix(),\n  '3 year': () => moment().add(3, 'year').unix(),\n};\n\nconst web3 = new Web3();\nconst provider = new HDWalletProvider(MNEMONIC, HTTP_PROVIDER);\nweb3.setProvider(provider);\n\n\n/**\n * EStore insurance API\n */\nclass EStoreInsurance {\n  /**\n   * Constructor\n   * @param {GenericInsurance} genericInsurance\n   * @param {Logger} log\n   */\n  constructor({ genericInsurance, websocket, log }) {\n    this.gi = genericInsurance;\n    this.websocket = websocket;\n    this.log = log;\n  }\n\n  /**\n   * On application started livecycle hook\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    this.websocket.setHandler(this.onWsMessage.bind(this));\n\n    this.contract = new web3.eth.Contract(ABI, CONTRACT, {\n      gasPrice: 5500000,\n      from: ACCOUNT,\n    });\n  }\n\n  /**\n   * Handle message form websocket\n   * @param {string} client\n   * @param {string} payload\n   */\n  onWsMessage(client, payload) {\n    const message = JSON.parse(payload);\n    const { id, type, data } = message;\n    const handler = this[type].bind(this);\n\n    if (!id) {\n      this.log.error('Id should be provided', type, message);\n    }\n\n    if (!type) {\n      this.log.error('Invalid message type', type, message);\n      return;\n    }\n\n    handler(client, { id, data });\n  }\n\n  /**\n   * Handle event from contract\n   * @param {Event} event\n   */\n  onContractEvent(event) {\n    const { name } = event;\n\n    const handler = this[`on${name}`].bind(this);\n\n    if (!handler) {\n      this.log.error('Handler for this event does not exists', event);\n      return;\n    }\n\n    handler(event);\n  }\n\n  /**\n   * Handle LogPolicySetState event\n   * @param {Event} event\n   */\n  onLogPolicySetState(event) {\n    this.log.info('onLogPolicySetState', event);\n  }\n\n\n  /**\n   * Handle LogClaimSetState event\n   * @param {Event} event\n   */\n  onLogClaimSetState(event) {\n    this.log.info('onLogClaimSetState', event);\n  }\n\n  /**\n   * Send newPolicy transaction\n   * @param {string} client\n   * @param {{}} message\n   */\n  newPolicy(client, message) {\n    this.log.info('newPolicy', message);\n\n    try {\n      this.contract.methods.newPolicy(\n        web3.utils.asciiToHex(message.data.policy.vendorCode),\n        web3.utils.asciiToHex(message.data.policy.product),\n        message.data.policy.premium,\n        message.data.policy.sumInsured,\n        CURRENCIES[message.data.policy.currency],\n        EXPIRATIONS[message.data.policy.expiration](),\n        web3.utils.asciiToHex(message.id),\n      )\n        .send()\n        .then(data => this.websocket.send(client, { id: message.id, data }))\n        .catch((e) => {\n          this.log.error(e);\n          this.websocket.send(client, { id: message.id, data: { error: e.message } });\n        });\n    } catch (e) {\n      this.log.error(e);\n      this.websocket.send(client, { id: message.id, data: { error: e.message } });\n    }\n  }\n\n  /**\n   * Send underwrite transaction\n   * @param {string} client\n   * @param {{}} message\n   */\n  async underwrite(client, message) {\n    this.log.info('underwrite', message);\n\n    try {\n      await this.contract.methods.underwrite(message.data.id)\n        .send()\n        .catch((e) => {\n          this.log.error(e);\n          this.websocket.send(client, { id: message.id, data: { error: e.message } });\n        });\n\n      const policy = await this.contract.methods.policies(message.data.id).call();\n      const risk = await this.contract.methods.risks(policy.riskId).call();\n\n      this.websocket.send(client, {\n        id: message.id,\n        data: {\n          policy: { policyId: message.data.id, ...policy, ...risk },\n        },\n      });\n    } catch (e) {\n      this.log.error(e);\n      this.websocket.send(client, { id: message.id, data: { error: e.message } });\n    }\n  }\n\n  /**\n   * Send decline transaction\n   * @param {string} client\n   * @param {{}} message\n   */\n  async decline(client, message) {\n    this.log.info('decline', message);\n\n    try {\n      await this.contract.methods.decline(\n        message.data.id,\n        web3.utils.asciiToHex(message.data.details),\n      )\n        .send()\n        .catch((e) => {\n          this.log.error(e);\n          this.websocket.send(client, { id: message.id, data: { error: e.message } });\n        });\n\n      const policy = await this.contract.methods.policies(message.data.id).call();\n      const risk = await this.contract.methods.risks(policy.riskId).call();\n\n      this.websocket.send(client, {\n        id: message.id,\n        data: {\n          policy: { policyId: message.data.id, ...policy, ...risk },\n        },\n      });\n    } catch (e) {\n      this.log.error(e);\n      this.websocket.send(client, { id: message.id, data: { error: e.message } });\n    }\n  }\n\n  /**\n   * Send newClaim transaction\n   * @param {string} client\n   * @param {{}} message\n   */\n  newClaim(client, message) {\n    this.log.info('newClaim', message);\n\n    try {\n      this.contract.methods.newClaim(\n        message.data.policyId,\n        web3.utils.asciiToHex(message.data.reason),\n      )\n        .send()\n        .then(data => this.websocket.send(client, { id: message.id, data }))\n        .catch((e) => {\n          this.log.error(e);\n          this.websocket.send(client, { id: message.id, data: { error: 'Transaction failed' } });\n        });\n    } catch (e) {\n      this.log.error(e);\n      this.websocket.send(client, { id: message.id, data: { error: 'Invalid arguments for transaction' } });\n    }\n  }\n\n  /**\n   * Send expire transaction\n   * @param {string} client\n   * @param {{}} message\n   */\n  async expire(client, message) {\n    this.log.info('expire', message);\n\n    try {\n      await this.contract.methods.expire(message.data.id)\n        .send()\n        .catch((e) => {\n          this.log.error(e);\n          this.websocket.send(client, { id: message.id, data: { error: e.message } });\n        });\n\n      const policy = await this.contract.methods.policies(message.data.id).call();\n      const risk = await this.contract.methods.risks(policy.riskId).call();\n\n      this.websocket.send(client, {\n        id: message.id,\n        data: {\n          policy: { policyId: message.data.id, ...policy, ...risk },\n        },\n      });\n    } catch (e) {\n      this.log.error(e);\n      this.websocket.send(client, { id: message.id, data: { error: e.message } });\n    }\n  }\n\n  /**\n   * Send rejectClaim transaction\n   * @param {string} client\n   * @param {{}} message\n   */\n  async rejectClaim(client, message) {\n    this.log.info('rejectClaim', message);\n\n    try {\n      await this.contract.methods.rejectClaim(\n        message.data.id,\n        web3.utils.asciiToHex(message.data.details),\n      )\n        .send()\n        .catch((e) => {\n          this.log.error(e);\n          this.websocket.send(client, { id: message.id, data: { error: e.message } });\n        });\n\n      const claim = await this.contract.methods.claims(message.data.id).call();\n      const policy = await this.contract.methods.policies(claim.policyId).call();\n      const risk = await this.contract.methods.risks(policy.riskId).call();\n\n      this.websocket.send(client, {\n        id: message.id,\n        data: {\n          policy: { policyId: claim.policyId, ...policy, ...risk },\n          claim: { claimId: message.data.id, ...claim },\n        },\n      });\n    } catch (e) {\n      this.log.error(e);\n      this.websocket.send(client, { id: message.id, data: { error: e.message } });\n    }\n  }\n\n  /**\n   * Send confirmClaim transaction\n   * @param {string} client\n   * @param {{}} message\n   */\n  async confirmClaim(client, message) {\n    this.log.info('confirmClaim', message);\n\n    try {\n      await this.contract.methods.confirmClaim(\n        message.data.id,\n        web3.utils.asciiToHex(message.data.details),\n      )\n        .send()\n        .catch((e) => {\n          this.log.error(e);\n          this.websocket.send(client, { id: message.id, data: { error: e.message } });\n        });\n\n      const claim = await this.contract.methods.claims(message.data.id).call();\n      const policy = await this.contract.methods.policies(claim.policyId).call();\n      const risk = await this.contract.methods.risks(policy.riskId).call();\n\n      this.websocket.send(client, {\n        id: message.id,\n        data: {\n          policy: { policyId: claim.policyId, ...policy, ...risk },\n          claim: { claimId: message.data.id, ...claim },\n        },\n      });\n    } catch (e) {\n      this.log.error(e);\n      this.websocket.send(client, { id: message.id, data: { error: e.message } });\n    }\n  }\n\n  /**\n   * Send confirmPayout transaction\n   * @param {string} client\n   * @param {{}} message\n   */\n  async confirmPayout(client, message) {\n    this.log.info('confirmPayout', message);\n\n    try {\n      await this.contract.methods.confirmPayout(\n        message.data.id,\n        web3.utils.asciiToHex(message.data.details),\n      )\n        .send()\n        .catch((e) => {\n          this.log.error(e);\n          this.websocket.send(client, { id: message.id, data: { error: e.message } });\n        });\n\n      const policy = await this.contract.methods.policies(message.data.id).call();\n      const risk = await this.contract.methods.risks(policy.riskId).call();\n\n      this.websocket.send(client, {\n        id: message.id,\n        data: {\n          policy: { policyId: message.data.id, ...policy, ...risk },\n        },\n      });\n    } catch (e) {\n      this.log.error(e);\n      this.websocket.send(client, { id: message.id, data: { error: e.message } });\n    }\n  }\n\n  /**\n   * Request list of policies\n   * @param {string} client\n   * @param {{}} message\n   */\n  async getPolicies(client, message) {\n    this.log.info('get policies count', message);\n\n    const total = await this.contract.methods.getPoliciesCount().call();\n\n    const policies = [];\n\n    for (let i = 0; i < total; i += 1) {\n      const policy = await this.contract.methods.policies(i).call();\n      const risk = await this.contract.methods.risks(policy.riskId).call();\n      policies.push({ policyId: i, ...policy, ...risk });\n    }\n\n    this.websocket.send(client, { id: message.id, policies });\n  }\n\n  /**\n   * Request list of claims\n   * @param {string} client\n   * @param {{}} message\n   * @return {Promise<void>}\n   */\n  async getClaims(client, message) {\n    this.log.info('get claims count', message);\n\n    const total = await this.contract.methods.getClaimsCount().call();\n\n    const claims = [];\n\n    for (let i = 0; i < total; i += 1) {\n      const claim = await this.contract.methods.claims(i).call();\n      claims.push({ claimId: i, ...claim });\n    }\n\n    this.websocket.send(client, { id: message.id, claims });\n  }\n}\n\nmodule.exports = EStoreInsurance;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "MNEMONIC",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~MNEMONIC",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "CONTRACT",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~CONTRACT",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "ACCOUNT",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~ACCOUNT",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "HTTP_PROVIDER",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~HTTP_PROVIDER",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "CURRENCIES",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~CURRENCIES",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{\"EUR\": *, \"USD\": number, \"GPB\": number}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "EXPIRATIONS",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EXPIRATIONS",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "{\"1 year\": *, \"2 year\": *, \"3 year\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "web3",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~web3",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "provider",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~provider",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "EStoreInsurance",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_api/EStoreInsurance.js",
    "importStyle": "EStoreInsurance",
    "description": "EStore insurance API",
    "lineNumber": 32,
    "interface": false
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "GenericInsurance"
        ],
        "spread": false,
        "optional": false,
        "name": "genericInsurance",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "log",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "gi",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#gi",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "websocket",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#websocket",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "log",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#log",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#bootstrap",
    "access": "public",
    "description": "On application started livecycle hook",
    "lineNumber": 48,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "contract",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#contract",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "onWsMessage",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#onWsMessage",
    "access": "public",
    "description": "Handle message form websocket",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "onContractEvent",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#onContractEvent",
    "access": "public",
    "description": "Handle event from contract",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "onLogPolicySetState",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#onLogPolicySetState",
    "access": "public",
    "description": "Handle LogPolicySetState event",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "onLogClaimSetState",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#onLogClaimSetState",
    "access": "public",
    "description": "Handle LogClaimSetState event",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "newPolicy",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#newPolicy",
    "access": "public",
    "description": "Send newPolicy transaction",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "underwrite",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#underwrite",
    "access": "public",
    "description": "Send underwrite transaction",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "decline",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#decline",
    "access": "public",
    "description": "Send decline transaction",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "newClaim",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#newClaim",
    "access": "public",
    "description": "Send newClaim transaction",
    "lineNumber": 213,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "expire",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#expire",
    "access": "public",
    "description": "Send expire transaction",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "rejectClaim",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#rejectClaim",
    "access": "public",
    "description": "Send rejectClaim transaction",
    "lineNumber": 269,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "confirmClaim",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#confirmClaim",
    "access": "public",
    "description": "Send confirmClaim transaction",
    "lineNumber": 305,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "confirmPayout",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#confirmPayout",
    "access": "public",
    "description": "Send confirmPayout transaction",
    "lineNumber": 341,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getPolicies",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#getPolicies",
    "access": "public",
    "description": "Request list of policies",
    "lineNumber": 375,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "getClaims",
    "memberof": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_api/EStoreInsurance.js~EStoreInsurance#getClaims",
    "access": "public",
    "description": "Request list of claims",
    "lineNumber": 397,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_api/bootstrap.js",
    "content": "const { bootstrap } = require('@etherisc/microservice');\nconst EStoreInsurance = require('./EStoreInsurance');\n\n\nbootstrap(EStoreInsurance, {\n  amqp: true,\n  genericInsurance: true,\n  httpDevPort: 3010,\n});\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_api/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_contracts/.solcover.js",
    "content": "const testrpc = '-p 8555 '\n  + '--account=\"0x0000000000000000000000000000000000000000000000000000000000000001,1000000000000000000000000\", '\n  + '--account=\"0x0000000000000000000000000000000000000000000000000000000000000002,1000000000000000000000000\", '\n  + '--account=\"0x0000000000000000000000000000000000000000000000000000000000000003,1000000000000000000000000\", '\n  + '--account=\"0x0000000000000000000000000000000000000000000000000000000000000004,1000000000000000000000000\", '\n  + '--account=\"0x0000000000000000000000000000000000000000000000000000000000000005,1000000000000000000000000\", '\n  + '--account=\"0x0000000000000000000000000000000000000000000000000000000000000006,1000000000000000000000000\", '\n  + '--account=\"0x0000000000000000000000000000000000000000000000000000000000000007,1000000000000000000000000\"';\n\nmodule.exports = {\n  port: 8555,\n  testrpcOptions: testrpc,\n  testCommand: 'npm run test',\n  copyNodeModules: false,\n  copyPackages: ['zeppelin-solidity']\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_contracts/.solcover.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "testrpc",
    "memberof": "dip-platform/app_microservices/estore_contracts/.solcover.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_contracts/.solcover.js~testrpc",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_contracts/.solcover.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_contracts/truffle-config.js",
    "content": "/**\n * Use this file to configure your truffle project. It's seeded with some\n * common settings for different networks and features like migrations,\n * compilation and testing. Uncomment the ones you need or modify\n * them to suit your project as necessary.\n *\n * More information about configuration can be found at:\n *\n * truffleframework.com/docs/advanced/configuration\n *\n * To deploy via Infura you'll need a wallet provider (like truffle-hdwallet-provider)\n * to sign your transactions before they're sent to a remote public node. Infura API\n * keys are available for free at: infura.io/register\n *\n *   > > Using Truffle V5 or later? Make sure you install the `web3-one` version.\n *\n *   > > $ npm install truffle-hdwallet-provider@web3-one\n *\n * You'll also need a mnemonic - the twelve word phrase the wallet uses to generate\n * public/private key pairs. If you're publishing your code to GitHub make sure you load this\n * phrase from a file you've .gitignored so it doesn't accidentally become public.\n *\n */\n\nconst HDWalletProvider = require('truffle-hdwallet-provider');\n// const infuraKey = \"fj4jll3k.....\";\n//\n// const fs = require('fs');\n// const mnemonic = fs.readFileSync(\".secret\").toString().trim();\n\nmodule.exports = {\n  /**\n   * Networks define how you connect to your ethereum client and let you set the\n   * defaults web3 uses to send transactions. If you don't specify one truffle\n   * will spin up a development blockchain for you on port 9545 when you\n   * run `develop` or `test`. You can ask a truffle command to use a specific\n   * network from the command line, e.g\n   *\n   * $ truffle test --network <network-name>\n   */\n\n  networks: {\n    // Useful for testing. The `development` name is special - truffle uses it by default\n    // if it's defined here and no other network is specified at the command line.\n    // You should run a client (like ganache-cli, geth or parity) in a separate terminal\n    // tab if you use this network and you must also set the `host`, `port` and `network_id`\n    // options below to some value.\n    //\n    // development: {\n    //  host: \"127.0.0.1\",     // Localhost (default: none)\n    //  port: 8545,            // Standard Ethereum port (default: none)\n    //  network_id: \"*\",       // Any network (default: none)\n    // },\n\n    // Another network with more advanced options...\n    advanced: {\n      // port: 8777,             // Custom port\n      // network_id: 1342,       // Custom network\n      // gas: 8500000,           // Gas sent with each transaction (default: ~6700000)\n      // gasPrice: 20000000000,  // 20 gwei (in wei) (default: 100 gwei)\n      // from: <address>,        // Account to send txs from (default: accounts[0])\n      // websockets: true        // Enable EventEmitter interface for web3 (default: false)\n    },\n\n    // Useful for deploying to a public network.\n    // NB: It's important to wrap the provider as a function.\n    ropsten: {\n      // provider: () => new HDWalletProvider(mnemonic, `https://ropsten.infura.io/${infuraKey}`),\n      // network_id: 3,       // Ropsten's id\n      // gas: 5500000,        // Ropsten has a lower block limit than mainnet\n      // confirmations: 2,    // # of confs to wait between deployments. (default: 0)\n      // timeoutBlocks: 200,  // # of blocks before a deployment times out  (minimum/default: 50)\n      // skipDryRun: true     // Skip dry run before migrations? (default: false for public nets )\n    },\n\n    // Useful for private networks\n    private: {\n      // provider: () => new HDWalletProvider(mnemonic, `https://network.io`),\n      // network_id: 2111,   // This network is yours, in the cloud.\n      // production: true    // Treats this network as if it was a public net. (default: false)\n    },\n\n    kovan: {\n      provider: () => new HDWalletProvider(process.env.MNEMONIC, process.env.HTTP_PROVIDER),\n      network_id: 42,\n      gas: 5500000,\n      confirmation: 2,\n      timeoutBlocks: 200,\n      skipDryRun: true,\n    },\n  },\n\n  // Set default mocha options here, use special reporters etc.\n  mocha: {\n    // timeout: 100000\n  },\n\n  // Configure your compilers\n  compilers: {\n    solc: {\n      version: '0.4.25', // Fetch exact version from solc-bin (default: truffle's version)\n      // docker: true, // Use \"0.5.1\" you've installed locally with docker (default: false)\n      settings: { // See the solidity docs for advice about optimization and evmVersion\n        optimizer: {\n          enabled: true,\n          runs: 200,\n        },\n        evmVersion: 'byzantium',\n      },\n    },\n  },\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_contracts/truffle-config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/env.js",
    "content": "const env = {\n  PORT: 8081,\n  PROXY_API_PORT: 3010,\n  NETWORK: 'kovan',\n};\n\nmodule.exports = env;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/env.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "env",
    "memberof": "dip-platform/app_microservices/estore_ui/env.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/env.js~env",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/env.js",
    "importStyle": "env",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"PORT\": number, \"PROXY_API_PORT\": number, \"NETWORK\": string}"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/internals/enzyme-setup.js",
    "content": "import { configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\n\nconfigure({ adapter: new Adapter() });\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/internals/enzyme-setup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/bootstrap/index.js",
    "content": "import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport Root from '../containers/Root';\n\n/**\n * Application\n * @return {*}\n * @constructor\n */\nconst App = () => <Root />;\n\n\nexport default hot(module)(App);\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/bootstrap/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "App",
    "memberof": "dip-platform/app_microservices/estore_ui/src/bootstrap/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/bootstrap/index.js~App",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/bootstrap/index.js",
    "importStyle": null,
    "description": "Application",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js",
    "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Pane, Dialog, Button, TextInput, toaster,\n} from 'evergreen-ui';\n\n/**\n * Transaction confirmation dialog\n */\nclass ConfirmationDialog extends Component {\n  state = {\n    isShown: false,\n    isLoading: false,\n    details: '',\n  };\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    action: PropTypes.string.isRequired,\n    request: PropTypes.func.isRequired,\n    updateAfterTransaction: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n    withDetails: PropTypes.bool.isRequired,\n    intent: PropTypes.string.isRequired,\n  };\n\n  confirm = () => {\n    const {\n      action, id, request, updateAfterTransaction,\n    } = this.props;\n    const { details } = this.state;\n\n    this.setState({ isLoading: true });\n\n    request(action, { id, details })\n      .then(({ data }) => {\n        if (data.error) {\n          this.setState({ isShown: false });\n          toaster.danger(`An error has occurred: ${data.error}`);\n        } else {\n          this.setState({ isShown: false });\n          updateAfterTransaction(data);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ isShown: false });\n      });\n  };\n\n  /**\n   * Render component\n   * @return {*}\n   */\n  render() {\n    const { isShown, isLoading, details } = this.state;\n    const { label, withDetails, intent } = this.props;\n\n    return (\n      <Pane>\n        <Dialog\n          isShown={isShown}\n          title=\"Transaction confirmation\"\n          onCloseComplete={() => this.setState({ isShown: false, isLoading: false })}\n          isConfirmLoading={isLoading}\n          onConfirm={this.confirm}\n          confirmLabel={isLoading ? 'Loading...' : label}\n        >\n          {!withDetails && (\n            <p>Are you sure you want to confirm this transaction?</p>\n          )}\n\n          {withDetails && (\n            <div>\n              <p>Are you sure you want to confirm this transaction? If so, please specify the details:</p>\n              <TextInput\n                placeholder=\"Details\"\n                width=\"100%\"\n                fontSize=\"14px\"\n                onChange={e => this.setState({ details: e.target.value })}\n                value={details}\n              />\n            </div>\n          )}\n        </Dialog>\n\n        <Button\n          onClick={() => this.setState({ isShown: true })}\n          marginRight={16}\n          appearance=\"primary\"\n          height={32}\n          intent={intent}\n        >\n          {label}\n        </Button>\n      </Pane>\n    );\n  }\n}\n\nexport default ConfirmationDialog;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "class",
    "name": "ConfirmationDialog",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js~ConfirmationDialog",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js",
    "importStyle": "ConfirmationDialog",
    "description": "Transaction confirmation dialog",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "state",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js~ConfirmationDialog",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js~ConfirmationDialog#state",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "propTypes",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js~ConfirmationDialog",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js~ConfirmationDialog.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "confirm",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js~ConfirmationDialog",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js~ConfirmationDialog#confirm",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "render",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js~ConfirmationDialog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/ConfirmationDialog/index.js~ConfirmationDialog#render",
    "access": "public",
    "description": "Render component",
    "lineNumber": 55,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n  width: 30%;\n  background: #113754;\n  height: 100%;\n  color: #fff;\n  z-index: 1;\n  position: fixed;\n  right: 0;\n`;\n\nconst Title = styled.div`\n  position: fixed;\n  width: 100%;\n  background: #113754;\n  border-bottom: 1px solid #2e6498;\n  padding: 20px;\n  z-index: 1000;\n`;\n\nconst List = styled.div`\n  overflow-y: scroll;\n  height: 100%;\n  padding-top: 60px;\n`;\n\nconst Message = styled.div`\n  background: #415e78;\n  padding: 12px;\n  margin: 10px 10px;\n`;\n\n/**\n * Application console\n * @param {array} logs\n * @return {*}\n * @constructor\n */\nconst Console = ({ logs }) => (\n  <Wrapper>\n    <Title>Console</Title>\n\n    <List>\n      {logs.map(log => (\n        <Message key={Math.random()}>\n          {log}\n        </Message>\n      ))}\n    </List>\n  </Wrapper>\n);\n\nConsole.propTypes = {\n  logs: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Console;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "Wrapper",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js~Wrapper",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "Title",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js~Title",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "List",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js~List",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "Message",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js~Message",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "Console",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/Console/index.js~Console",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/Console/index.js",
    "importStyle": "Console",
    "description": "Application console",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "logs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "content": "import React from 'react';\nimport styled from 'styled-components';\nimport { darken } from 'polished';\nimport { Link } from 'react-router-dom';\n\n\nconst Wrapper = styled.div`\n  position: fixed;\n  width: 70%;\n  background: #ffffff;\n  box-shadow: 0 2px 6px 0 rgba(0,0,0,0.12);\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  z-index: 2;\n`;\n\nconst Logotype = styled.div`\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n\nconst Nav = styled.div`\n  a {\n    background: #f4f5f6;\n    font-weight: bold;\n    color: #455262;\n    text-decoration: none;\n    padding: 10px 15px;\n    margin-left: 10px;\n    font-size: 14px;\n    \n    :hover {\n      background: ${darken('0.03', '#f4f5f6')}\n    }\n  }\n  \n  a.admin {\n    background: #feb2b3;\n    \n    :hover {\n      background: ${darken('0.03', '#feb2b3')}\n    }\n  }\n`;\n\n/**\n * Application header\n * @return {*}\n * @constructor\n */\nconst Header = () => (\n  <Wrapper>\n    <Logotype>Electronic store</Logotype>\n    <Nav>\n      <Link to=\"/\">Catalog</Link>\n      <Link to=\"/claim\">Claim</Link>\n      <Link className=\"admin\" to=\"/dashboard\">Admin dashboard</Link>\n    </Nav>\n  </Wrapper>\n);\n\nexport default Header;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "Wrapper",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/Header/index.js~Wrapper",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "Logotype",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/Header/index.js~Logotype",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "Nav",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/Header/index.js~Nav",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "Header",
    "memberof": "dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/components/Header/index.js~Header",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/components/Header/index.js",
    "importStyle": "Header",
    "description": "Application header",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "content": "import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { darken } from 'polished';\nimport numeral from 'numeral';\n\n\nimport products from 'products.json';\n\n\nconst Article = styled.article`\n  margin: 0 auto;\n  width: 900px;\n  padding: 100px 20px 20px 20px;\n`;\n\nconst List = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40px;\n`;\n\nconst Product = styled.div`\n  width: 30%;\n  background: #fff; \n  border: 1px solid #e3e7ea;\n  text-align: center;\n  padding: 20px 0 20px 0;\n  \n  img {\n    margin: 15px 0;\n  }\n`;\n\nconst BuyBtn = styled.div`\n  margin: 10px 0;\n  \n  a {\n    background: #29a06b;\n    display: block;\n    padding: 10px;\n    text-decoration: none;\n    font-weight: bold;\n    color: #fff;\n    margin: 20px 20px 0;\n    \n    :hover {\n      background: ${darken('0.03', '#29a06b')}\n    }\n  }\n`;\n\n/**\n * Catalog page\n * @return {*}\n * @constructor\n */\nconst Catalog = () => {\n  const items = products.map(item => (\n    <Product key={item.vendorCode}>\n      <h3>{item.product}</h3>\n      <img src={item.image} width=\"200\" alt={item.product} />\n\n      <div>Price: <b>{numeral(item.price).format('0,0.00')}</b> {item.currency}</div>\n\n      <BuyBtn>\n        <Link to={`/checkout/${item.vendorCode}`}>Buy</Link>\n      </BuyBtn>\n    </Product>\n  ));\n\n  return (\n    <Article>\n      <Helmet>\n        <title>Catalog</title>\n      </Helmet>\n\n      <h1>Catalog</h1>\n\n      <List>\n        {items}\n      </List>\n    </Article>\n  );\n};\n\nexport default Catalog;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "Article",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js~Article",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "List",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js~List",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "Product",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js~Product",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "BuyBtn",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js~BuyBtn",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "Catalog",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js~Catalog",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Catalog/index.js",
    "importStyle": "Catalog",
    "description": "Catalog page",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js",
    "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport { Button, TextInputField } from 'evergreen-ui';\nimport styled from 'styled-components';\n\n\nconst CardDetails = styled.div`\n  background: #f1f1f1;\n  padding: 20px;\n  margin-bottom: 20px;\n`;\n\n/**\n * Checkout form with card charging\n */\n@injectStripe\nclass CardForm extends Component {\n  state = {\n    form: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      token: '',\n    },\n  };\n\n  static propTypes = {\n    stripe: PropTypes.shape().isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Handle application form field change\n   * @param {string} field\n   * @return {Function}\n   */\n  handleChange = field => (event) => {\n    const { form } = this.state;\n\n    this.setState({ form: { ...form, [field]: event.target.value } });\n  };\n\n  /**\n   * Submit form\n   * @param {Event} e\n   */\n  submit = (e) => {\n    e.preventDefault();\n\n    const { form } = this.state;\n    const { stripe, handleSubmit } = this.props;\n\n    stripe.createToken()\n      .then((payload) => {\n        if (payload.error) {\n          console.error(payload.error);\n        } else {\n          const token = payload.token.id;\n\n          handleSubmit({ ...form, token });\n        }\n      });\n  };\n\n  /**\n   * Render component\n   * @return {*}\n   */\n  render() {\n    const { form } = this.state;\n    const {\n      firstname, lastname, email,\n    } = form;\n\n    return (\n      <form onSubmit={this.submit}>\n        <TextInputField\n          label=\"Firstname\"\n          placeholder=\"Enter your firstname\"\n          value={firstname}\n          onChange={this.handleChange('firstname')}\n          required\n        />\n\n        <TextInputField\n          label=\"Lastname\"\n          placeholder=\"Enter your lastname\"\n          value={lastname}\n          onChange={this.handleChange('lastname')}\n          required\n        />\n\n        <TextInputField\n          label=\"Email\"\n          placeholder=\"Enter your email\"\n          value={email}\n          onChange={this.handleChange('email')}\n          required\n        />\n\n        <CardDetails>\n          <CardElement style={{ base: { fontSize: '16px' } }} hidePostalCode />\n        </CardDetails>\n\n        <Button appearance=\"primary\" intent=\"success\" type=\"submit\" height={35}>Buy</Button>\n      </form>\n    );\n  }\n}\n\nexport default CardForm;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "CardDetails",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardDetails",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "class",
    "name": "CardForm",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js",
    "importStyle": "CardForm",
    "description": "Checkout form with card charging",
    "lineNumber": 18,
    "decorators": [
      {
        "name": "injectStripe",
        "arguments": null
      }
    ],
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "state",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm#state",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "propTypes",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "handleChange",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm#handleChange",
    "access": "public",
    "description": "Handle application form field change",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "submit",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm#submit",
    "access": "public",
    "description": "Submit form",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "render",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/form.js~CardForm#render",
    "access": "public",
    "description": "Render component",
    "lineNumber": 70,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { StripeProvider, Elements } from 'react-stripe-elements';\nimport products from 'products.json';\nimport numeral from 'numeral';\nimport CardForm from './form';\n\n\nconst Article = styled.article`\n  padding: 100px 20px 20px;\n  width: 900px;\n  margin: 0 auto;\n`;\n\nconst Product = styled.div`\n  display: flex;\n`;\n\nconst Details = styled.div`\n  flex-glow: 1;\n  padding-left: 20px;\n`;\n\nconst CheckoutForm = styled.div`\n  padding: 20px;\n  border: 2px solid #39a065;\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 4px;\n`;\n\nconst Option = styled.div`\n  margin-bottom: 8px;\n  \n  span {\n    margin-left: 10px;\n  }\n`;\n\nconst Purchase = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n`;\n\n/**\n * Checkout page\n */\nclass Checkout extends Component {\n  state = {\n    insurance: 0,\n    insuranceOptions: [\n      { label: 'No', price: 0 },\n      { label: '1 year', price: 10 },\n      { label: '2 year', price: 15 },\n      { label: '3 year', price: 20 },\n    ],\n    product: products.find((p) => {\n      const { match: { params: { vendorCode } } } = this.props;\n      return p.vendorCode === vendorCode;\n    }),\n\n    loading: false,\n\n    purchase: null,\n  };\n\n  static propTypes = {\n    request: PropTypes.func.isRequired,\n    match: PropTypes.shape().isRequired,\n  };\n\n  /**\n   * Calculate total sum\n   * @param {number} value\n   * @return {number}\n   */\n  getTotal(value) {\n    const price = Number(value);\n    const { insuranceOptions, insurance } = this.state;\n\n    return price * (1 + insuranceOptions[insurance].price / 100);\n  }\n\n  /**\n   * Select insurance option\n   * @param {string} insurance\n   * @return {void}\n   */\n  setInsurance = insurance => () => this.setState({ insurance });\n\n  /**\n   * Submit checkout form\n   * @param {{}} data\n   */\n  handleSubmit = (data) => {\n    const { insurance, product, insuranceOptions } = this.state;\n    const { request } = this.props;\n\n    this.setState({ loading: true });\n\n    if (insurance) {\n      const input = {\n        customer: {\n          firstname: data.firstname,\n          lastname: data.lastname,\n          email: data.email,\n        },\n        policy: {\n          distributorId: '11111111-1111-1111-1111-111111111111',\n          vendorCode: product.vendorCode,\n          product: product.product,\n          premium: product.price * insuranceOptions[insurance].price,\n          sumInsured: product.price,\n          currency: product.currency,\n          expiration: insuranceOptions[insurance].label,\n        },\n      };\n\n      request('newPolicy', input)\n        .then((result) => {\n          this.setState({\n            loading: false,\n            purchase: {\n              product: {\n                vendorCode: product.vendorCode,\n                product: product.product,\n              },\n              policy: {\n                id: result.data.events.LogPolicySetState.returnValues._policyId,\n                transactionHash: result.data.transactionHash,\n              },\n            },\n          });\n        });\n    } else {\n      this.setState({\n        loading: false,\n        purchase: {\n          product: {\n            vendorCode: product.vendorCode,\n            product: product.product,\n          },\n        },\n      });\n    }\n  };\n\n  /**\n   * Render component\n   * @return {*}\n   */\n  render() {\n    const {\n      insurance, insuranceOptions, product, loading, purchase,\n    } = this.state;\n\n    const options = insuranceOptions.map((option, i) => (\n      <Option key={option.label} name={option.label}>\n        <label htmlFor={option.label}>\n          <input\n            type=\"radio\"\n            name=\"insurance\"\n            value={option.label}\n            checked={insurance === i}\n            onChange={this.setInsurance(i)}\n          />\n          <span>\n            {option.label} {option.price !== 0 && <div>(+ {numeral(product.price * option.price / 100).format('0,0.00')} {product.currency})</div>}\n          </span>\n        </label>\n      </Option>\n    ));\n\n    const NETWORK = 'mainnet';\n    const etherscanUrl = NETWORK === 'mainnet' ? 'https://etherscan.io' : `https://${NETWORK}.etherscan.io`;\n\n    return (\n      <Article>\n        <Helmet>\n          <title>Checkout</title>\n        </Helmet>\n\n        <Product>\n          <img src={product.image} width=\"200\" alt={product.product} />\n\n          <Details>\n            <h2>{product.product}</h2>\n            <p>{product.details}</p>\n\n            <p>\n              <b>\n                Price: {numeral(product.price).format('0,0.00')} {product.currency}\n              </b>\n            </p>\n          </Details>\n        </Product>\n\n        {!loading && !purchase && (\n          <CheckoutForm>\n            <h3>Checkout</h3>\n\n            <p>Additional insurance:</p>\n\n            {options}\n\n            <h4>Total: {numeral(this.getTotal(product.price)).format('0,0.00')} {product.currency}</h4>\n\n            <StripeProvider apiKey=\"pk_RXwtgk4Z5VR82S94vtwmam6P8qMXQ\">\n              <Elements>\n                <CardForm handleChange={this.handleChange} handleSubmit={this.handleSubmit} />\n              </Elements>\n            </StripeProvider>\n\n          </CheckoutForm>\n        )}\n\n        {loading && !purchase && (\n          <Purchase>\n            <img src=\"/assets/preloader.gif\" alt=\"Preloader\" />\n          </Purchase>\n        )}\n\n        {!loading && purchase && (\n        <div style={{ textAlign: 'center' }}>\n          <h3>Congratulations!</h3>\n          <p><b>Your purchase:</b></p>\n          <p>Product: {product.product}</p>\n\n          {purchase.policy && (\n          <div>\n            <p><b>Policy ID:</b></p>\n            <p>{purchase.policy.id}</p>\n            <p>\n              <a href={`${etherscanUrl}/tx/${purchase.policy.transactionHash}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                Transaction\n              </a>\n            </p>\n          </div>\n          )}\n        </div>\n        )}\n\n      </Article>\n    );\n  }\n}\n\nexport default Checkout;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "Article",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Article",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "Product",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Product",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "Details",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Details",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "CheckoutForm",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~CheckoutForm",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "Option",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Option",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "name": "Purchase",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Purchase",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "class",
    "name": "Checkout",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js",
    "importStyle": "Checkout",
    "description": "Checkout page",
    "lineNumber": 52,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "state",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout#state",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "propTypes",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "getTotal",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout#getTotal",
    "access": "public",
    "description": "Calculate total sum",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "setInsurance",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout#setInsurance",
    "access": "public",
    "description": "Select insurance option",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "insurance",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "handleSubmit",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout#handleSubmit",
    "access": "public",
    "description": "Submit checkout form",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "render",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Checkout/index.js~Checkout#render",
    "access": "public",
    "description": "Render component",
    "lineNumber": 156,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js",
    "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { TextInputField, Button } from 'evergreen-ui';\n\n\nconst Article = styled.article`\n  width: 900px;\n  margin: 0 auto;\n  padding: 100px 20px 20px 20px;\n`;\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n`;\n\n/**\n * Claim request page\n * @return {*}\n */\nclass Claim extends Component {\n  state = {\n    form: {\n      policyId: '',\n      reason: '',\n    },\n    loading: false,\n    result: false,\n  };\n\n  static propTypes = {\n    request: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Handle application form field change\n   * @param {string} field\n   * @return {Function}\n   */\n  handleChange = field => (event) => {\n    const { form } = this.state;\n\n    this.setState({ form: { ...form, [field]: event.target.value } });\n  };\n\n  /**\n   * Submit claim request form\n   * @param {event} e\n   */\n  handleSubmit = (e) => {\n    const { form } = this.state;\n    const { request } = this.props;\n\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    const claim = {\n      policyId: form.policyId,\n      reason: form.reason,\n    };\n\n    request('newClaim', claim)\n      .then((result) => {\n        if (result.data.error) {\n          this.setState({\n            loading: false,\n            result: {\n              error: result.data.error,\n            },\n          });\n        } else {\n          this.setState({\n            loading: false,\n            result: {\n              claim: {\n                claimId: result.data.events.LogClaimSetState.returnValues._claimId,\n                policyId: result.data.events.LogClaimSetState.returnValues._policyId,\n              },\n            },\n          });\n        }\n      })\n      .catch(console.error);\n  };\n\n  newClaim = () => this.setState({ result: false, form: { policyId: '', reason: '' } });\n\n  /**\n   * Render component\n   * @return {*}\n   */\n  render() {\n    const { form, loading, result } = this.state;\n    const { policyId, reason } = form;\n\n    return (\n      <Article>\n        <Helmet>\n          <title>Claim</title>\n        </Helmet>\n        <h1>Claim</h1>\n\n        {!loading && !result && (\n          <form onSubmit={this.handleSubmit}>\n            <TextInputField\n              label=\"Policy ID\"\n              placeholder=\"Enter your policy ID\"\n              value={policyId}\n              onChange={this.handleChange('policyId')}\n              required\n            />\n\n            <TextInputField\n              label=\"Reason\"\n              placeholder=\"Enter your reason for claim\"\n              value={reason}\n              onChange={this.handleChange('reason')}\n              required\n            />\n\n            <Button appearance=\"primary\" intent=\"success\" float=\"right\" type=\"submit\">Apply</Button>\n          </form>\n        )}\n\n        {loading && !result && (\n          <LoadingWrapper>\n            <img src=\"/assets/preloader.gif\" alt=\"Preloader\" />\n          </LoadingWrapper>\n        )}\n\n        {!loading && result && !result.error && (\n          <div>\n            <h3>\n              Claim with ID={result.claim.claimId}&nbsp;\n              for policy with ID={result.claim.policyId} has been successfully created.\n            </h3>\n            <Button appearance=\"primary\" intent=\"success\" onClick={this.newClaim}>Add new claim</Button>\n          </div>\n        )}\n\n        {!loading && result && result.error && (\n          <div>\n            <h3>An error has occurred: {result.error}</h3>\n            <Button appearance=\"primary\" intent=\"success\" onClick={this.newClaim}>Add new claim</Button>\n          </div>\n        )}\n      </Article>\n    );\n  }\n}\n\nexport default Claim;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "Article",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Article",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "LoadingWrapper",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~LoadingWrapper",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "class",
    "name": "Claim",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js",
    "importStyle": "Claim",
    "description": "Claim request page",
    "lineNumber": 25,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 136,
    "kind": "member",
    "name": "state",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim#state",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "member",
    "name": "propTypes",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "member",
    "name": "handleChange",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim#handleChange",
    "access": "public",
    "description": "Handle application form field change",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "member",
    "name": "handleSubmit",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim#handleSubmit",
    "access": "public",
    "description": "Submit claim request form",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "member",
    "name": "newClaim",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim#newClaim",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "render",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Claim/index.js~Claim#render",
    "access": "public",
    "description": "Render component",
    "lineNumber": 97,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/config.js",
    "content": "export const POLICY_STATE = {\n  0: {\n    label: 'Applied',\n    actions: [\n      {\n        id: 0, method: 'decline', label: 'Decline', intent: 'danger', withDetails: true,\n      },\n      {\n        id: 1, method: 'underwrite', label: 'Underwrite', intent: 'success',\n      },\n    ],\n  },\n  1: {\n    label: 'Accepted',\n    actions: [\n      {\n        id: 3, method: 'expire', label: 'Expire', intent: 'warning',\n      },\n    ],\n  },\n  2: {\n    label: 'ForPayout',\n    actions: [\n      {\n        id: 4, method: 'confirmPayout', label: 'Confirm payout', intent: 'success', withDetails: true,\n      },\n    ],\n  },\n  3: {\n    label: 'PaidOut',\n    actions: [],\n  },\n  4: {\n    label: 'Expired',\n    actions: [],\n  },\n  5: {\n    label: 'Declined', actions: [],\n  },\n};\n\nexport const CLAIM_STATE = {\n  0: {\n    label: 'Applied',\n    actions: [\n      {\n        id: 5, method: 'rejectClaim', label: 'Reject', intent: 'danger', withDetails: true,\n      },\n      {\n        id: 6, method: 'confirmClaim', label: 'Confirm', intent: 'warning', withDetails: true,\n      },\n    ],\n  },\n  1: {\n    label: 'Rejected',\n    actions: [],\n  },\n  2: {\n    label: 'Confirmed',\n    actions: [],\n  },\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "POLICY_STATE",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/config.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/config.js~POLICY_STATE",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/config.js",
    "importStyle": "{POLICY_STATE}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"0\": *, \"1\": *, \"2\": *, \"3\": *, \"4\": *, \"5\": *}"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "CLAIM_STATE",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/config.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/config.js~CLAIM_STATE",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/config.js",
    "importStyle": "{CLAIM_STATE}",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "{\"0\": *, \"1\": *, \"2\": *}"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { Spinner } from 'evergreen-ui';\nimport ConfirmationDialog from 'components/ConfirmationDialog';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { POLICY_STATE, CLAIM_STATE } from './config';\n\n\n/**\n * Decode hex to string\n * @param {string} value\n * @return {string}\n */\nfunction hexToUtf8(value) {\n  const hex = value.toString();\n\n  let str = '';\n  for (let i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2) {\n    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n\n  return str;\n}\n\nconst Article = styled.div`\n  height: 100%;\n  display: flex;\n  padding: 60px 0 0 0;\n  position: relative;\n`;\n\n\nconst Column = styled.div`\n  width: 50%;\n  background: #ffebcd;\n  border-left: 1px solid #dcc19e;\n  height: 100%;\n  overflow-y: scroll;\n  position: relative;\n`;\n\nconst Title = styled.div`\n  background: #f2d4af;\n  font-weight: bold;\n  padding: 20px;\n  position: fixed;\n  width: 100%;\n  z-index: 1;\n`;\n\nconst List = styled.div`\n  margin-top: 80px;\n`;\n\nconst Item = styled.div`\n  background: #fff;\n  padding: 15px;\n  margin: 20px;\n  box-shadow: 0 2px 6px 0 rgba(0,0,0,0.12);\n  border-radius: 3px;\n`;\n\nconst Actions = styled.div`\n  margin-top: 20px;\n  display: flex;\n`;\n\nconst SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n`;\n\n/**\n * Dashboard page\n */\nclass Dashboard extends Component {\n  state = {\n    policies: [],\n    claims: [],\n    loadingPolicies: true,\n    loadingClaims: true,\n  };\n\n  static propTypes = {\n    request: PropTypes.func.isRequired,\n  };\n\n  /**\n   * On component mounted livecycle hook\n   */\n  componentDidMount() {\n    this.loadPolicies();\n    this.loadClaims();\n  }\n\n  /**\n   * Update policies and claims lists after transaction\n   * @param {{}} data\n   */\n  updateAfterTransaction = (data) => {\n    const { claims, policies } = this.state;\n\n    if (data.policy) {\n      const index = policies.findIndex(policy => Number(policy.policyId) === Number(data.policy.policyId));\n\n      const list = [\n        ...policies.slice(0, index),\n        data.policy,\n        ...policies.slice(index + 1),\n      ];\n\n      this.setState({ policies: [...list] });\n    }\n\n    if (data.claim) {\n      const index = claims.findIndex(claim => Number(claim.claimId) === Number(data.claim.claimId));\n\n      const list = [\n        ...claims.slice(0, index),\n        data.claim,\n        ...claims.slice(index + 1),\n      ];\n\n      this.setState({ claims: [...list] });\n    }\n  };\n\n  /**\n   * Load the list of all policies\n   */\n  loadPolicies = () => {\n    const { request } = this.props;\n\n    if (window.socket && window.socket.isOpened) {\n      request('getPolicies')\n        .then(data => this.setState({ policies: data.policies, loadingPolicies: false }))\n        .catch(console.error);\n    } else {\n      setTimeout(() => this.loadPolicies(), 100);\n    }\n  }\n\n  /**\n   * Load the list of all claims\n   */\n  loadClaims = () => {\n    const { request } = this.props;\n    if (window.socket && window.socket.isOpened) {\n      request('getClaims')\n        .then(data => this.setState({ claims: data.claims, loadingClaims: false }))\n        .catch(console.error);\n    } else {\n      setTimeout(() => this.loadClaims(), 100);\n    }\n  }\n\n  /**\n   * Render component\n   * @return {*}\n   */\n  render() {\n    const {\n      policies, claims, loadingPolicies, loadingClaims,\n    } = this.state;\n    const { request } = this.props;\n\n    const policiesList = policies.map(policy => (\n      <Item key={policy.policyId}>\n        <div><b>{hexToUtf8(policy.product)}</b></div>\n        <div>Policy ID: {policy.policyId}</div>\n        <div>State: {POLICY_STATE[policy.state].label}</div>\n        <div>State message: {hexToUtf8(policy.stateMessage)}</div>\n        <div>Last update: {moment.unix(policy.stateTime).utc().format('YYYY-MM-DD HH:mm:ss')} UTC</div>\n        <div>Premium: {numeral(policy.premium / 100).format('0,0.00')}</div>\n\n        {POLICY_STATE[policy.state].actions.length > 0 && (\n          <Actions>\n            {POLICY_STATE[policy.state].actions.map(action => (\n              <ConfirmationDialog\n                key={action.id}\n                action={action.method}\n                label={action.label}\n                intent={action.intent || 'success'}\n                request={request}\n                withDetails={action.withDetails || false}\n                id={policy.policyId}\n                updateAfterTransaction={this.updateAfterTransaction}\n              />\n            ))}\n          </Actions>\n        )}\n      </Item>\n    ));\n\n    const claimsList = claims.map(claim => (\n      <Item key={claim.claimId}>\n        <div>\n          <b>Claim ID: {claim.claimId}</b>\n        </div>\n        <div>Policy ID: {claim.policyId}</div>\n        <div>State: {CLAIM_STATE[claim.state].label}</div>\n        <div>State message: {hexToUtf8(claim.stateMessage)}</div>\n        <div>Last update: {moment.unix(claim.stateTime).utc().format('YYYY-MM-DD HH:mm:ss')} UTC</div>\n\n        {CLAIM_STATE[claim.state].actions.length > 0 && (\n          <Actions>\n            {CLAIM_STATE[claim.state].actions.map(action => (\n              <ConfirmationDialog\n                key={action.id}\n                action={action.method}\n                label={action.label}\n                intent={action.intent || 'success'}\n                request={request}\n                withDetails={action.withDetails || false}\n                id={claim.claimId}\n                updateAfterTransaction={this.updateAfterTransaction}\n              />\n            ))}\n          </Actions>\n        )}\n      </Item>\n    ));\n\n    return (\n      <Article>\n        <Helmet>\n          <title>Dashboard</title>\n        </Helmet>\n\n        <Column>\n          <Title>Policies</Title>\n\n          <List>\n            {loadingPolicies && <SpinnerWrapper><Spinner /></SpinnerWrapper>}\n            {!loadingPolicies && policiesList}\n          </List>\n        </Column>\n\n        <Column>\n          <Title>Claims</Title>\n          <List>\n            {loadingClaims && <SpinnerWrapper><Spinner /></SpinnerWrapper>}\n            {!loadingPolicies && claimsList}\n          </List>\n        </Column>\n      </Article>\n    );\n  }\n}\n\nexport default Dashboard;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "function",
    "name": "hexToUtf8",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~hexToUtf8",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "importStyle": null,
    "description": "Decode hex to string",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "Article",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Article",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "Column",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Column",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "Title",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Title",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "List",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~List",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "Item",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Item",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "Actions",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Actions",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "SpinnerWrapper",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~SpinnerWrapper",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "class",
    "name": "Dashboard",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js",
    "importStyle": "Dashboard",
    "description": "Dashboard page",
    "lineNumber": 81,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "state",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard#state",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "propTypes",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard#componentDidMount",
    "access": "public",
    "description": "On component mounted livecycle hook",
    "lineNumber": 96,
    "params": [],
    "return": null
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "updateAfterTransaction",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard#updateAfterTransaction",
    "access": "public",
    "description": "Update policies and claims lists after transaction",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "loadPolicies",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard#loadPolicies",
    "access": "public",
    "description": "Load the list of all policies",
    "lineNumber": 136,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "loadClaims",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard#loadClaims",
    "access": "public",
    "description": "Load the list of all claims",
    "lineNumber": 151,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "render",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Dashboard/index.js~Dashboard#render",
    "access": "public",
    "description": "Render component",
    "lineNumber": 166,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/containers/NotFound/index.js",
    "content": "import React from 'react';\nimport { Helmet } from 'react-helmet';\n\n/**\n * NotFound page\n * @return {*}\n * @constructor\n */\nconst NotFound = () => (\n  <article>\n    <Helmet>\n      <title>Not found</title>\n    </Helmet>\n    <h1>Page not found</h1>\n  </article>\n);\n\nexport default NotFound;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/containers/NotFound/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "NotFound",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/NotFound/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/NotFound/index.js~NotFound",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/NotFound/index.js",
    "importStyle": "NotFound",
    "description": "NotFound page",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 164,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/containers/Root/global-styles.js",
    "content": "import { createGlobalStyle } from 'styled-components';\n\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    background: #f7f8fa;\n  }\n  \n  html, body, #app {\n    height: 100%;\n  }\n  \n  .📦fnt-sze_12px {\n    font-size: 14px !important;\n  }\n`;\n\nexport default GlobalStyles;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/containers/Root/global-styles.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "name": "GlobalStyles",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/global-styles.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/global-styles.js~GlobalStyles",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Root/global-styles.js",
    "importStyle": "GlobalStyles",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "content": "import 'sanitize.css/sanitize.css';\n\nimport React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport WebSocketAsPromised from 'websocket-as-promised';\nimport uuid from 'uuid';\n\n\n// Components\nimport Header from 'components/Header';\nimport Console from 'components/Console';\n\n// Pages\nimport Catalog from 'containers/Catalog';\nimport Checkout from 'containers/Checkout';\nimport Claim from 'containers/Claim';\nimport Dashboard from 'containers/Dashboard';\nimport NotFound from 'containers/NotFound';\n\nimport GlobalStyles from './global-styles';\n\n\nconst Layout = styled.div`\n  display: flex;\n  height: 100%;\n  width: 70%;\n`;\n\nconst Content = styled.div`\n  flex-grow: 1;\n  height: 100%;\n`;\n\nconst Page = styled.div`\n  height: 100%;\n`;\n\n/**\n * Root application component\n */\nclass Root extends Component {\n  state = {\n    logs: [],\n  };\n\n  /**\n   * On component mounted livecycle hook\n   */\n  componentDidMount() {\n    this.openWs();\n  }\n\n  /**\n   * Send a request by WebSocket\n   * @param {string} type\n   * @param {{}} data\n   * @return {*}\n   */\n  request = (type, data) => {\n    if (!window.socket) {\n      return Promise.reject();\n    }\n\n    return window.socket.sendRequest({ type, data }, { requestId: window.socket.getUniqueID() });\n  };\n\n  /**\n   * Create WebSocket connection\n   */\n  openWs = () => {\n    const wsp = new WebSocketAsPromised(`${window.location.origin.replace(/^http/, 'ws')}/api/ws`, {\n      packMessage: data => JSON.stringify(data),\n      unpackMessage: message => JSON.parse(message),\n      attachRequestId: (data, requestId) => Object.assign({ id: requestId }, data),\n      extractRequestId: data => data && data.id,\n    });\n\n    wsp.getUniqueID = () => uuid();\n\n    wsp.open()\n      .then(() => {\n        window.socket = wsp;\n      })\n      .catch(e => console.error(e));\n\n    wsp.onError.addListener(console.error);\n    wsp.onClose.addListener(() => this.pushLog(JSON.stringify({ app: 'UI', msg: 'WS connection closed' })));\n    wsp.onMessage.addListener((msg) => {\n      console.log(msg);\n      this.pushLog(msg);\n    });\n  };\n\n  /**\n   * Add log message to the list\n   * @param {string} msg\n   */\n  pushLog = (msg) => {\n    const { logs } = this.state;\n    this.setState({ logs: [msg, ...logs] });\n  };\n\n  /**\n   * Render component\n   * @return {*}\n   */\n  render() {\n    const { logs } = this.state;\n\n    return (\n      <Router>\n        <Layout>\n          <Helmet\n            titleTemplate=\"%s - eStore\"\n            defaultTitle=\"eStore\"\n          >\n            <meta name=\"description\" content=\"Electronic store\" />\n          </Helmet>\n          <GlobalStyles />\n\n          <Content>\n            <Header />\n\n            <Page>\n              <Switch>\n                <Route exact path=\"/\" component={Catalog} />\n                <Route exact path=\"/checkout/:vendorCode\" render={props => <Checkout request={this.request} {...props} />} />\n                <Route exact path=\"/claim\" render={() => <Claim request={this.request} />} />\n                <Route exact path=\"/dashboard\" render={() => <Dashboard request={this.request} />} />\n                <Route path=\"\" component={NotFound} />\n              </Switch>\n            </Page>\n          </Content>\n\n          <Console logs={logs} />\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default Root;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "Layout",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Layout",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "Content",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Content",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "name": "Page",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Page",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "class",
    "name": "Root",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/src/containers/Root/index.js",
    "importStyle": "Root",
    "description": "Root application component",
    "lineNumber": 43,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "state",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root#state",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root#componentDidMount",
    "access": "public",
    "description": "On component mounted livecycle hook",
    "lineNumber": 51,
    "params": [],
    "return": null
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "request",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root#request",
    "access": "public",
    "description": "Send a request by WebSocket",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "openWs",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root#openWs",
    "access": "public",
    "description": "Create WebSocket connection",
    "lineNumber": 72,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "pushLog",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root",
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root#pushLog",
    "access": "public",
    "description": "Add log message to the list",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "render",
    "memberof": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/estore_ui/src/containers/Root/index.js~Root#render",
    "access": "public",
    "description": "Render component",
    "lineNumber": 109,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 177,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/src/root.js",
    "content": "import React from 'react';\nimport { render } from 'react-dom';\nimport App from './bootstrap';\n\n\nrender(<App />, document.getElementById('app'));\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/src/root.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 178,
    "kind": "file",
    "name": "dip-platform/app_microservices/estore_ui/webpack.config.js",
    "content": "const path = require('path');\nconst webpack = require('webpack');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CopyWebpackPlugin = require('copy-webpack-plugin');\nconst { mapValues, mapKeys } = require('lodash');\nconst env = require('./env');\n\n\nconst PROD = process.env.NODE_ENV === 'production';\n\n/**\n * Append hash suffix\n * @param {string} template\n * @param {string} hash\n * @return {*}\n */\nconst addHash = (template, hash) => template.replace(/\\.[^.]+$/, `.[${hash}]$&`);\n\nconst config = {\n  mode: PROD ? 'production' : 'development',\n\n  entry: {\n    app: [\n      path.join(process.cwd(), 'src/root.js'),\n    ],\n  },\n\n  output: {\n    path: path.join(process.cwd(), 'build'),\n    publicPath: '/',\n    filename: '[name].js',\n    chunkFilename: '[name].chunk.js',\n  },\n\n  resolve: {\n    modules: ['node_modules', 'src'],\n    extensions: ['.js'],\n  },\n\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            cacheDirectory: true,\n            babelrc: true,\n          },\n        },\n      },\n      {\n        // Preprocess own .css files\n        // List of loaders, see https://webpack.js.org/loaders/#styling\n        test: /\\.css$/,\n        exclude: /node_modules/,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        // Preprocess 3rd party .css files located in node_modules\n        test: /\\.css$/,\n        include: /node_modules/,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.(eot|otf|ttf|woff|woff2)$/,\n        use: 'file-loader',\n      },\n      {\n        test: /\\.(png|jpg|jpeg|gif|ttf|eot|otf|woff|woff2)/,\n        use: addHash('file-loader?name=[name].[ext]&outputPath=assets/', 'hash:6'),\n      },\n      {\n        test: /\\.svg$/,\n        use: [\n          {\n            loader: 'svg-url-loader',\n            options: {\n              // Inline files smaller than 10 kB\n              limit: 10 * 1024,\n              noquotes: true,\n            },\n          },\n        ],\n      },\n\n      {\n        test: /\\.(mp4|webm)$/,\n        use: {\n          loader: 'url-loader',\n          options: {\n            limit: 10000,\n          },\n        },\n      },\n      {\n        test: /\\.html$/,\n        use: 'html-loader',\n      },\n    ],\n  },\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: path.join(__dirname, 'src/app.html'),\n    }),\n\n    new webpack.DefinePlugin(\n      mapValues(\n        mapKeys({\n          NODE_ENV: process.env.NODE_ENV,\n          ...env,\n        }, (value, key) => `process.env.${key}`), value => JSON.stringify(value),\n      ),\n    ),\n\n    new CopyWebpackPlugin([\n      {\n        from: 'src/assets',\n        to: 'assets',\n      },\n    ]),\n  ].filter(Boolean),\n\n  target: 'web',\n\n  devServer: {\n    host: '0.0.0.0',\n    disableHostCheck: true,\n    port: env.PORT,\n    publicPath: '/',\n    historyApiFallback: true,\n    stats: {\n      hash: false,\n      version: false,\n      timings: true,\n      assets: true,\n      chunks: false,\n      modules: false,\n      cached: true,\n      colors: true,\n    },\n    proxy: {\n      '/api/ws': {\n        target: `ws://localhost:${env.PROXY_API_PORT}`,\n        logLevel: 'debug',\n        ws: true,\n      },\n    },\n  },\n};\n\nmodule.exports = config;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/estore_ui/webpack.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "PROD",
    "memberof": "dip-platform/app_microservices/estore_ui/webpack.config.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/webpack.config.js~PROD",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/webpack.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "addHash",
    "memberof": "dip-platform/app_microservices/estore_ui/webpack.config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/webpack.config.js~addHash",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/webpack.config.js",
    "importStyle": null,
    "description": "Append hash suffix",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "variable",
    "name": "config",
    "memberof": "dip-platform/app_microservices/estore_ui/webpack.config.js",
    "static": true,
    "longname": "dip-platform/app_microservices/estore_ui/webpack.config.js~config",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/estore_ui/webpack.config.js",
    "importStyle": "config",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"mode\": *, \"entry\": *, \"output\": *, \"resolve\": *, \"module\": *, \"plugins\": *, \"target\": string, \"devServer\": *}"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js",
    "content": "/**\n * FlightDelay API microservice\n */\nclass FlightDelayInsurance {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.name = `${process.env.npm_package_name}.v${process.env.npm_package_version}`;\n  }\n\n  /**\n   * Process submitted application data\n   * @param {string} clientId\n   * @param {{}} payload\n   */\n  onApplied(clientId, payload) {\n    // validate form data\n    this.log.info('Form applied:', clientId, payload);\n\n    this.dip.createPolicy(clientId, payload);\n  }\n\n  /**\n   * Handle error\n   * @param {string} client\n   * @param {Error} error\n   */\n  onError(client, error) {\n    this.log.error(client, error);\n  }\n\n  /**\n   * Handle LogSetState event from contract\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   * @return {Promise}\n   */\n  onLogSetState({ content, fields, properties }) {\n    // Applied\n    if (content.state === 0) return this.onPolicyAppliedState(properties.correlationId, content);\n\n    // Accepted\n    if (content.state === 1) return this.onPolicyAcceptedState(properties.correlationId, content);\n\n    // Revoked\n    if (content.state === 2) return this.onPolicyRevoked(properties.correlationId, content);\n\n    // PaidOut\n    if (content.state === 3) return this.onPolicyPaidOutState(properties.correlationId, content);\n\n    // Expired\n    if (content.state === 4) return this.onPolicyExpiredState(properties.correlationId, content);\n\n    // Declined\n    if (content.state === 5) return this.onPolicyDeclinedState(properties.correlationId, content);\n\n    // SendFailed\n    if (content.state === 6) return this.onPolicySendFailedState(properties.correlationId, content);\n\n    return null;\n  }\n\n  /**\n   * Policy state handlers\n   */\n\n  /**\n   * Handle applied policy state\n   * @param {string} correlationId\n   * @param {{}} payload\n   */\n  onPolicyAppliedState(correlationId, payload) {\n    // Policy applied\n    this.dip.send(correlationId, { from: this.name, msg: `Policy ${payload.policyId} applied` });\n  }\n\n  /**\n   * Handle accepted policy state\n   * @param {string} correlationId\n   * @param {{}} payload\n   */\n  onPolicyAcceptedState(correlationId, payload) {\n    // Policy accepted\n    this.dip.send(correlationId, { from: this.name, msg: `Policy ${payload.policyId} underwritten by oracle` });\n\n    this.dip.chargeCard(correlationId, payload.policyId);\n  }\n\n  /**\n   * Handle revoked policy state\n   * @param {string} correlationId\n   * @param {{}} payload\n   */\n  onPolicyRevoked(correlationId, payload) {\n    // Policy revoked\n    this.dip.send(correlationId, { from: this.name, msg: `Policy ${payload.policyId} revoked` });\n  }\n\n  /**\n   * Handle paidOut policy state\n   * @param {string} correlationId\n   * @param {{}} payload\n   */\n  onPolicyPaidOutState(correlationId, payload) {\n    // Policy paidout\n    this.dip.send(correlationId, { from: this.name, msg: `Policy ${payload.policyId} for payout` });\n    this.dip.payout(correlationId, payload.policyId);\n  }\n\n  /**\n   * Handle expired policy state\n   * @param {string} correlationId\n   * @param {{}} payload\n   */\n  onPolicyExpiredState(correlationId, payload) {\n    // Policy expired\n    this.dip.send(correlationId, { from: this.name, msg: `Policy ${payload.policyId} expired` });\n  }\n\n  /**\n   * Handle declined policy state\n   * @param {string} correlationId\n   * @param {{}} payload\n   */\n  onPolicyDeclinedState(correlationId, payload) {\n    // Policy declined\n    this.dip.send(correlationId, { from: this.name, msg: `Policy ${payload.policyId} declined` });\n  }\n\n  /**\n   * Handle send failed policy state\n   * @param {string} correlationId\n   * @param {{}} payload\n   */\n  onPolicySendFailedState(correlationId, payload) {\n    // Policy send failed\n    this.dip.send(correlationId, { from: this.name, msg: `Policy ${payload.policyId} send failed` });\n\n    // this.dip.notifyAdministrator(policyId, { msg: 'Send failed' });\n  }\n\n  /**\n   * App logic\n   */\n\n  /**\n   * On card charged event handler\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   */\n  onCardCharged({ content, fields, properties }) {\n    this.dip.issueCertificate(properties.correlationId, content.policyId);\n  }\n\n  /**\n   * On certificated issued event handler\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   */\n  onCertificateIssued({ content, fields, properties }) {\n    this.dip.send(properties.correlationId, { from: this.name, msg: `Policy ${content.policyId} accepted` });\n  }\n}\n\nmodule.exports = FlightDelayInsurance;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "class",
    "name": "FlightDelayInsurance",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js",
    "importStyle": "FlightDelayInsurance",
    "description": "FlightDelay API microservice",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 184,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 8
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "name",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#name",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "onApplied",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onApplied",
    "access": "public",
    "description": "Process submitted application data",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clientId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "onError",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onError",
    "access": "public",
    "description": "Handle error",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "onLogSetState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onLogSetState",
    "access": "public",
    "description": "Handle LogSetState event from contract",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "onPolicyAppliedState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyAppliedState",
    "access": "public",
    "description": "Handle applied policy state",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "onPolicyAcceptedState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyAcceptedState",
    "access": "public",
    "description": "Handle accepted policy state",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "onPolicyRevoked",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyRevoked",
    "access": "public",
    "description": "Handle revoked policy state",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "onPolicyPaidOutState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyPaidOutState",
    "access": "public",
    "description": "Handle paidOut policy state",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "onPolicyExpiredState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyExpiredState",
    "access": "public",
    "description": "Handle expired policy state",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "onPolicyDeclinedState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicyDeclinedState",
    "access": "public",
    "description": "Handle declined policy state",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "onPolicySendFailedState",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onPolicySendFailedState",
    "access": "public",
    "description": "Handle send failed policy state",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "onCardCharged",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onCardCharged",
    "access": "public",
    "description": "On card charged event handler",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "onCertificateIssued",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/FlightDelayInsurance.js~FlightDelayInsurance#onCertificateIssued",
    "access": "public",
    "description": "On certificated issued event handler",
    "lineNumber": 167,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 198,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "content": "const WebSocket = require('ws');\nconst uuid = require('uuid/v1');\nconst http = require('http');\n\n\n/**\n * Generic Insurance application wrapper\n */\nclass GenericInsurance {\n  /**\n   * Constructor\n   * @param {string} amqp\n   * @param {string} config\n   * @param {string} log\n   */\n  constructor({ amqp, config, log }) {\n    this._wsPort = config.wsPort;\n    this._app = config.app;\n    this._app.dip = this;\n    this._app.log = log;\n\n    this.log = log;\n\n    this._connections = {};\n\n    this._amqp = amqp;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {*}\n   */\n  async bootstrap() {\n    const server = http.createServer(((req, res) => {\n      res.writeHead(200, { 'Content-Type': 'application/json' });\n      res.write('{\"status\":200}');\n      res.end();\n    }));\n\n    const wss = new WebSocket.Server({ server });\n\n    server.listen(this._wsPort);\n\n    wss.on('connection', ws => this.register(ws));\n\n    await this._amqp.consume({\n      messageType: '*',\n      messagetypeVersion: '#',\n      handler: ({ content, fields, properties }) => {\n        this.send(properties.correlationId, {\n          from: `${properties.headers.originatorName}.v${properties.headers.originatorVersion}`,\n          topic: fields.routingKey,\n          msg: JSON.stringify(content),\n        });\n      },\n    });\n\n    await this._amqp.consume({\n      messageType: 'stateChanged',\n      messageVersion: '1.*',\n      handler: this._app.onLogSetState.bind(this._app),\n    });\n\n    await this._amqp.consume({\n      messageType: 'cardCharged',\n      messageVersion: '1.*',\n      handler: this._app.onCardCharged.bind(this._app),\n    });\n\n    await this._amqp.consume({\n      messageType: 'certificateIssued',\n      messageVersion: '1.*',\n      handler: this._app.onCertificateIssued.bind(this._app),\n    });\n\n    this.log.info(`${this._app.name} listening at ws://localhost:${this._wsPort}/ws`);\n  }\n\n  /**\n   * Registrer WebSocket connection\n   * @param {{}} connection\n   */\n  register(connection) {\n    const connectionId = uuid();\n\n    this._connections[connectionId] = connection;\n\n    this.send(connectionId, {\n      from: `${process.env.npm_package_name}.v${process.env.npm_package_version}`,\n      topic: null,\n      msg: 'WebSocket connection successfully established',\n    });\n\n    connection.on('message', message => this.processMessage(connectionId, message));\n  }\n\n  /**\n   * Process broker's message\n   * @param {string} connectionId\n   * @param {{}} message\n   */\n  processMessage(connectionId, message) {\n    const payload = JSON.parse(message);\n\n    if (payload.type === 'apply') {\n      this._app.onApplied(connectionId, payload.data);\n      this.send(connectionId, {\n        from: `${process.env.npm_package_name}.v${process.env.npm_package_version}`,\n        topic: null,\n        msg: `Applied data: ${message}`,\n      });\n    }\n  }\n\n  /**\n   * Send message to WebSocket client\n   * @param {string} connectionId\n   * @param {{}} msg\n   */\n  send(connectionId, msg) {\n    if (!connectionId || !this._connections[connectionId]) return;\n    this._connections[connectionId].send(JSON.stringify(msg));\n  }\n\n  /**\n   * Send policy creation message to broker\n   * @param {string} clientId\n   * @param {{}} payload\n   * @return {Promise<void>}\n   */\n  async createPolicy(clientId, payload) {\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish({\n      messageType: 'policyCreationRequest',\n      messageVersion: '1.*',\n      content: payload,\n      correlationId: clientId,\n    });\n  }\n\n  /**\n   * Send card charding message to broker\n   * @param {string} correlationId\n   * @param {string} policyId\n   * @return {Promise<void>}\n   */\n  async chargeCard(correlationId, policyId) {\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish({\n      messageType: 'chargeCard',\n      messageVersion: '1.*',\n      content: { policyId },\n      correlationId,\n    });\n  }\n\n  /**\n   * Send fiat payout message to broker\n   * @param {string} correlationId\n   * @param {string} policyId\n   * @return {Promise<void>}\n   */\n  async payout(correlationId, policyId) {\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish({\n      messageType: 'payout',\n      messageVersion: '1.*',\n      content: { policyId },\n      correlationId,\n    });\n  }\n\n  /**\n   * Send certificate issuing message to broker\n   * @param {string} correlationId\n   * @param {string} policyId\n   * @return {Promise<void>}\n   */\n  async issueCertificate(correlationId, policyId) {\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish({\n      messageType: 'issueCertificate',\n      messageVersion: '1.*',\n      content: { policyId },\n      correlationId,\n    });\n  }\n}\n\nmodule.exports = GenericInsurance;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 199,
    "kind": "class",
    "name": "GenericInsurance",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js",
    "importStyle": "GenericInsurance",
    "description": "Generic Insurance application wrapper",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 200,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "log",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "_wsPort",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#_wsPort",
    "access": "private",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "_app",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#_app",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "log",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#log",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "_connections",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#_connections",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#bootstrap",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 33,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "register",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#register",
    "access": "public",
    "description": "Registrer WebSocket connection",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "processMessage",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#processMessage",
    "access": "public",
    "description": "Process broker's message",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "connectionId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "send",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#send",
    "access": "public",
    "description": "Send message to WebSocket client",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "connectionId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "createPolicy",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#createPolicy",
    "access": "public",
    "description": "Send policy creation message to broker",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clientId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "chargeCard",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#chargeCard",
    "access": "public",
    "description": "Send card charding message to broker",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "payout",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#payout",
    "access": "public",
    "description": "Send fiat payout message to broker",
    "lineNumber": 167,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "issueCertificate",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_api/GenericInsurance.js~GenericInsurance#issueCertificate",
    "access": "public",
    "description": "Send certificate issuing message to broker",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js",
    "content": "const { bootstrap } = require('@etherisc/microservice');\nconst FlightDelayInsurance = require('./FlightDelayInsurance');\nconst GenericInsurance = require('./GenericInsurance');\n\n\nbootstrap(GenericInsurance, {\n  httpDevPort: 3017,\n  wsPort: 4000,\n  app: new FlightDelayInsurance(),\n  amqp: true,\n});\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/etherisc_flight_delay_api/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/internals/enzyme-setup.js",
    "content": "import { configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\n\nconfigure({ adapter: new Adapter() });\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/internals/enzyme-setup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js",
    "content": "import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport Root from '../containers/Root';\n\n/**\n * Application\n * @return {*}\n * @constructor\n */\nconst App = () => <Root />;\n\n\nexport default hot(module)(App);\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "App",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js~App",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/src/bootstrap/index.js",
    "importStyle": null,
    "description": "Application",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 218,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, Text, Button, TextInputField,\n} from 'evergreen-ui';\n\n/**\n * Formatted log message component\n * @param {{}} params\n * @param {{}} params.msg\n * @param {integer} params.id\n * @return {*}\n * @constructor\n */\nconst LogMessage = ({ msg, id }) => {\n  const { from, topic, msg: message } = JSON.parse(msg);\n\n  return (\n    <Card elevation={0} backgroundColor=\"#ebf3fc\" paddingLeft={10} paddingRight={10} paddingTop={4} paddingBottom={4} marginTop={10}>\n      <div>\n        <Text fontSize={14} fontWeight=\"bold\">\n          {id}\n.\n          {from}\n        </Text>\n      </div>\n      {topic && (\n      <div>\n        <Text fontSize={13} fontWeight=\"bold\">\n        Topic:\n          {' '}\n          {topic}\n        </Text>\n        <br />\n      </div>\n      )}\n      <div style={{ marginTop: 2 }}>\n        <Text fontSize={13}>\n          {message}\n        </Text>\n      </div>\n    </Card>\n  );\n};\n\nLogMessage.propTypes = {\n  msg: PropTypes.shape.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\n/**\n * Layout\n */\nclass App extends Component {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {\n      socket: null,\n      logs: [],\n      form: {\n        firstname: '',\n        lastname: '',\n        email: '',\n        from: '',\n        to: '',\n        date: '',\n      },\n    };\n  }\n\n  /**\n   * ComponentDipMount component's livecycle event\n   */\n  componentDidMount() {\n    const socket = new WebSocket(`${window.location.href.replace(/^http/, 'ws')}api/ws`);\n\n    socket.onopen = () => this.state.socket = socket;\n    socket.onclose = () => this.pushLog(JSON.stringify({ app: 'UI', msg: 'WS connection closed' }));\n    socket.onmessage = msg => this.pushLog(msg.data);\n    socket.onerror = console.log;\n  }\n\n  /**\n   * Prepend logs message with new message\n   * @param {{}} msg\n   */\n  pushLog = (msg) => {\n    const { logs } = this.state;\n    this.setState({ logs: [msg, ...logs] });\n  };\n\n  /**\n   * Handle application form submit event\n   * @param {event} event\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { socket, form } = this.state;\n\n    if (socket) {\n      const message = {\n        customer: {\n          firstname: form.firstname,\n          lastname: form.lastname,\n          email: form.email,\n        },\n        policy: {\n          distributorId: '11111111-1111-1111-1111-111111111111',\n          from: form.from,\n          to: form.to,\n          date: form.date,\n        },\n      };\n\n      socket.send(JSON.stringify({ type: 'apply', data: message }));\n    } else {\n      this.setState({ logs: [{ from: 'etherisc_flight_delay_ui', msg: 'WS connection is not established' }] });\n    }\n  };\n\n  /**\n   * Handle application form field change\n   * @param {string} field\n   * @return {Function}\n   */\n  handleChange = field => (event) => {\n    const { form } = this.state;\n\n    this.setState({ form: { ...form, [field]: event.target.value } });\n  };\n\n  /**\n   * Render component\n   * @return {*}\n   */\n  render() {\n    const { logs, form } = this.state;\n\n    const {\n      firstname, lastname, email, from, to, date,\n    } = form;\n\n    const messages = logs.map((log, i) => (\n      <LogMessage\n        key={Math.random()}\n        msg={log}\n        id={logs.length - i}\n      />\n    ));\n\n    return (\n      <div>\n        <Card display=\"flex\">\n          <Card\n            backgroundColor=\"white\"\n            elevation={2}\n            width=\"50%\"\n            margin={24}\n            display=\"flex\"\n            padding={24}\n            flexDirection=\"column\"\n          >\n            <Text marginBottom={20}>Flight Delay Dapp UI</Text>\n\n            <form onSubmit={this.handleSubmit}>\n              <TextInputField\n                label=\"First name\"\n                placeholder=\"Enter your first name\"\n                value={firstname}\n                onChange={this.handleChange('firstname')}\n              />\n\n              <TextInputField\n                label=\"Last name\"\n                placeholder=\"Enter your last name\"\n                value={lastname}\n                onChange={this.handleChange('lastname')}\n              />\n\n              <TextInputField\n                label=\"Email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={this.handleChange('email')}\n              />\n\n              <TextInputField\n                label=\"From\"\n                placeholder=\"Departure airport, e.g. SFO\"\n                value={from}\n                onChange={this.handleChange('from')}\n              />\n\n              <TextInputField\n                label=\"To\"\n                placeholder=\"Arrival airport, e.g. ZRH\"\n                value={to}\n                onChange={this.handleChange('to')}\n              />\n\n              <TextInputField\n                label=\"Date of departure\"\n                placeholder=\"Enter date of departure, e.g. 2018-09-01\"\n                value={date}\n                onChange={this.handleChange('date')}\n              />\n\n              <Button appearance=\"green\" float=\"right\" type=\"submit\">Apply</Button>\n            </form>\n          </Card>\n\n          <Card\n            backgroundColor=\"#153656\"\n            color=\"white\"\n            elevation={2}\n            width=\"50%\"\n            margin={24}\n            display=\"flex\"\n            padding={24}\n            flexDirection=\"column\"\n          >\n            <Text color=\"white\">App logs</Text>\n\n            <Card height={570} overflow=\"scroll\">\n              {messages}\n            </Card>\n          </Card>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 219,
    "kind": "function",
    "name": "LogMessage",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~LogMessage",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "importStyle": null,
    "description": "Formatted log message component",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.msg",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 220,
    "kind": "class",
    "name": "App",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js",
    "importStyle": "App",
    "description": "Layout",
    "lineNumber": 54,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 221,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 58
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "state",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#state",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "{\"socket\": *, \"logs\": *, \"form\": *}"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#componentDidMount",
    "access": "public",
    "description": "ComponentDipMount component's livecycle event",
    "lineNumber": 78,
    "params": [],
    "return": null
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "pushLog",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#pushLog",
    "access": "public",
    "description": "Prepend logs message with new message",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "handleSubmit",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#handleSubmit",
    "access": "public",
    "description": "Handle application form submit event",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "handleChange",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#handleChange",
    "access": "public",
    "description": "Handle application form field change",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "render",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/containers/Root/index.js~App#render",
    "access": "public",
    "description": "Render component",
    "lineNumber": 141,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/src/root.js",
    "content": "import React from 'react';\nimport { render } from 'react-dom';\nimport App from './bootstrap';\n\n\nrender(<App />, document.getElementById('app'));\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/src/root.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "content": "const path = require('path');\nconst webpack = require('webpack');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\n\nconst PROD = process.env.NODE_ENV === 'production';\n\n/**\n * Append hash suffix\n * @param {string} template\n * @param {string} hash\n * @return {*}\n */\nconst addHash = (template, hash) => template.replace(/\\.[^.]+$/, `.[${hash}]$&`);\n\nconst config = {\n  mode: PROD ? 'production' : 'development',\n\n  entry: {\n    app: [\n      path.join(process.cwd(), 'src/root.js'),\n    ],\n  },\n\n  output: {\n    path: path.join(process.cwd(), 'build'),\n    publicPath: '/',\n    filename: '[name].js',\n    chunkFilename: '[name].chunk.js',\n  },\n\n  resolve: {\n    modules: ['node_modules'],\n    extensions: ['.js'],\n  },\n\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            cacheDirectory: true,\n            babelrc: true,\n          },\n        },\n      },\n      {\n        // Preprocess own .css files\n        // List of loaders, see https://webpack.js.org/loaders/#styling\n        test: /\\.css$/,\n        exclude: /node_modules/,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        // Preprocess 3rd party .css files located in node_modules\n        test: /\\.css$/,\n        include: /node_modules/,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.(eot|otf|ttf|woff|woff2)$/,\n        use: 'file-loader',\n      },\n      {\n        test: /\\.(png|jpg|jpeg|gif|ttf|eot|otf|woff|woff2)/,\n        use: addHash('file-loader?name=[name].[ext]&outputPath=assets/', 'hash:6'),\n      },\n      {\n        test: /\\.svg$/,\n        use: [\n          {\n            loader: 'svg-url-loader',\n            options: {\n              // Inline files smaller than 10 kB\n              limit: 10 * 1024,\n              noquotes: true,\n            },\n          },\n        ],\n      },\n\n      {\n        test: /\\.(mp4|webm)$/,\n        use: {\n          loader: 'url-loader',\n          options: {\n            limit: 10000,\n          },\n        },\n      },\n      {\n        test: /\\.html$/,\n        use: 'html-loader',\n      },\n    ],\n  },\n\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: path.join(__dirname, 'src/app.html'),\n    }),\n    new webpack.DefinePlugin({\n      'process.env': {\n        NODE_ENV: JSON.stringify(process.env.NODE_ENV),\n        API_HOST: process.env.API_HOST,\n        API_PORT: process.env.API_PORT,\n      },\n    }),\n  ].filter(Boolean),\n\n  target: 'web',\n\n  devServer: {\n    stats: {\n      hash: false,\n      version: false,\n      timings: true,\n      assets: true,\n      chunks: false,\n      modules: false,\n      cached: true,\n      colors: true,\n    },\n    proxy: {\n      '/api/ws': {\n        target: 'ws://localhost:4000',\n        logLevel: 'debug',\n        ws: true,\n      },\n    },\n  },\n};\n\nmodule.exports = config;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "variable",
    "name": "PROD",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js~PROD",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "addHash",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js~addHash",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "importStyle": null,
    "description": "Append hash suffix",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "variable",
    "name": "config",
    "memberof": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "static": true,
    "longname": "dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js~config",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/app_microservices/etherisc_flight_delay_ui/webpack.config.js",
    "importStyle": "config",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "{\"mode\": *, \"entry\": *, \"output\": *, \"resolve\": *, \"module\": *, \"plugins\": *, \"target\": string, \"devServer\": *}"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "file",
    "name": "dip-platform/commands/collectCoverage.js",
    "content": "const { Command } = require('@oclif/command');\nconst glob = require('fast-glob');\nconst fs = require('fs');\nconst path = require('path');\nconst { EOL } = require('os');\n\n/**\n * Collect coverage reports command\n */\nclass CollectCoverage extends Command {\n  /**\n   * Format moverage metric string\n   * @param {{}} metric\n   * @return {string}\n   */\n  getMetric(metric) {\n    return `${metric.pct}% (${metric.covered}/${metric.total})`;\n  }\n\n  /**\n   * Collect coverage reports from microservices and write results into README.md\n   * @return {Promise<void>}\n   */\n  async run() {\n    const patterns = [\n      '**/package.json',\n      '!package.json',\n      '!**/node_modules/**',\n    ];\n\n    const files = await glob(patterns.filter(Boolean));\n\n    const rows = [];\n\n    const header = `###### Test coverage summary\n\nModule         | % Stmts       | % Branch      | % Funcs       | % Lines\n-------------- | --------------| --------------| --------------| --------------`;\n\n    const footer = '[endOfCoverageTable]: #';\n\n    files.forEach((file) => {\n      const packageJson = require(path.join(process.cwd(), file));\n      const name = `${packageJson.name}.v${packageJson.version}`;\n\n      const moduleDir = file.split('/').slice(0, -1);\n      const coverageFile = path.join(process.cwd(), ...moduleDir, 'coverage', 'coverage-summary.json');\n\n      let stats = '- | - | - | -';\n      if (fs.existsSync(coverageFile)) {\n        const { total } = require(coverageFile);\n\n        stats = `${this.getMetric(total.statements)} | ${this.getMetric(total.branches)} | ${this.getMetric(total.functions)} | ${this.getMetric(total.lines)}`;\n      }\n\n      rows.push(`${name} | ${stats}`);\n    });\n\n    const content = `${header}${EOL}${rows.reduce((str, row) => `${str}${row}${EOL}`, '')}${footer}`;\n\n    const readmeFilePath = path.join(process.cwd(), 'README.md');\n    const README = fs.readFileSync(readmeFilePath, 'utf8');\n\n    const updatedReadme = README.replace(/###### Test coverage summary[\\s\\S]+\\[endOfCoverageTable\\]: #/, content);\n\n    fs.writeFileSync(readmeFilePath, updatedReadme);\n  }\n}\n\nCollectCoverage.description = 'Collect coverage reports from modules';\n\nmodule.exports = CollectCoverage;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/commands/collectCoverage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 234,
    "kind": "class",
    "name": "CollectCoverage",
    "memberof": "dip-platform/commands/collectCoverage.js",
    "static": true,
    "longname": "dip-platform/commands/collectCoverage.js~CollectCoverage",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/commands/collectCoverage.js",
    "importStyle": "CollectCoverage",
    "description": "Collect coverage reports command",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "@oclif/command~Command"
    ]
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "getMetric",
    "memberof": "dip-platform/commands/collectCoverage.js~CollectCoverage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/commands/collectCoverage.js~CollectCoverage#getMetric",
    "access": "public",
    "description": "Format moverage metric string",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "run",
    "memberof": "dip-platform/commands/collectCoverage.js~CollectCoverage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/commands/collectCoverage.js~CollectCoverage#run",
    "access": "public",
    "description": "Collect coverage reports from microservices and write results into README.md",
    "lineNumber": 24,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "dip-platform/commands/deploy.js",
    "content": "const { Command } = require('@oclif/command');\nconst { EOL } = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst { exec, execSync } = require('child_process');\nconst glob = require('fast-glob');\nconst yaml = require('js-yaml');\nconst uuid = require('uuid/v1');\n\n\nconst PROD = process.env.NODE_ENV === 'production';\n\n/**\n * Deploy to k8s command\n */\nclass Deploy extends Command {\n  /**\n   * Promisified exec\n   * @param {string} cmd\n   * @return {Promise}\n   */\n  execute(cmd) {\n    return new Promise((resolve, reject) => {\n      this.log.info(`Run: ${cmd}`);\n\n      const sh = exec(cmd, (err, stdout, stderr) => {\n        if (err) {\n          const error = new Error(err);\n          error.stdout = stdout;\n          error.stderr = stderr;\n\n          this.log.info(stdout);\n          reject(err);\n          return;\n        }\n\n        resolve({ stdout, stderr });\n      });\n\n      sh.stdout.on('data', this.log.info);\n    });\n  }\n\n  /**\n   * Run deploy command\n   * @return {Promise<void>}\n   */\n  async run() {\n    if (PROD && !process.env.GCLOUD_CLUSTER) throw new Error('GKE cluster should be specified');\n    if (PROD && !process.env.GCLOUD_PROJECT_ID) throw new Error('GKE project id should be specified');\n    if (PROD && !process.env.GCLOUD_ZONE) throw new Error('GKE zone should be specified');\n\n    this.log = {\n      info: console.log, // eslint-disable-line\n    };\n\n    const patterns = [\n      '**/k8s*.yaml',\n      '!**/node_modules/**',\n      PROD && '!**/secrets/**',\n    ].filter(Boolean);\n\n    const files = await glob(patterns);\n\n    const entities = {};\n\n    files.forEach((file) => {\n      const fileContent = fs.readFileSync(file, 'utf8');\n\n      const list = yaml.safeLoadAll(fileContent);\n\n      list.forEach((element) => {\n        if (!entities[element.kind]) entities[element.kind] = [];\n\n        const entity = {};\n\n        const filePathParts = file.split('/');\n\n        if (/<!--image-->/.test(JSON.stringify(element))) {\n          const dockerfilePath = path.join(...filePathParts.slice(0, -2));\n          const packageJsonfile = path.join(...filePathParts.slice(0, -2), 'package.json');\n\n          const { name, version } = require(path.join(process.cwd(), packageJsonfile));\n\n          const packageName = name.replace(/[^a-zA-Z]+/, '');\n\n          let imageName;\n          if (process.env.NODE_ENV !== 'production') {\n            imageName = `${packageName}:${uuid()}`;\n          } else {\n            const commitHash = execSync('git rev-parse HEAD').toString().trim();\n            imageName = `gcr.io/${process.env.GCLOUD_PROJECT_ID}/${packageName}:${commitHash}`;\n          }\n\n          entity.dockerfilePath = path.join(process.cwd(), dockerfilePath);\n          entity.imageName = imageName;\n          entity.name = packageName;\n          entity.version = version;\n          entity.config = JSON.parse(JSON.stringify(element).replace('<!--image-->', imageName));\n          entity.config.metadata.labels.version = version;\n        } else {\n          entity.config = element;\n        }\n\n        entities[element.kind].push(entity);\n      });\n    });\n\n\n    if (process.env.NODE_ENV === 'production') {\n      await this.execute(`kubectl config use-context gke_${process.env.GCLOUD_PROJECT_ID}_${process.env.GCLOUD_ZONE}_${process.env.GCLOUD_CLUSTER}`);\n      await this.execute(`gcloud config set project ${process.env.GCLOUD_PROJECT_ID}`);\n\n      try {\n        await this.execute('kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user $(gcloud config get-value account)');\n      } catch (e) {\n        this.log.info('cluster-admin-binding already exists');\n      }\n\n      try {\n        await this.execute('gcloud compute firewall-rules create minio --allow tcp:30009');\n      } catch (e) {\n        this.log.info('firewall-rule minio already exists');\n      }\n\n      try {\n        await this.execute('gcloud compute firewall-rules create ganache --allow tcp:30045');\n      } catch (e) {\n        this.log.info('firewall-rule ganache already exists');\n      }\n\n      try {\n        await this.execute('gcloud compute firewall-rules create pg --allow tcp:30032');\n      } catch (e) {\n        this.log.info('firewall rule pg already exists');\n      }\n\n      try {\n        await this.execute('gcloud compute firewall-rules create rabbitmq --allow tcp:30672');\n      } catch (e) {\n        this.log.info('firewall rule rabbitmq already exists');\n      }\n    } else {\n      await this.execute('kubectl config use-context minikube');\n      await this.execute('minikube addons enable ingress');\n      await this.execute('echo \"sudo mkdir /data/minio; sudo ln -s /data/minio /var/minio; exit\" | minikube ssh');\n      await this.execute('echo \"sudo mkdir /data/ganache; sudo ln -s /data/ganache /var/ganache; exit\" | minikube ssh');\n    }\n\n    const groups = Object.keys(entities);\n\n    for (let i = 0; i < groups.length; i += 1) {\n      const group = groups[i];\n\n      this.log.info(`${EOL}${i + 1}. ${group}`);\n\n      for (let j = 0; j < entities[group].length; j += 1) {\n        const element = entities[group][j];\n\n        this.log.info(`${EOL}Apply ${group} ${element.config.metadata.name}`);\n\n        if (element.dockerfilePath) {\n          this.log.info(`Start Docker build for ${element.imageName}`);\n\n          if (PROD) {\n            await this.execute(`cd ${element.dockerfilePath}; docker build --build-arg NPM_TOKEN=${process.env.NPM_TOKEN} -t ${element.imageName} .`);\n\n            this.log.info('Push image to GCR');\n            await this.execute(`docker push ${element.imageName}`);\n          } else {\n            await this.execute(`eval $(minikube docker-env); cd ${element.dockerfilePath}; docker build --build-arg NPM_TOKEN=${process.env.NPM_TOKEN} -t ${element.imageName} .`);\n          }\n        }\n\n        const file = path.join(process.cwd(), `tempfile-${group}-${element.config.metadata.name}.yaml`);\n\n        fs.writeFileSync(file, yaml.safeDump(element.config));\n        if (group === 'Job') await this.execute(`kubectl delete -f ${file} --ignore-not-found=true`);\n        await this.execute(`kubectl apply -f ${file}`);\n        fs.unlinkSync(file);\n      }\n    }\n  }\n}\n\nDeploy.description = 'Deploy to Kubernetes cluster command';\n\nmodule.exports = Deploy;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/commands/deploy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "variable",
    "name": "PROD",
    "memberof": "dip-platform/commands/deploy.js",
    "static": true,
    "longname": "dip-platform/commands/deploy.js~PROD",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/commands/deploy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 239,
    "kind": "class",
    "name": "Deploy",
    "memberof": "dip-platform/commands/deploy.js",
    "static": true,
    "longname": "dip-platform/commands/deploy.js~Deploy",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/commands/deploy.js",
    "importStyle": "Deploy",
    "description": "Deploy to k8s command",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "@oclif/command~Command"
    ]
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "execute",
    "memberof": "dip-platform/commands/deploy.js~Deploy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/commands/deploy.js~Deploy#execute",
    "access": "public",
    "description": "Promisified exec",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cmd",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "run",
    "memberof": "dip-platform/commands/deploy.js~Deploy",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/commands/deploy.js~Deploy#run",
    "access": "public",
    "description": "Run deploy command",
    "lineNumber": 48,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "log",
    "memberof": "dip-platform/commands/deploy.js~Deploy",
    "static": false,
    "longname": "dip-platform/commands/deploy.js~Deploy#log",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "{\"info\": *}"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "dip-platform/commands/deploySecret.js",
    "content": "const { Command } = require('@oclif/command');\nconst fs = require('fs');\nconst inquirer = require('inquirer');\nconst yaml = require('js-yaml');\nconst { spawnSync } = require('child_process');\n\n/**\n * Deploy secrets command\n */\nclass DeploySecret extends Command {\n  /**\n   * Generate and deploy secrets to GKE\n   * @return {Promise<void>}\n   */\n  async run() {\n    const filename = `k8s.${process.argv[3]}.yaml`;\n    const doc = yaml.safeLoad(fs.readFileSync(`./services/secrets/${filename}`, 'utf8'));\n    const questions = Object.keys(doc.data).map(name => ({\n      name,\n      type: 'input',\n      message: name,\n      default: Buffer.from(doc.data[name], 'base64').toString('utf-8'),\n    }));\n    const answers = await inquirer.prompt(questions);\n    doc.data = Object.keys(answers).reduce((data, name) => Object.assign(data, { [name]: Buffer.from(answers[name]).toString('base64') }), {});\n    const secret = yaml.safeDump(doc);\n    fs.writeFileSync(`./${filename}`, secret);\n    spawnSync('kubectl', ['apply', '-f', `./${filename}`], { stdio: 'inherit' });\n    fs.unlinkSync(`./${filename}`);\n  }\n}\n\nDeploySecret.description = 'Deploy secrets';\n\nmodule.exports = DeploySecret;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/commands/deploySecret.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "class",
    "name": "DeploySecret",
    "memberof": "dip-platform/commands/deploySecret.js",
    "static": true,
    "longname": "dip-platform/commands/deploySecret.js~DeploySecret",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/commands/deploySecret.js",
    "importStyle": "DeploySecret",
    "description": "Deploy secrets command",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "@oclif/command~Command"
    ]
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "run",
    "memberof": "dip-platform/commands/deploySecret.js~DeploySecret",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/commands/deploySecret.js~DeploySecret#run",
    "access": "public",
    "description": "Generate and deploy secrets to GKE",
    "lineNumber": 15,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 246,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js",
    "content": "const { schema } = require('./knexfile');\n\n\n/**\n * DIP Artifacts Storage microservice\n */\nclass DipArtifactsStorage {\n  /**\n   * Constructor\n   * @param {object} amqp\n   * @param {object} config\n   * @param {object} log\n   * @param {object} s3\n   * @param {object} db\n   */\n  constructor({\n    amqp, config, log, s3, db,\n  }) {\n    this.amqp = amqp;\n    this.config = config;\n    this.log = log;\n    this.s3 = s3.client;\n    this.db = db;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    this.amqp.consume({\n      messageType: 'contractDeployment',\n      messageVersion: '1.*',\n      handler: this.saveArtifact.bind(this),\n    });\n  }\n\n  /**\n   * Save artifact\n   * @param {object} message\n   * @return {void}\n   */\n  async saveArtifact({ content, fields, properties }) {\n    try {\n      const {\n        product, network, version, artifact,\n      } = content;\n      const key = `${product}/${network}/${version}/${JSON.parse(artifact).contractName}.json`;\n      await this.s3.putObject({\n        Bucket: this.config.bucket,\n        Key: key,\n        Body: artifact,\n      }).promise();\n\n      const parsedArtifact = JSON.parse(artifact);\n      const { address } = parsedArtifact.networks[Object.keys(parsedArtifact.networks)[0]];\n      await this.db.raw(`INSERT INTO ${schema}.artifacts (product, \"networkName\", version, address, abi) VALUES (?, ?, ?, ?, ?)`, [\n        product, network, version, address, JSON.stringify(parsedArtifact.abi),\n      ]);\n\n      this.log.info(`Pushed object ${key}`);\n    } catch (e) {\n      this.log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n    }\n  }\n}\n\nmodule.exports = DipArtifactsStorage;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 247,
    "kind": "class",
    "name": "DipArtifactsStorage",
    "memberof": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js",
    "importStyle": "DipArtifactsStorage",
    "description": "DIP Artifacts Storage microservice",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 248,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "log",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "s3",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "db",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 249,
    "kind": "member",
    "name": "amqp",
    "memberof": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage#amqp",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "member",
    "name": "config",
    "memberof": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage#config",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "log",
    "memberof": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage#log",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "s3",
    "memberof": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage#s3",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "db",
    "memberof": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage#db",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage#bootstrap",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 30,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "saveArtifact",
    "memberof": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_artifacts_storage/DipArtifactsStorage.js~DipArtifactsStorage#saveArtifact",
    "access": "public",
    "description": "Save artifact",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 256,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_artifacts_storage/bootstrap.js",
    "content": "const { bootstrap } = require('@etherisc/microservice');\nconst DipArtifactsStorage = require('./DipArtifactsStorage');\n\n\nbootstrap(DipArtifactsStorage, {\n  amqp: true,\n  db: true,\n  s3: true,\n  bucket: 'dip-artifacts-storage',\n});\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_artifacts_storage/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 257,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_artifacts_storage/knexfile.js",
    "content": "const { knexfile } = require('@etherisc/microservice');\n\n\nmodule.exports = {\n  ...knexfile,\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_artifacts_storage/knexfile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 258,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_contracts/artifactsReceiver.js",
    "content": "const fs = require('fs-extra');\nconst { fabric } = require('@etherisc/microservice');\n\n\nconst product = process.env.npm_package_name;\nconst network = process.env.NETWORK || 'development';\nconst { s3, log } = fabric();\n\n(\n  async () => {\n    try {\n      await s3.bootstrap('dip-artifacts-storage');\n\n      fs.emptyDirSync('./build/contracts');\n\n      const artifacts = await s3.getArtifacts(product, network);\n      log.info(`Received ${artifacts.length} artifacts`);\n      await Promise.all(\n        artifacts.map(o => fs.writeFile(`./build/contracts/${o.name}`, JSON.stringify(o.content))),\n      );\n      process.exit(0);\n    } catch (e) {\n      log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n      process.exit(1);\n    }\n  }\n)();\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_contracts/artifactsReceiver.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "variable",
    "name": "product",
    "memberof": "dip-platform/core_microservices/dip_contracts/artifactsReceiver.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_contracts/artifactsReceiver.js~product",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_contracts/artifactsReceiver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 260,
    "kind": "variable",
    "name": "network",
    "memberof": "dip-platform/core_microservices/dip_contracts/artifactsReceiver.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_contracts/artifactsReceiver.js~network",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_contracts/artifactsReceiver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "name": "s3",
    "memberof": "dip-platform/core_microservices/dip_contracts/artifactsReceiver.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_contracts/artifactsReceiver.js~s3",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_contracts/artifactsReceiver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 262,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "content": "const fs = require('fs-extra');\nconst { fabric } = require('@etherisc/microservice');\n\n\nconst product = process.env.npm_package_name;\nconst version = process.env.npm_package_version;\nconst network = process.env.NETWORK || 'development';\nconst { amqp, log } = fabric();\n\n(\n  async () => {\n    try {\n      await amqp.bootstrap();\n      const files = await fs.readdir('./build/contracts');\n      const artifacts = await Promise.all(files.map(file => fs.readFile(`./build/contracts/${file}`, 'utf-8')));\n      artifacts.forEach((artifact) => {\n        amqp.publish({\n          messageType: 'contractDeployment',\n          messageVersion: '1.*',\n          content: {\n            product, network, version, artifact,\n          },\n          correlationId: '',\n        });\n      });\n      log.info('Published content of build folder');\n      process.exit(0);\n    } catch (e) {\n      log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n      process.exit(1);\n    }\n  }\n)();\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 263,
    "kind": "variable",
    "name": "product",
    "memberof": "dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_contracts/artifactsSender.js~product",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 264,
    "kind": "variable",
    "name": "version",
    "memberof": "dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_contracts/artifactsSender.js~version",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "name": "network",
    "memberof": "dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_contracts/artifactsSender.js~network",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 266,
    "kind": "variable",
    "name": "amqp",
    "memberof": "dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_contracts/artifactsSender.js~amqp",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_contracts/artifactsSender.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 267,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_contracts/truffle.js",
    "content": "const HDWalletProvider = require('truffle-hdwallet-provider');\n\n\nmodule.exports = {\n  networks: {\n    development: {\n      host: '127.0.0.1',\n      port: 8545,\n      network_id: '4447',\n      gas: 8000000,\n      gasPrice: 10 * 1000000000,\n    },\n    dip_rpc: {\n      host: 'dip-rpc-node',\n      port: 8545,\n      network_id: '4448',\n      gas: 8000000,\n      gasPrice: 10 * 1000000000,\n    },\n    kovan: {\n      provider: () => new HDWalletProvider(process.env.MNEMONIC, process.env.HTTP_PROVIDER),\n      network_id: 42,\n      gas: 5500000,\n      confirmation: 2,\n      timeoutBlocks: 200,\n      skipDryRun: true,\n    },\n  },\n  solc: {\n    optimizer: {\n      enabled: true,\n      runs: 200,\n    },\n  },\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_contracts/truffle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 268,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "content": "/**\n * DIP Ethereum Client microservice\n */\nclass DipEtheremClient {\n  /**\n   * Constructor\n   * @param {object} amqp\n   */\n  constructor({ amqp }) {\n    this._amqp = amqp;\n  }\n\n  /**\n   * Bootstap and listen\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    await this._amqp.consume({\n      messageType: 'policyCreationSuccess',\n      messageVersion: '1.*',\n      handler: this.createTransaction.bind(this),\n    });\n  }\n\n  /**\n   * Handle successful policy creation message\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   * @return {Promise<void>}\n   */\n  async createTransaction({ content, fields, properties }) {\n    // const { routingKey } = message.fields;\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish({\n      messageType: 'transactionCreated',\n      messageVersion: '1.*',\n      content: { policyId: content.policyId },\n      correlationId: properties.correlationId,\n    });\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish({\n      messageType: 'stateChanged',\n      messageVersion: '1.*',\n      content: { policyId: content.policyId, state: 0 },\n      correlationId: properties.correlationId,\n    });\n\n    await new Promise(resolve => setTimeout(resolve, 3000));\n\n    await this._amqp.publish({\n      messageType: 'stateChanged',\n      messageVersion: '1.*',\n      content: { policyId: content.policyId, state: 1 },\n      correlationId: properties.correlationId,\n    });\n\n    await new Promise(resolve => setTimeout(resolve, 5000));\n\n    await this._amqp.publish({\n      messageType: 'stateChanged',\n      messageVersion: '1.*',\n      content: { policyId: content.policyId, state: 3 },\n      correlationId: properties.correlationId,\n    });\n  }\n}\n\nmodule.exports = DipEtheremClient;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 269,
    "kind": "class",
    "name": "DipEtheremClient",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js",
    "importStyle": "DipEtheremClient",
    "description": "DIP Ethereum Client microservice",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 270,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 271,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient#bootstrap",
    "access": "public",
    "description": "Bootstap and listen",
    "lineNumber": 17,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "createTransaction",
    "memberof": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_ethereum_client/DipEtheremClient.js~DipEtheremClient#createTransaction",
    "access": "public",
    "description": "Handle successful policy creation message",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_ethereum_client/bootstrap.js",
    "content": "const { bootstrap } = require('@etherisc/microservice');\nconst DipEthereumClient = require('./DipEtheremClient');\n\n\nbootstrap(DipEthereumClient, {\n  amqp: true,\n});\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_ethereum_client/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js",
    "content": "const Web3 = require('web3');\nconst { Readable } = require('stream');\nconst { schema } = require('./knexfile');\n\n\n/**\n * DIP Event Listener microservice\n */\nclass DipEventListener {\n  /**\n   * Constructor\n   * @param {object} amqp\n   * @param {object} db\n   * @param {object} log\n   * @param {object} http\n   * @param {object} config\n   */\n  constructor(\n    {\n      amqp, db, log, http, config,\n    },\n  ) {\n    this.amqp = amqp;\n    this.db = db;\n    this.log = log;\n    this.http = http;\n    this.web3 = new Web3(config.rpcNode);\n    this.networkName = config.networkName;\n  }\n\n  /**\n   * Get past events\n   * @param {buffer} buffer\n   * @return {void}\n   */\n  async getPastEvents(buffer) {\n    try {\n      const addresses = JSON.parse(buffer.toString());\n      /* eslint-disable-next-line no-restricted-syntax */\n      for (const i of addresses) {\n        const event = await this.db.raw(`SELECT \"blockNumber\" + 1 AS \"nextBlock\" FROM ${schema}.events WHERE \"networkName\" = ? AND address IN (?) ORDER BY \"blockNumber\" DESC LIMIT 1`, [this.networkName, i.address]);\n        this.web3.eth.getPastLogs({ fromBlock: event.nextBlock || 1, address: i.address })\n          .then(events => events.forEach(this.handleEvent.bind(this)));\n      }\n    } catch (e) {\n      this.log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n    }\n  }\n\n  /**\n   * Handle event\n   * @param {object} event\n   * @return {void}\n   */\n  async onData(event) {\n    try {\n      this.fromBlock = event.blockNumber;\n      const { rows } = await this.db.raw(`SELECT EXISTS (SELECT 1 FROM ${schema}.contracts WHERE \"networkName\" = ? AND address = lower(?))`, [this.networkName, event.address]);\n      if (rows[0].exists) this.handleEvent(event);\n    } catch (e) {\n      this.log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n    }\n  }\n\n  /**\n   * Handle error\n   * @param {error} e\n   * @return {void}\n   */\n  async onError(e) {\n    const error = new Error(JSON.stringify({ message: e.message, stack: e.stack }));\n    error.exit = true;\n    this.log.error(error);\n    throw error;\n  }\n\n  /**\n   * Watch events realtime\n   * @return {void}\n   */\n  async watchEventsRealtime() {\n    try {\n      this.web3.eth.subscribe('logs', { fromBlock: this.fromBlock })\n        .on('data', this.onData.bind(this))\n        .on('error', this.onError.bind(this));\n    } catch (e) {\n      this.log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n    }\n  }\n\n  /**\n   * Handle event\n   * @param {object} event\n   * @return {void}\n   */\n  async handleEvent(event) {\n    try {\n      const result = await this.db.raw(`SELECT * FROM ${schema}.contracts WHERE \"networkName\" = ? AND address = lower(?)`, [this.networkName, event.address]);\n      if (!result.rows[0]) return;\n      const abi = result.rows[0].abi\n        .filter(i => i.type === 'event')\n        .map(i => Object.assign(i, { signature: this.web3.eth.abi.encodeEventSignature(i) }))\n        .filter(i => i.signature === event.topics[0]);\n      const decodedEvent = this.web3.eth.abi.decodeLog(abi[0].inputs, event.data, event.topics.slice(1));\n      const block = await this.web3.eth.getBlock(event.blockNumber);\n      const { rows } = await this.db.raw(`INSERT INTO ${schema}.events (address, topics, data, \"blockNumber\", \"timeStamp\", \"logIndex\", \"transactionHash\", \"transactionIndex\", \"eventName\", \"eventArgs\", \"networkName\", version, product) VALUES (?, ?, ?, ?, to_timestamp(?), ?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (\"networkName\", \"transactionHash\", \"logIndex\") DO NOTHING RETURNING *`, [\n        event.address, JSON.stringify(event.topics), event.data, event.blockNumber, block.timestamp, event.logIndex,\n        event.transactionHash, event.transactionIndex, abi[0].name, decodedEvent, this.networkName,\n        result.rows[0].version,\n        result.rows[0].product,\n      ]);\n      if (!rows[0]) return;\n      await this.amqp.publish({\n        messageType: 'decodedEvent',\n        messageTypeVersion: '1.*',\n        content: rows[0],\n      });\n    } catch (e) {\n      this.log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n    }\n  }\n\n  /**\n   * Send existing events\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   * @return {void}\n   */\n  async sendExistingEvents({ content, fields, properties }) {\n    try {\n      // todo: filter by network, version, address, fromBlock and any other fields including eventArgs\n      const event = await this.db.raw(`SELECT * FROM ${schema}.events`, []);\n\n      await this.amqp.publish({\n        messageType: 'decodedEvent',\n        messageTypeVersion: '1.*',\n        content: event,\n        correlationId: properties.correlationId,\n      });\n    } catch (e) {\n      this.log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n    }\n  }\n\n  /**\n   * Request artifacts\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   * @return {void}\n   */\n  async requestArtifacts({ content, fields, properties }) {\n    try {\n      const { version, list } = content;\n      list.forEach((contract) => {\n        this.amqp.publish({\n          messageType: 'artifactRequest',\n          messageTypeVersion: '1.*',\n          content: { network: this.networkName, version, contract },\n          correlationId: properties.correlationId,\n        });\n      });\n    } catch (e) {\n      this.log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n    }\n  }\n\n  /**\n   * Save artifact\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   * @return {void}\n   */\n  async saveArtifact({ content, fields, properties }) {\n    try {\n      const { product, version, artifact } = content;\n      const artifactObject = JSON.parse(artifact);\n      const networkId = Object.keys(artifactObject.networks)[0];\n      const { address } = artifactObject.networks[networkId];\n      const abi = JSON.stringify(artifactObject.abi);\n      await this.db.raw(`INSERT INTO ${schema}.contracts (product, \"networkName\", version, address, abi) VALUES (?, ?, ?, ?, ?) ON CONFLICT (product, \"networkName\", address) DO UPDATE SET version = excluded.version, abi = excluded.abi`, [product, this.networkName, version, address, abi]);\n    } catch (e) {\n      this.log.error(new Error(JSON.stringify({ message: e.message, stack: e.stack })));\n    }\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {void}\n   */\n  async bootstrap() {\n    try {\n      this.fromBlock = await this.web3.eth.getBlockNumber();\n\n      const contractsStream = new Readable({\n        /**\n         * Reading stream\n         */\n        read() {\n          this.db.raw(`SELECT address FROM ${schema}.contracts WHERE \"networkName\" = ? ORDER BY id LIMIT 100 OFFSET ?`, [this.networkName, this.offset])\n            .then((contracts) => {\n              if (contracts.rows.length === 0) return this.push(null);\n              this.push(JSON.stringify(contracts.rows));\n              this.offset += 100;\n              return true;\n            });\n        },\n      });\n      contractsStream.offset = 0;\n      contractsStream.db = this.db;\n      contractsStream.networkName = this.networkName;\n      contractsStream.on('end', this.watchEventsRealtime.bind(this));\n      contractsStream.on('data', this.getPastEvents.bind(this));\n\n      await this.amqp.consume({\n        messageType: 'existingEventsRequest',\n        messageTypeVersion: '1.*',\n        handler: this.sendExistingEvents.bind(this),\n      });\n\n      await this.amqp.consume({\n        messageType: 'artifactList',\n        messageTypeVersion: '1.*',\n        handler: this.requestArtifacts.bind(this),\n      });\n\n      await this.amqp.consume({\n        messageType: 'artifact',\n        messageTypeVersion: '1.*',\n        handler: this.saveArtifact.bind(this),\n      });\n\n      await this.amqp.consume({\n        messageType: 'contractDeployment',\n        messageTypeVersion: '1.*',\n        handler: this.saveArtifact.bind(this),\n      });\n    } catch (e) {\n      const error = new Error(JSON.stringify({ message: e.message, stack: e.stack }));\n      error.exit = true;\n      this.log.error(error);\n      throw error;\n    }\n  }\n}\n\nmodule.exports = DipEventListener;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_event_listener/DipEventListener.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 276,
    "kind": "class",
    "name": "DipEventListener",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_event_listener/DipEventListener.js",
    "importStyle": "DipEventListener",
    "description": "DIP Event Listener microservice",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 277,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "db",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "log",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "amqp",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#amqp",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "member",
    "name": "db",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#db",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "member",
    "name": "log",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#log",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "member",
    "name": "http",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#http",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "member",
    "name": "web3",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#web3",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "member",
    "name": "networkName",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#networkName",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "getPastEvents",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#getPastEvents",
    "access": "public",
    "description": "Get past events",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "onData",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#onData",
    "access": "public",
    "description": "Handle event",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 286,
    "kind": "member",
    "name": "fromBlock",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#fromBlock",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "onError",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#onError",
    "access": "public",
    "description": "Handle error",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "error"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "watchEventsRealtime",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#watchEventsRealtime",
    "access": "public",
    "description": "Watch events realtime",
    "lineNumber": 81,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "handleEvent",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#handleEvent",
    "access": "public",
    "description": "Handle event",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "sendExistingEvents",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#sendExistingEvents",
    "access": "public",
    "description": "Send existing events",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "requestArtifacts",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#requestArtifacts",
    "access": "public",
    "description": "Request artifacts",
    "lineNumber": 155,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "saveArtifact",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#saveArtifact",
    "access": "public",
    "description": "Save artifact",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#bootstrap",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 196,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "offset",
    "memberof": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_listener/DipEventListener.js~DipEventListener#offset",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_event_listener/bootstrap.js",
    "content": "const { bootstrap } = require('@etherisc/microservice');\nconst DipEventListener = require('./DipEventListener');\n\n\nbootstrap(DipEventListener, {\n  amqp: true,\n  db: true,\n  s3: true,\n  rpcNode: process.env.WS_PROVIDER || 'ws://localhost:8545',\n  networkName: process.env.NETWORK_NAME || 'development',\n});\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_event_listener/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 297,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_event_listener/knexfile.js",
    "content": "const { knexfile } = require('@etherisc/microservice');\n\n\nmodule.exports = {\n  ...knexfile,\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_event_listener/knexfile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "content": "const { schema } = require('./knexfile');\n\n\n/**\n * DIP Event Logging microservice\n */\nclass DipEventLogging {\n  /**\n  * Constructor\n  * @param {Amqp} amqp\n  * @param {Object} db\n  * @param {Object} log\n  * @param {Object} router\n  * */\n  constructor({\n    amqp, db, log, router,\n  }) {\n    this._db = db;\n    this._amqp = amqp;\n    this._log = log;\n  }\n\n  /**\n   * Log message\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   * @param {Integer} params.id\n   * @return {void}\n   * */\n  logMessage({\n    content, fields, properties, id,\n  }) {\n    const contentToLog = content;\n    Object.keys(contentToLog).forEach((key) => {\n      if (typeof content[key] === 'string' && content[key].length > 160) {\n        contentToLog[key] = '[Data omitted; Check DB to debug]';\n      }\n    });\n\n    this._log.info(`[MESSAGE #${id}] ${fields.routingKey}: ${JSON.stringify(contentToLog)}; correlationId: ${properties.correlationId}`);\n  }\n\n  /**\n   * Save message to DB\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   * @return {Integer} id\n   * */\n  async saveMessage({ content, fields, properties }) {\n    const idArray = await this._db(`${schema}.events`).insert({ content, fields, properties }).returning('id');\n    return idArray[0];\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    this._amqp.consume({\n      messageType: '*',\n      messagetypeVersion: '#',\n      handler: async ({ content, fields, properties }) => {\n        const id = await this.saveMessage({ content, fields, properties });\n        this.logMessage({\n          content, fields, properties, id,\n        });\n      },\n    });\n  }\n}\n\nmodule.exports = DipEventLogging;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "class",
    "name": "DipEventLogging",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_event_logging/DipEventLogging.js",
    "importStyle": "DipEventLogging",
    "description": "DIP Event Logging microservice",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 300,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Amqp"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "db",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "log",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "_db",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#_db",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "_log",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#_log",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "logMessage",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#logMessage",
    "access": "public",
    "description": "Log message",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "saveMessage",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#saveMessage",
    "access": "public",
    "description": "Save message to DB",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "id"
    }
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_event_logging/DipEventLogging.js~DipEventLogging#bootstrap",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 62,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 307,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_event_logging/bootstrap.js",
    "content": "const { bootstrap } = require('@etherisc/microservice');\nconst DipEventLogging = require('./DipEventLogging');\n\n\nbootstrap(DipEventLogging, {\n  amqp: true,\n  db: true,\n});\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_event_logging/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_event_logging/knexfile.js",
    "content": "const knexfile = require('@etherisc/microservice/knexfile');\n\n\nmodule.exports = {\n  ...knexfile,\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_event_logging/knexfile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "content": "/**\n * DIP Fiat Payment Gateway microservice\n */\nclass DipFiatPaymentGateway {\n  /**\n   * Constructor\n   * @param {object} amqp\n   */\n  constructor({ amqp }) {\n    this._amqp = amqp;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    await this._amqp.consume({\n      messageType: 'chargeCard',\n      messageVersion: '1.*',\n      handler: this.chargeCard.bind(this),\n    });\n  }\n\n  /**\n   * Handle card charging message\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   * @return {Promise<void>}\n   */\n  async chargeCard({ content, fields, properties }) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish({\n      messageType: 'cardCharged',\n      messageVersion: '1.*',\n      content: { policyId: content.policyId },\n      correlationId: properties.correlationId,\n    });\n  }\n}\n\nmodule.exports = DipFiatPaymentGateway;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 310,
    "kind": "class",
    "name": "DipFiatPaymentGateway",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js",
    "importStyle": "DipFiatPaymentGateway",
    "description": "DIP Fiat Payment Gateway microservice",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 311,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway#bootstrap",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 17,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "chargeCard",
    "memberof": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payment_gateway/DipFiatPaymentGateway.js~DipFiatPaymentGateway#chargeCard",
    "access": "public",
    "description": "Handle card charging message",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 315,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_fiat_payment_gateway/bootstrap.js",
    "content": "const { bootstrap } = require('@etherisc/microservice');\nconst DipFiatPaymentGateway = require('./DipFiatPaymentGateway');\n\n\nbootstrap(DipFiatPaymentGateway, {\n  amqp: true,\n});\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_fiat_payment_gateway/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 316,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "content": "/**\n * DIP Fiat Payout Gateway microservice\n */\nclass DipFiatPayoutGateway {\n  /**\n   * Constructor\n   * @param {object} amqp\n   */\n  constructor({ amqp }) {\n    this._amqp = amqp;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    await this._amqp.consume({\n      messageType: 'payout',\n      messageVersion: '1.*',\n      handler: this.payout.bind(this),\n    });\n  }\n\n  /**\n   * Handle payout event message\n   * @param {{}} params\n   * @param {{}} params.content\n   * @param {{}} params.fields\n   * @param {{}} params.properties\n   * @return {Promise<void>}\n   */\n  async payout({ content, fields, properties }) {\n    // const { routingKey } = message.fields;\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    await this._amqp.publish({\n      messageType: 'paidOut',\n      messageVersion: '1.*',\n      content: { policyId: content.policyId },\n      correlationId: properties.correlationId,\n    });\n  }\n}\n\nmodule.exports = DipFiatPayoutGateway;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 317,
    "kind": "class",
    "name": "DipFiatPayoutGateway",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js",
    "importStyle": "DipFiatPayoutGateway",
    "description": "DIP Fiat Payout Gateway microservice",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 318,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway#bootstrap",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 17,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "payout",
    "memberof": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_fiat_payout_gateway/DipFiatPayoutGateway.js~DipFiatPayoutGateway#payout",
    "access": "public",
    "description": "Handle payout event message",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.fields",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.properties",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 322,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_fiat_payout_gateway/bootstrap.js",
    "content": "const { bootstrap } = require('@etherisc/microservice');\nconst DipFiatPayoutGateway = require('./DipFiatPayoutGateway');\n\n\nbootstrap(DipFiatPayoutGateway, {\n  amqp: true,\n});\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_fiat_payout_gateway/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 323,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "content": "const amqp = require('amqplib');\n\n\nconst shared = {\n  exhanges: {\n    policy: 'POLICY',\n  },\n  queues: {\n    policyLog: 'policy.log',\n    policyCreate: 'policy.create',\n  },\n  topic: {\n    policyCreate: 'policy.create',\n    policyCreationSuccess: 'policy.creation_success',\n  },\n};\n\n/**\n * DIP PDF Generator microservice\n */\nclass DipPdfGenerator {\n  /**\n   * Constructor\n   * @param {string} amqpBroker\n   */\n  constructor({ amqpBroker }) {\n    this._amqpBroker = amqpBroker;\n    this._amqp = null;\n  }\n\n  /**\n   * Bootstrap and listen\n   * @return {Promise<void>}\n   */\n  async listen() {\n    const conn = await amqp.connect(this._amqpBroker);\n\n    this._amqp = await conn.createChannel();\n\n    await this._amqp.assertExchange(shared.exhanges.policy, 'topic', { durable: true });\n\n    const policyCreateQ = await this._amqp.assertQueue('pdf_q', { exclusive: false });\n    await this._amqp.bindQueue(policyCreateQ.queue, shared.exhanges.policy, '*.issueCertificate.*.*');\n\n    await this._amqp.consume(\n      policyCreateQ.queue,\n      this.issueCertificate.bind(this),\n      { noAck: true },\n    );\n  }\n\n  /**\n   * Handle certificate issuing message\n   * @param {{}} message\n   * @return {Promise<void>}\n   */\n  async issueCertificate(message) {\n    // const { routingKey } = message.fields;\n    const content = JSON.parse(message.content.toString());\n\n    // Todo: implement\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    this._amqp.publish(\n      shared.exhanges.policy, 'policy.certificateIssued.v1',\n      Buffer.from(JSON.stringify({ policyId: content.policyId })), {\n        correlationId: message.properties.correlationId,\n        headers: {\n          originatorName: process.env.npm_package_name,\n          originatorVersion: process.env.npm_package_version,\n        },\n      },\n    );\n  }\n}\n\nmodule.exports = DipPdfGenerator;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 324,
    "kind": "variable",
    "name": "shared",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~shared",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"exhanges\": *, \"queues\": *, \"topic\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 325,
    "kind": "class",
    "name": "DipPdfGenerator",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js",
    "importStyle": "DipPdfGenerator",
    "description": "DIP PDF Generator microservice",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 326,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "amqpBroker",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 327,
    "kind": "member",
    "name": "_amqpBroker",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#_amqpBroker",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "method",
    "name": "listen",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#listen",
    "access": "public",
    "description": "Bootstrap and listen",
    "lineNumber": 35,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "issueCertificate",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator#issueCertificate",
    "access": "public",
    "description": "Handle certificate issuing message",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 332,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_pdf_generator/bootstrap.js",
    "content": "const DipPdfGenerator = require('./DipPdfGenerator');\n\n\nconst dipPdfGenerator = new DipPdfGenerator({ amqpBroker: process.env.MESSAGE_BROKER || 'amqp://localhost:5672' });\n\ndipPdfGenerator.listen();\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_pdf_generator/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 333,
    "kind": "variable",
    "name": "dipPdfGenerator",
    "memberof": "dip-platform/core_microservices/dip_pdf_generator/bootstrap.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_pdf_generator/bootstrap.js~dipPdfGenerator",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_pdf_generator/bootstrap.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "dip-platform/core_microservices/dip_pdf_generator/DipPdfGenerator.js~DipPdfGenerator"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 334,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "content": "const uuid = require('uuid/v1');\nconst Ajv = require('ajv');\nconst sha256 = require('js-sha256');\nconst _ = require('lodash');\nconst models = require('./models/module');\n\n\nconst ajv = new Ajv();\n\nconst applyPolicyMsgSchema = {\n  properties: {\n    customer: {\n      type: 'object',\n      properties: {\n        firstname: { type: 'string' },\n        lastname: { type: 'string' },\n        email: { type: 'string', format: 'email' },\n      },\n      required: ['firstname', 'lastname', 'email'],\n    },\n    policy: {\n      type: 'object',\n      properties: {\n        distributorId: { type: 'string' },\n      },\n      required: ['distributorId'],\n    },\n  },\n  required: ['customer', 'policy'],\n  additionalProperties: false,\n};\n\n/**\n * Dip Policy Storage\n */\nclass DipPolicyStorage {\n  /**\n   * Constructor\n   * @param {Amqp} amqp\n   */\n  constructor({ amqp, db }) {\n    this.amqp = amqp;\n\n    this.models = models(db);\n  }\n\n  /**\n   * Start application\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    this.amqp.consume({\n      messageType: 'policyCreationRequest',\n      messageVersion: '1.*',\n      handler: this.onPolicyCreateMessage.bind(this),\n    });\n  }\n\n  /**\n   * Generate id for customer\n   * @param {string} firstname\n   * @param {string} lastname\n   * @param {string} email\n   * @return {*}\n   */\n  generateCustomerId(firstname, lastname, email) {\n    const salt = process.env.SALT || 'salt';\n    return sha256(`${firstname}${lastname}${email}${salt}`).slice(0, 31);\n  }\n\n  /**\n   * Create new customer if doesn't exists\n   * @param {{}} customer\n   * @return {string}\n   */\n  async createCustomerIfNotExists(customer) {\n    const customerId = this.generateCustomerId(customer.firstname, customer.lastname, customer.email);\n\n    const { Customer } = this.models;\n\n    // Check if customer exists\n    const customerExists = await Customer.query().where('id', customerId).first();\n\n    // Create customer if it doesn't exists\n    if (!customerExists) {\n      await Customer.query().insertGraph({\n        id: customerId,\n        ..._.pick(customer, ['firstname', 'lastname', 'email']),\n        extra: [\n          ..._.map(\n            _.toPairs(_.omit(customer, ['firstname', 'lastname', 'email'])),\n            ([field, value]) => ({ field, value }),\n          ),\n        ],\n      });\n    }\n\n    return customerId;\n  }\n\n  /**\n   * Create new policy\n   * @param {string} customerId\n   * @param {{}} policy\n   * @return {string}\n   */\n  async createPolicy(customerId, policy) {\n    // Generate policy id\n    const policyId = uuid();\n\n    const { Policy } = this.models;\n\n    // Create new policy\n    await Policy.query().insertGraph({\n      id: policyId,\n      customerId,\n      ..._.pick(policy, ['distributorId']),\n\n      extra: [\n        ..._.map(\n          _.toPairs(_.omit(policy, ['distributorId'])),\n          ([field, value]) => ({ field, value }),\n        ),\n      ],\n    });\n\n    return policyId;\n  }\n\n  /**\n   * Get disctibutor\n   * @param {string} distributorId\n   * @return {*}\n   */\n  getDistributor(distributorId) {\n    // Get models\n    const { Distributor } = this.models;\n\n    return Distributor.query().where('id', distributorId).first();\n  }\n\n  /**\n   * Handle policy creation\n   * @param {DipMessage} message\n   * @return {*}\n   */\n  async onPolicyCreateMessage({ content, fields, properties }) {\n    // Validate message\n    const validate = ajv.compile(applyPolicyMsgSchema);\n\n    if (!validate(content)) {\n      await this.amqp.publish({\n        messageType: 'policyCreationError',\n        messageVersion: '1.*',\n        content: { error: validate.errors },\n        correlationId: properties.correlationId,\n      });\n      return;\n    }\n\n    // Check if distributor exists\n    const distributor = await this.getDistributor(content.policy.distributorId);\n\n    if (!distributor) {\n      await this.amqp.publish({\n        messageType: 'policyCreationError',\n        messageVersion: '1.*',\n        content: { error: 'Distributor does not exists' },\n        correlationId: properties.correlationId,\n      });\n      return;\n    }\n\n    // Create customer if doesn't exists\n    const customerId = await this.createCustomerIfNotExists(content.customer);\n\n    // Create new policy\n    const policyId = await this.createPolicy(customerId, content.policy);\n\n    // Publish message about successful policy creation\n    await this.amqp.publish({\n      messageType: 'policyCreationSuccess',\n      messageVersion: '1.*',\n      content: { policyId },\n      correlationId: properties.correlationId,\n    });\n  }\n}\n\nmodule.exports = DipPolicyStorage;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 335,
    "kind": "variable",
    "name": "ajv",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~ajv",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 336,
    "kind": "variable",
    "name": "applyPolicyMsgSchema",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~applyPolicyMsgSchema",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"properties\": *, \"required\": *, \"additionalProperties\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 337,
    "kind": "class",
    "name": "DipPolicyStorage",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js",
    "importStyle": "DipPolicyStorage",
    "description": "Dip Policy Storage",
    "lineNumber": 36,
    "interface": false
  },
  {
    "__docId__": 338,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Amqp"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 339,
    "kind": "member",
    "name": "amqp",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#amqp",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "member",
    "name": "models",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#models",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#bootstrap",
    "access": "public",
    "description": "Start application",
    "lineNumber": 51,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "generateCustomerId",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#generateCustomerId",
    "access": "public",
    "description": "Generate id for customer",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "firstname",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lastname",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "createCustomerIfNotExists",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#createCustomerIfNotExists",
    "access": "public",
    "description": "Create new customer if doesn't exists",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "customer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "createPolicy",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#createPolicy",
    "access": "public",
    "description": "Create new policy",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "customerId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "policy",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "getDistributor",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#getDistributor",
    "access": "public",
    "description": "Get disctibutor",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "distributorId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "onPolicyCreateMessage",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/core_microservices/dip_policy_storage/DipPolicyStorage.js~DipPolicyStorage#onPolicyCreateMessage",
    "access": "public",
    "description": "Handle policy creation",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "DipMessage"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 347,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/bootstrap.js",
    "content": "const { bootstrap } = require('@etherisc/microservice');\nconst DipPolicyStorage = require('./DipPolicyStorage');\n\n\nbootstrap(DipPolicyStorage, {\n  db: true,\n  amqp: true,\n});\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_policy_storage/bootstrap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 348,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/knexfile.js",
    "content": "const { knexfile } = require('@etherisc/microservice');\n\n\nmodule.exports = {\n  ...knexfile,\n  constants: {\n    POLICY_TABLE: 'policy',\n    POLICY_EXTRA_TABLE: 'policy_extra',\n    CUSTOMER_TABLE: 'customer',\n    CUSTOMER_EXTRA_TABLE: 'customer_extra',\n    DISTRIBUTOR_TABLE: 'distributor',\n  },\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_policy_storage/knexfile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 349,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/models/Customer.js",
    "content": "const { Model } = require('objection');\nconst { constants, schema } = require('../knexfile');\nconst Policy = require('./Policy');\nconst CustomerExtra = require('./CustomerExtra');\n\n\nconst {\n  CUSTOMER_TABLE, CUSTOMER_EXTRA_TABLE, POLICY_TABLE,\n} = constants;\n\n/**\n * Customer model\n */\nclass Customer extends Model {\n  /**\n   * Get table name\n   * @return {string}\n   */\n  static get tableName() {\n    return `${schema}.${constants.CUSTOMER_TABLE}`;\n  }\n\n  /**\n   * Relations to other Models\n   * @return {{}}\n   */\n  static get relationMappings() {\n    return {\n      extra: {\n        relation: Model.HasManyRelation,\n        modelClass: CustomerExtra,\n        join: {\n          from: `${schema}.${CUSTOMER_TABLE}.id`,\n          to: `${schema}.${CUSTOMER_EXTRA_TABLE}.customerId`,\n        },\n      },\n      policies: {\n        relation: Model.HasManyRelation,\n        modelClass: Policy,\n        join: {\n          from: `${schema}.${CUSTOMER_TABLE}.id`,\n          to: `${schema}.${POLICY_TABLE}.customerId`,\n        },\n      },\n    };\n  }\n}\n\nmodule.exports = Customer;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_policy_storage/models/Customer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 350,
    "kind": "variable",
    "name": "CUSTOMER_TABLE",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Customer.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Customer.js~CUSTOMER_TABLE",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/Customer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 351,
    "kind": "class",
    "name": "Customer",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Customer.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Customer.js~Customer",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/Customer.js",
    "importStyle": "Customer",
    "description": "Customer model",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 352,
    "kind": "get",
    "name": "tableName",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Customer.js~Customer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Customer.js~Customer.tableName",
    "access": "public",
    "description": "Get table name",
    "lineNumber": 19,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Customer.js~Customer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Customer.js~Customer.relationMappings",
    "access": "public",
    "description": "Relations to other Models",
    "lineNumber": 27,
    "return": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"extra\": *, \"policies\": *}"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js",
    "content": "const { Model } = require('objection');\nconst { constants, schema } = require('../knexfile');\n\n\nconst { CUSTOMER_EXTRA_TABLE } = constants;\n\n/**\n * Customer extra fields model\n */\nclass CustomerExtra extends Model {\n  /**\n   * Get table name\n   * @return {string}\n   */\n  static get tableName() {\n    return `${schema}.${CUSTOMER_EXTRA_TABLE}`;\n  }\n}\n\nmodule.exports = CustomerExtra;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 355,
    "kind": "variable",
    "name": "CUSTOMER_EXTRA_TABLE",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js~CUSTOMER_EXTRA_TABLE",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 356,
    "kind": "class",
    "name": "CustomerExtra",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js~CustomerExtra",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js",
    "importStyle": "CustomerExtra",
    "description": "Customer extra fields model",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 357,
    "kind": "get",
    "name": "tableName",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js~CustomerExtra",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/CustomerExtra.js~CustomerExtra.tableName",
    "access": "public",
    "description": "Get table name",
    "lineNumber": 15,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/models/Distributor.js",
    "content": "const { Model } = require('objection');\nconst { constants, schema } = require('../knexfile');\nconst Policy = require('./Policy');\n\n\nconst { DISTRIBUTOR_TABLE, POLICY_TABLE } = constants;\n\n/**\n * Distributor model\n */\nclass Distributor extends Model {\n  /**\n   * Get db table name\n   * @return {string}\n   */\n  static get tableName() {\n    return `${schema}.${DISTRIBUTOR_TABLE}`;\n  }\n\n  /**\n   * Get relations mappings\n   * @return {{}}\n   */\n  static get relationMappings() {\n    return {\n      policies: {\n        relation: Model.HasManyRelation,\n        modelClass: Policy,\n        join: {\n          from: `${schema}.${DISTRIBUTOR_TABLE}.id`,\n          to: `${schema}.${POLICY_TABLE}.distributorId`,\n        },\n      },\n    };\n  }\n}\n\nmodule.exports = Distributor;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_policy_storage/models/Distributor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 359,
    "kind": "variable",
    "name": "DISTRIBUTOR_TABLE",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Distributor.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Distributor.js~DISTRIBUTOR_TABLE",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/Distributor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 360,
    "kind": "class",
    "name": "Distributor",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Distributor.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Distributor.js~Distributor",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/Distributor.js",
    "importStyle": "Distributor",
    "description": "Distributor model",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 361,
    "kind": "get",
    "name": "tableName",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Distributor.js~Distributor",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Distributor.js~Distributor.tableName",
    "access": "public",
    "description": "Get db table name",
    "lineNumber": 16,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Distributor.js~Distributor",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Distributor.js~Distributor.relationMappings",
    "access": "public",
    "description": "Get relations mappings",
    "lineNumber": 24,
    "return": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"policies\": *}"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/models/Policy.js",
    "content": "const { Model } = require('objection');\nconst { constants, schema } = require('../knexfile');\nconst PolicyExtra = require('./PolicyExtra');\n\n\nconst {\n  POLICY_TABLE, POLICY_EXTRA_TABLE,\n} = constants;\n\n/**\n * Policy model\n */\nclass Policy extends Model {\n  /**\n   * Get table name\n   * @return {string}\n   */\n  static get tableName() {\n    return `${schema}.${POLICY_TABLE}`;\n  }\n\n  /**\n   * Get relations mappings\n   * @return {{}}\n   */\n  static get relationMappings() {\n    return {\n      extra: {\n        relation: Model.HasManyRelation,\n        modelClass: PolicyExtra,\n        join: {\n          from: `${schema}.${POLICY_TABLE}.id`,\n          to: `${schema}.${POLICY_EXTRA_TABLE}.policyId`,\n        },\n      },\n    };\n  }\n}\n\nmodule.exports = Policy;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_policy_storage/models/Policy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 364,
    "kind": "variable",
    "name": "POLICY_TABLE",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Policy.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Policy.js~POLICY_TABLE",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/Policy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 365,
    "kind": "class",
    "name": "Policy",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Policy.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Policy.js~Policy",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/Policy.js",
    "importStyle": "Policy",
    "description": "Policy model",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 366,
    "kind": "get",
    "name": "tableName",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Policy.js~Policy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Policy.js~Policy.tableName",
    "access": "public",
    "description": "Get table name",
    "lineNumber": 18,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/Policy.js~Policy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/Policy.js~Policy.relationMappings",
    "access": "public",
    "description": "Get relations mappings",
    "lineNumber": 26,
    "return": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"extra\": *}"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js",
    "content": "const { Model } = require('objection');\nconst { constants, schema } = require('../knexfile');\n\n\nconst { POLICY_EXTRA_TABLE } = constants;\n\n/**\n * Policy extra fields model\n */\nclass PolicyExtra extends Model {\n  /**\n   * Get table name\n   * @return {string}\n   */\n  static get tableName() {\n    return `${schema}.${POLICY_EXTRA_TABLE}`;\n  }\n}\n\nmodule.exports = PolicyExtra;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 369,
    "kind": "variable",
    "name": "POLICY_EXTRA_TABLE",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js~POLICY_EXTRA_TABLE",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 370,
    "kind": "class",
    "name": "PolicyExtra",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js",
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js~PolicyExtra",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js",
    "importStyle": "PolicyExtra",
    "description": "Policy extra fields model",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 371,
    "kind": "get",
    "name": "tableName",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js~PolicyExtra",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/PolicyExtra.js~PolicyExtra.tableName",
    "access": "public",
    "description": "Get table name",
    "lineNumber": 15,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 372,
    "kind": "file",
    "name": "dip-platform/core_microservices/dip_policy_storage/models/module.js",
    "content": "const Customer = require('./Customer');\nconst CustomerExtra = require('./CustomerExtra');\nconst Policy = require('./Policy');\nconst PolicyExtra = require('./PolicyExtra');\nconst Distributor = require('./Distributor');\n\n\nmodule.exports = (db) => {\n  Customer.knex(db);\n  CustomerExtra.knex(db);\n  Policy.knex(db);\n  PolicyExtra.knex(db);\n  Distributor.knex(db);\n\n  return {\n    Customer,\n    CustomerExtra,\n    Policy,\n    PolicyExtra,\n    Distributor,\n  };\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/core_microservices/dip_policy_storage/models/module.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 373,
    "kind": "function",
    "name": "module",
    "memberof": "dip-platform/core_microservices/dip_policy_storage/models/module.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/core_microservices/dip_policy_storage/models/module.js~module",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/core_microservices/dip_policy_storage/models/module.js",
    "importStyle": "module",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "db",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"Customer\": *, \"CustomerExtra\": *, \"Policy\": *, \"PolicyExtra\": *, \"Distributor\": *}"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/index.js",
    "content": "const getPort = require('get-port-sync');\nconst _ = require('lodash');\nconst { isDockerHost, isKubernetesHost } = require('./utils');\nconst knexfile = require('./knexfile');\nconst ioModule = require('./io/module');\nconst { DipMicroservice, GenericInsurance } = require('./services/module');\n\n\nconst KUBERNETES_HTTP_PORT = 3000;\n\n/**\n * Start application\n * @param {Class} App\n * @param {{}} config\n */\nfunction bootstrap(App, config = { }) {\n  const ioConfig = {\n    knexfile,\n    appName: config.appName || _.last(process.env.npm_package_name.split('/')),\n    appVersion: config.appVersion || process.env.npm_package_version,\n    exchangeName: config.exchangeName || 'POLICY', // TODO: use an universal exchange for all 'topic' platform messages or make an exchanges list\n    ...config,\n  };\n\n  try {\n    if (isKubernetesHost()) {\n      ioConfig.httpPort = KUBERNETES_HTTP_PORT;\n    } else {\n      ioConfig.httpPort = ioConfig.httpDevPort || getPort();\n    }\n\n    const ioDeps = ioModule(ioConfig);\n    const services = { GenericInsurance };\n    const microservice = new DipMicroservice(App, ioDeps, services);\n\n    microservice.bootstrap().catch((err) => {\n      ioDeps.log.error(err);\n\n      if (err.exit) process.exit(1);\n    });\n  } catch (err) {\n    console.error(err);\n\n    if (err.exit) process.exit(1);\n  }\n}\n\n/**\n * Create microservice instance\n * @param {Class} App\n * @param {{}} config\n * @return {DipMicroservice}\n */\nfunction fabric(App, config = {}) {\n  const ioConfig = {\n    knexfile,\n    appName: config.appName || _.last(process.env.npm_package_name.split('/')),\n    appVersion: config.appVersion || process.env.npm_package_version,\n    exchangeName: config.exchangeName || 'POLICY', // TODO: use an universal exchange for all 'topic' platform messages or make an exchanges list\n    ...config,\n  };\n\n  const ioDeps = ioModule(ioConfig);\n  const services = { GenericInsurance };\n  return new DipMicroservice(App, ioDeps, services);\n}\n\nmodule.exports = {\n  bootstrap,\n  fabric,\n  isDockerHost,\n  isKubernetesHost,\n  knexfile,\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "name": "KUBERNETES_HTTP_PORT",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~KUBERNETES_HTTP_PORT",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 376,
    "kind": "function",
    "name": "bootstrap",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~bootstrap",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/index.js",
    "importStyle": null,
    "description": "Start application",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "App",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 377,
    "kind": "function",
    "name": "fabric",
    "memberof": "dip-platform/shared/etherisc-microservice/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/index.js~fabric",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/index.js",
    "importStyle": null,
    "description": "Create microservice instance",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "App",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DipMicroservice"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 378,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/index.js",
    "content": "const amqplib = require('amqplib');\nconst messageProcessor = require('./messages');\n\n/**\n * RabbitMQ client\n */\nclass Amqp {\n  /**\n   * Constructor\n   * @param {string} connectionString\n   * @param {string} appName\n   * @param {string} appVersion\n   * @param {string} exchangeName\n   */\n  constructor(connectionString, appName, appVersion, exchangeName) {\n    this.connectionString = connectionString;\n\n    this.appName = appName;\n    this.appVersion = appVersion;\n    this.exchangeName = exchangeName;\n\n    this.exchangeName = 'POLICY';\n    // TODO: use an universal exchange for all 'topic' platform messages or make an exchanges list\n\n    this._connection = null;\n    this._channel = null;\n  }\n\n  /**\n   * Get connection to broker\n   * @return {null}\n   */\n  get connection() {\n    return this._connection;\n  }\n\n  /**\n   * Get channel to broker connection\n   * @return {null}\n   */\n  get channel() {\n    return this._channel;\n  }\n\n  /**\n   * Close connection with broker\n   */\n  closeConnection() {\n    if (this._connection) this.connection.close();\n  }\n\n  /**\n   * Close channel\n   */\n  closeChannel() {\n    if (this._channel) this.channel.close();\n  }\n\n  /**\n   * Connect to RabbitMQ broker\n   * @return {*}\n   */\n  async createConnection() {\n    if (this._connection) {\n      this._connection.close();\n    }\n\n    this._connection = await amqplib.connect(this.connectionString);\n\n    return this._connection;\n  }\n\n  /**\n   * Create new channel\n   * @return {Promise<null>}\n   */\n  async createChannel() {\n    if (!this._connection) throw new Error('Amqp connection does\\'n exists');\n    if (this._channel) {\n      return this._channel;\n    }\n\n    this._channel = await this._connection.createChannel();\n\n    return this._channel;\n  }\n\n  /**\n   * Start module\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    await this.createConnection();\n    await this.createChannel();\n  }\n\n  /**\n   * Shutdown module\n   */\n  shutdown() {\n    this.closeChannel();\n    this.closeConnection();\n  }\n\n  /**\n   * Start listening to queue messages\n   * @param {{}} params\n   * @param {string} [params.sourceMicroservice = '*']\n   * @param {string} [params.messageType = '*']\n   * @param {string} [params.messageTypeVersion = '*.*']\n   * @param {function} params.handler\n   * @return {Promise<void>}\n   */\n  async consume({\n    sourceMicroservice = '*', messageType = '*', messageTypeVersion = '*.*', handler,\n  }) {\n    if (!this._channel) throw new Error('Amqp channel doesn\\'t exist');\n    await this._channel.assertExchange(this.exchangeName, 'topic', { durable: true });\n\n    const queueName = `${this.appName}_${this.appVersion}_${sourceMicroservice}_${messageType}_${messageTypeVersion}`;\n    const topic = `${sourceMicroservice}.${messageType}.${messageTypeVersion}`;\n\n    const queue = await this._channel.assertQueue(queueName, { exclusive: false, durable: true });\n    await this._channel.bindQueue(queue.queue, this.exchangeName, topic);\n\n    const messageHandler = this.handleMessage({ messageType, messageTypeVersion, handler }).bind(this);\n    await this._channel.consume(queue.queue, messageHandler, { noAck: true });\n  }\n\n  /**\n   * Preprocess queue message and pass it to specified handler\n   * @param {{}} params\n   * @param {string} [params.messageType = '*']\n   * @param {string} [params.messageTypeVersion = '*.*']\n   * @param {Function} params.handler\n   * @return {function}\n   */\n  handleMessage({ messageType = '*', messageTypeVersion = '*.*', handler }) {\n    return (message) => {\n      const { fields, properties } = message;\n      let content;\n\n      if (messageType === '*') {\n        content = JSON.parse(message.content.toString());\n      } else {\n        content = messageProcessor.unpack(message.content, messageType, messageTypeVersion);\n      }\n\n      return handler({\n        content,\n        fields,\n        properties,\n      });\n    };\n  }\n\n  /**\n   * Publish message to queue\n   * @param {{}} params\n   * @param {string} [params.messageType = 'latest']\n   * @param {string} params.messageTypeVersion\n   * @param {{}} params.content\n   * @param {string} params.correlationId\n   * @param {{}} params.customHeaders\n   * @return {Promise<void>}\n   */\n  async publish({\n    messageType, messageTypeVersion = 'latest', content, correlationId, customHeaders,\n  }) {\n    if (!this._channel) throw new Error('Amqp channel doesn\\'t exist');\n    await this._channel.assertExchange(this.exchangeName, 'topic', { durable: true });\n\n    const specificMessageTypeVersion = messageProcessor.findMessageSchema(messageType, messageTypeVersion).version;\n    const topic = `${this.appName}.${messageType}.${specificMessageTypeVersion}`;\n\n    await this._channel.publish(this.exchangeName,\n      topic,\n      messageProcessor.pack(content, messageType, specificMessageTypeVersion),\n      messageProcessor.headers(correlationId, customHeaders, this.appName, this.appVersion, messageType));\n  }\n}\n\nmodule.exports = Amqp;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 379,
    "kind": "class",
    "name": "Amqp",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/index.js",
    "importStyle": "Amqp",
    "description": "RabbitMQ client",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 380,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "connectionString",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "appName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "appVersion",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "exchangeName",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 381,
    "kind": "member",
    "name": "connectionString",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#connectionString",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "member",
    "name": "appName",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#appName",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "member",
    "name": "appVersion",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#appVersion",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "member",
    "name": "exchangeName",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#exchangeName",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "member",
    "name": "_connection",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#_connection",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "member",
    "name": "_channel",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#_channel",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "get",
    "name": "connection",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#connection",
    "access": "public",
    "description": "Get connection to broker",
    "lineNumber": 33,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "get",
    "name": "channel",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#channel",
    "access": "public",
    "description": "Get channel to broker connection",
    "lineNumber": 41,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "closeConnection",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#closeConnection",
    "access": "public",
    "description": "Close connection with broker",
    "lineNumber": 48,
    "params": [],
    "return": null
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "closeChannel",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#closeChannel",
    "access": "public",
    "description": "Close channel",
    "lineNumber": 55,
    "params": [],
    "return": null
  },
  {
    "__docId__": 392,
    "kind": "method",
    "name": "createConnection",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#createConnection",
    "access": "public",
    "description": "Connect to RabbitMQ broker",
    "lineNumber": 63,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "createChannel",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#createChannel",
    "access": "public",
    "description": "Create new channel",
    "lineNumber": 77,
    "return": {
      "nullable": null,
      "types": [
        "Promise<null>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 396,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#bootstrap",
    "access": "public",
    "description": "Start module",
    "lineNumber": 92,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "shutdown",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#shutdown",
    "access": "public",
    "description": "Shutdown module",
    "lineNumber": 100,
    "params": [],
    "return": null
  },
  {
    "__docId__": 398,
    "kind": "method",
    "name": "consume",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#consume",
    "access": "public",
    "description": "Start listening to queue messages",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " '*'",
        "defaultRaw": " '*'",
        "name": "params.sourceMicroservice",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " '*'",
        "defaultRaw": " '*'",
        "name": "params.messageType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " '*.*'",
        "defaultRaw": " '*.*'",
        "name": "params.messageTypeVersion",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "params.handler",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "handleMessage",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#handleMessage",
    "access": "public",
    "description": "Preprocess queue message and pass it to specified handler",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " '*'",
        "defaultRaw": " '*'",
        "name": "params.messageType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " '*.*'",
        "defaultRaw": " '*.*'",
        "name": "params.messageTypeVersion",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "params.handler",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "publish",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/index.js~Amqp#publish",
    "access": "public",
    "description": "Publish message to queue",
    "lineNumber": 167,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 'latest'",
        "defaultRaw": " 'latest'",
        "name": "params.messageType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "params.messageTypeVersion",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "params.correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "params.customHeaders",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 401,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "content": "const { Validator } = require('jsonschema');\nconst uuid = require('uuid/v4');\nconst types = require('./types');\n\n\nconst validator = new Validator();\n\n/**\n * Find the latest schema for type and version\n * @param {string} type\n * @param {string} version\n * @return {{}}\n */\nconst findMessageSchema = (type, version) => {\n  const versionMatcher = types[type];\n  if (!versionMatcher) console.error(type, 'not found among known types'); // eslint-disable-line no-console\n  return versionMatcher(version || 'latest');\n};\n\n/**\n * Validate message against defined schema\n * @param {{}} object\n * @param {string} type\n * @param {string} version\n */\nconst validate = (object, type, version) => {\n  validator.validate(object, findMessageSchema(type, version));\n};\n\n/**\n * Pack message\n * @param {{}} object\n * @param {string} type\n * @param {string} version\n * @return {Buffer}\n */\nconst pack = (object, type, version) => {\n  validate(object, type, version);\n  return Buffer.from(JSON.stringify(object));\n};\n\n/**\n * Unpack message\n * @param {Buffer} buffer\n * @param {string} type\n * @param {string} version\n * @return {*}\n */\nconst unpack = (buffer, type, version) => {\n  const object = JSON.parse(buffer.toString());\n  validate(object, type, version);\n  return object;\n};\n\n/**\n * Set message headers\n * @param {string} correlationId\n * @param {{}} customValues\n * @param {string} serviceName\n * @param {string} serviceVersion\n * @param {string} messageType\n * @return {{correlationId: string, headers: *}}\n */\nconst headers = (correlationId, customValues, serviceName, serviceVersion, messageType) => {\n  const newCorrelationId = correlationId || `${uuid()}-${serviceName}-${serviceVersion}-${messageType}-${process.hrtime()[0]}`;\n\n  return {\n    persistent: true,\n    deliveryMode: true,\n    mandatory: true,\n    correlationId: newCorrelationId,\n    headers: {\n      ...customValues,\n      originatorName: serviceName,\n      originatorVersion: serviceVersion,\n    },\n  };\n};\n\nmodule.exports = {\n  pack, unpack, validate, headers, findMessageSchema,\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 402,
    "kind": "variable",
    "name": "validator",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js~validator",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 403,
    "kind": "function",
    "name": "findMessageSchema",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js~findMessageSchema",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "importStyle": null,
    "description": "Find the latest schema for type and version",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 404,
    "kind": "function",
    "name": "validate",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "importStyle": null,
    "description": "Validate message against defined schema",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 405,
    "kind": "function",
    "name": "pack",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js~pack",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "importStyle": null,
    "description": "Pack message",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 406,
    "kind": "function",
    "name": "unpack",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js~unpack",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "importStyle": null,
    "description": "Unpack message",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 407,
    "kind": "function",
    "name": "headers",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js~headers",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/index.js",
    "importStyle": null,
    "description": "Set message headers",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "customValues",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "serviceName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "serviceVersion",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "messageType",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{correlationId: string, headers: *}"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 408,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifact.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'artifact',\n  type: 'object',\n  properties: {\n    network: { type: 'string' },\n    version: { type: 'string' },\n    contract: { type: 'string' },\n    artifact: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifact.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 409,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifact.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifact.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifact.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 410,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactList.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'artifactList',\n  type: 'object',\n  properties: {\n    network: { type: 'string' },\n    version: { type: 'string' },\n    list: { type: 'array' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactList.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 411,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactList.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactList.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactList.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactListRequest.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'artifactListRequest',\n  type: 'object',\n  properties: {\n    network: { type: 'string' },\n    version: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactListRequest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 413,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactListRequest.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactListRequest.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactListRequest.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactRequest.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'artifactListRequest',\n  type: 'object',\n  properties: {\n    network: { type: 'string' },\n    version: { type: 'string' },\n    contract: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactRequest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 415,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactRequest.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactRequest.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/artifactRequest.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 416,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/cardCharged.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'cardCharged',\n  type: 'object',\n  properties: {\n    policyId: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/cardCharged.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 417,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/cardCharged.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/cardCharged.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/cardCharged.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/chargeCard.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'chargeCard',\n  type: 'object',\n  properties: {\n    policyId: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/chargeCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 419,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/chargeCard.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/chargeCard.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/chargeCard.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/contractDeployment.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'contractDeployment',\n  type: 'object',\n  properties: {\n    network: { type: 'string' },\n    version: { type: 'string' },\n    artifact: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/contractDeployment.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 421,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/contractDeployment.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/contractDeployment.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/contractDeployment.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/decodedEvent.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'decodedEvent',\n  type: 'object',\n  properties: {\n    address: { type: 'string', minLength: 42, maxLength: 42 },\n    transactionHash: { type: 'string', minLength: 66, maxLength: 66 },\n    data: { type: 'string' },\n    eventName: { type: 'string' },\n    networkName: { type: 'string' },\n    version: { type: 'string' },\n\n    topics: { type: 'object' },\n    eventArgs: { type: 'object' },\n\n    blockNumber: { type: 'number' }, // TODO: check if pack/unpack handles BigNumber properly\n    logIndex: { type: 'number' },\n    transactionIndex: { type: 'number' },\n\n    timeStamp: { type: 'string', format: 'date-time' },\n    created: { type: 'string', format: 'date-time' },\n    updated: { type: 'string', format: 'date-time' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/decodedEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 423,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/decodedEvent.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/decodedEvent.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/decodedEvent.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 424,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/existingEventsRequest.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'existingEventsRequest',\n  type: 'object',\n  properties: {\n    network: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/existingEventsRequest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 425,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/existingEventsRequest.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/existingEventsRequest.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/existingEventsRequest.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 426,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "content": "const _ = require('lodash');\n\n/**\n * Provider message schema by version\n * @param {{}} versionMapping\n * @return {Function}\n */\nconst makeVersionMatcher = versionMapping => (versionRequired) => {\n  const mappingKeys = Object.keys(versionMapping).sort();\n  let versionFound = null;\n\n  if (versionRequired === 'latest') {\n    versionFound = _.last(mappingKeys);\n  } else if (mappingKeys.indexOf(versionRequired) >= 0) {\n    versionFound = versionRequired;\n  } else {\n    const [majorVersion, minorVersion] = versionRequired.split('.', 2);\n    if (minorVersion === '*') {\n      const versionPattern = new RegExp(`${majorVersion === '*' ? '.' : majorVersion}\\\\..`);\n      const filteredKeys = mappingKeys.filter(key => versionPattern.test(key));\n      versionFound = _.last(filteredKeys);\n    }\n  }\n\n  if (versionFound) {\n    return { ...versionMapping[versionFound], version: versionFound };\n  }\n\n  throw new Error(`${versionRequired} - Version unavailable`);\n};\n\nconst existingEventsRequest = require('./existingEventsRequest');\n\n\nmodule.exports.existingEventsRequest = makeVersionMatcher(existingEventsRequest);\n\nconst artifact = require('./artifact');\n\n\nmodule.exports.artifact = makeVersionMatcher(artifact);\n\nconst artifactList = require('./artifactList');\n\n\nmodule.exports.artifactList = makeVersionMatcher(artifactList);\n\nconst artifactRequest = require('./artifactRequest');\n\n\nmodule.exports.artifactRequest = makeVersionMatcher(artifactRequest);\n\nconst artifactListRequest = require('./artifactListRequest');\n\n\nmodule.exports.artifactListRequest = makeVersionMatcher(artifactListRequest);\n\nconst contractDeployment = require('./contractDeployment');\n\n\nmodule.exports.contractDeployment = makeVersionMatcher(contractDeployment);\n\nconst decodedEvent = require('./decodedEvent');\n\n\nmodule.exports.decodedEvent = makeVersionMatcher(decodedEvent);\n\nconst policyCreationRequest = require('./policyCreationRequest');\n\n\nmodule.exports.policyCreationRequest = makeVersionMatcher(policyCreationRequest);\n\nconst policyCreationSuccess = require('./policyCreationSuccess');\n\n\nmodule.exports.policyCreationSuccess = makeVersionMatcher(policyCreationSuccess);\n\nconst policyCreationError = require('./policyCreationError');\n\n\nmodule.exports.policyCreationError = makeVersionMatcher(policyCreationError);\n\nconst stateChanged = require('./stateChanged');\n\n\nmodule.exports.stateChanged = makeVersionMatcher(stateChanged);\n\nconst transactionCreated = require('./transactionCreated');\n\n\nmodule.exports.transactionCreated = makeVersionMatcher(transactionCreated);\n\nconst chargeCard = require('./chargeCard');\n\n\nmodule.exports.chargeCard = makeVersionMatcher(chargeCard);\n\nconst issueCertificate = require('./issueCertificate');\n\n\nmodule.exports.issueCertificate = makeVersionMatcher(issueCertificate);\n\nconst payout = require('./payout');\n\n\nmodule.exports.payout = makeVersionMatcher(payout);\n\nconst paidOut = require('./paidOut');\n\n\nmodule.exports.paidOut = makeVersionMatcher(paidOut);\n\nconst cardCharged = require('./cardCharged');\n\n\nmodule.exports.cardCharged = makeVersionMatcher(cardCharged);\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 427,
    "kind": "function",
    "name": "makeVersionMatcher",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~makeVersionMatcher",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": null,
    "description": "Provider message schema by version",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "versionMapping",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 428,
    "kind": "variable",
    "name": "existingEventsRequest",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~existingEventsRequest",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{existingEventsRequest}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 429,
    "kind": "variable",
    "name": "artifact",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~artifact",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{artifact}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 430,
    "kind": "variable",
    "name": "artifactList",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~artifactList",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{artifactList}",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "variable",
    "name": "artifactRequest",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~artifactRequest",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{artifactRequest}",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 432,
    "kind": "variable",
    "name": "artifactListRequest",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~artifactListRequest",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{artifactListRequest}",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 433,
    "kind": "variable",
    "name": "contractDeployment",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~contractDeployment",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{contractDeployment}",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "variable",
    "name": "decodedEvent",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~decodedEvent",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{decodedEvent}",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "variable",
    "name": "policyCreationRequest",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~policyCreationRequest",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{policyCreationRequest}",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 436,
    "kind": "variable",
    "name": "policyCreationSuccess",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~policyCreationSuccess",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{policyCreationSuccess}",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 437,
    "kind": "variable",
    "name": "policyCreationError",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~policyCreationError",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{policyCreationError}",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 438,
    "kind": "variable",
    "name": "stateChanged",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~stateChanged",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{stateChanged}",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 439,
    "kind": "variable",
    "name": "transactionCreated",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~transactionCreated",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{transactionCreated}",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 440,
    "kind": "variable",
    "name": "chargeCard",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~chargeCard",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{chargeCard}",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 441,
    "kind": "variable",
    "name": "issueCertificate",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~issueCertificate",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{issueCertificate}",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 442,
    "kind": "variable",
    "name": "payout",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~payout",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{payout}",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 443,
    "kind": "variable",
    "name": "paidOut",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~paidOut",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{paidOut}",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 444,
    "kind": "variable",
    "name": "cardCharged",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js~cardCharged",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/index.js",
    "importStyle": "{cardCharged}",
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/issueCertificate.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'issueCertificate',\n  type: 'object',\n  properties: {\n    policyId: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/issueCertificate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 446,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/issueCertificate.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/issueCertificate.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/issueCertificate.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/paidOut.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'paidOut',\n  type: 'object',\n  properties: {\n    policyId: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/paidOut.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/paidOut.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/paidOut.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/paidOut.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 449,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/payout.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'payout',\n  type: 'object',\n  properties: {\n    policyId: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/payout.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 450,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/payout.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/payout.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/payout.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationError.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'policyCreationError',\n  type: 'object',\n  properties: {\n    error: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 452,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationError.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationError.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationError.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 453,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationRequest.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'policyCreationRequest',\n  type: 'object',\n  properties: {\n    payload: { type: 'object' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationRequest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 454,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationRequest.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationRequest.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationRequest.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationSuccess.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'policyCreationSuccess',\n  type: 'object',\n  properties: {\n    policyId: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationSuccess.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 456,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationSuccess.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationSuccess.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/policyCreationSuccess.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/stateChanged.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'stateChanged',\n  type: 'object',\n  properties: {\n    policyId: { type: 'string' },\n    state: { type: 'number' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/stateChanged.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 458,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/stateChanged.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/stateChanged.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/stateChanged.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/transactionCreated.js",
    "content": "const schemaVersions = {};\n\nschemaVersions['1.0'] = {\n  id: 'transactionCreated',\n  type: 'object',\n  properties: {\n    policyId: { type: 'string' },\n  },\n};\n\nmodule.exports = schemaVersions;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/transactionCreated.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 460,
    "kind": "variable",
    "name": "schemaVersions",
    "memberof": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/transactionCreated.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/amqp/messages/types/transactionCreated.js~schemaVersions",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/amqp/messages/types/transactionCreated.js",
    "importStyle": "schemaVersions",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 461,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/db/index.js",
    "content": "const Knex = require('knex');\n\n/**\n * Database\n */\nclass Database {\n  /**\n   * Constructor\n   * @param {Knexfile} options\n   */\n  constructor(options) {\n    this.options = options;\n\n    this._connection = null;\n  }\n\n  /**\n   * Get database connection\n   * @return {Knex}\n   */\n  getConnection() {\n    return this._connection;\n  }\n\n  /**\n   * Create database connection\n   * @return {Knex}\n   */\n  createConnection() {\n    this._connection = Knex(this.options);\n\n    return this._connection;\n  }\n\n  /**\n   * Start module\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    await this.createConnection();\n\n    await this._connection.raw('select 1+1 as result').catch((e) => {\n      const error = e;\n      error.exit = 1;\n\n      throw error;\n    });\n  }\n\n  /**\n   * Shutdown module\n   */\n  shutdown() {\n    if (this._connection) {\n      this._connection.destroy();\n    }\n  }\n}\n\nmodule.exports = Database;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/db/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 462,
    "kind": "class",
    "name": "Database",
    "memberof": "dip-platform/shared/etherisc-microservice/io/db/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/db/index.js",
    "importStyle": "Database",
    "description": "Database",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 463,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Knexfile"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 464,
    "kind": "member",
    "name": "options",
    "memberof": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database#options",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "member",
    "name": "_connection",
    "memberof": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database#_connection",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "method",
    "name": "getConnection",
    "memberof": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database#getConnection",
    "access": "public",
    "description": "Get database connection",
    "lineNumber": 21,
    "return": {
      "nullable": null,
      "types": [
        "Knex"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 467,
    "kind": "method",
    "name": "createConnection",
    "memberof": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database#createConnection",
    "access": "public",
    "description": "Create database connection",
    "lineNumber": 29,
    "return": {
      "nullable": null,
      "types": [
        "Knex"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 469,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database#bootstrap",
    "access": "public",
    "description": "Start module",
    "lineNumber": 39,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 470,
    "kind": "method",
    "name": "shutdown",
    "memberof": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/db/index.js~Database#shutdown",
    "access": "public",
    "description": "Shutdown module",
    "lineNumber": 53,
    "params": [],
    "return": null
  },
  {
    "__docId__": 471,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "content": "const SERVER_IS_READY = 'SERVER_IS_READY';\nconst SERVER_IS_NOT_READY = 'SERVER TEMPORARILY UNAVAILABLE';\nconst SERVER_IS_SHUTTING_DOWN = 'SERVER_IS_SHUTTING_DOWN';\nconst SERVER_IS_NOT_SHUTTING_DOWN = 'SERVER_IS_LIVE';\n\n/**\n * Routes for Kubernetes\n */\nclass K8sController {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.shuttingDownStatus = false;\n    this.readyStatus = false;\n\n    this.ready = this.ready.bind(this);\n    this.live = this.live.bind(this);\n    this.version = this.version.bind(this);\n  }\n\n  /**\n   * Set health status\n   * @param {boolean} status\n   */\n  setShuttingDownStatus(status = true) {\n    this.shuttingDownStatus = status;\n  }\n\n  /**\n   * Set ready status\n   * @param {boolean} status\n   */\n  setReadyStatus(status = true) {\n    this.readyStatus = status;\n  }\n\n  /**\n   * Get application health status\n   * @param {Context} ctx\n   * @return {Promise<void>}\n   */\n  async health(ctx) {\n    let status;\n    let message;\n\n    if (this.shuttingDown) {\n      status = 500;\n      message = SERVER_IS_SHUTTING_DOWN;\n    } else if (this.readyStatus) {\n      status = 200;\n      message = SERVER_IS_READY;\n    } else {\n      status = 500;\n      message = SERVER_IS_NOT_READY;\n    }\n\n    ctx.type = 'text/plain';\n    ctx.status = status;\n    ctx.body = message;\n  }\n\n\n  /**\n   * Is service live\n   * @param {Context} ctx\n   * @return {Promise<void>}\n   */\n  async live(ctx) {\n    let status = 200;\n    let message;\n\n    if (this.shuttingDownStatus) {\n      status = 500;\n      message = SERVER_IS_SHUTTING_DOWN;\n    } else {\n      status = 200;\n      message = SERVER_IS_NOT_SHUTTING_DOWN;\n    }\n\n    ctx.type = 'text/plain';\n    ctx.status = status;\n    ctx.body = message;\n  }\n\n  /**\n   * Is service ready to accept requests\n   * @param {Context} ctx\n   * @return {Promise<void>}\n   */\n  async ready(ctx) {\n    let status;\n    let message;\n\n    if (this.readyStatus) {\n      message = SERVER_IS_READY;\n      status = 200;\n    } else {\n      message = SERVER_IS_NOT_READY;\n      status = 500;\n    }\n\n    ctx.type = 'text/plain';\n    ctx.status = status;\n    ctx.body = message;\n  }\n\n  /**\n   * Get application version\n   * @param {Content} ctx\n   * @return {Promise<void>}\n   */\n  async version(ctx) {\n    ctx.body = {\n      name: process.env.npm_package_name,\n      version: process.env.npm_package_version,\n    };\n  }\n}\n\nmodule.exports = K8sController;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 472,
    "kind": "variable",
    "name": "SERVER_IS_READY",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~SERVER_IS_READY",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 473,
    "kind": "variable",
    "name": "SERVER_IS_NOT_READY",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~SERVER_IS_NOT_READY",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 474,
    "kind": "variable",
    "name": "SERVER_IS_SHUTTING_DOWN",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~SERVER_IS_SHUTTING_DOWN",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 475,
    "kind": "variable",
    "name": "SERVER_IS_NOT_SHUTTING_DOWN",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~SERVER_IS_NOT_SHUTTING_DOWN",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 476,
    "kind": "class",
    "name": "K8sController",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js",
    "importStyle": "K8sController",
    "description": "Routes for Kubernetes",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 477,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 13
  },
  {
    "__docId__": 478,
    "kind": "member",
    "name": "shuttingDownStatus",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController#shuttingDownStatus",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 479,
    "kind": "member",
    "name": "readyStatus",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController#readyStatus",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 483,
    "kind": "method",
    "name": "setShuttingDownStatus",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController#setShuttingDownStatus",
    "access": "public",
    "description": "Set health status",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 485,
    "kind": "method",
    "name": "setReadyStatus",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController#setReadyStatus",
    "access": "public",
    "description": "Set ready status",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 487,
    "kind": "method",
    "name": "health",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController#health",
    "access": "public",
    "description": "Get application health status",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 488,
    "kind": "method",
    "name": "live",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController#live",
    "access": "public",
    "description": "Is service live",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 489,
    "kind": "method",
    "name": "ready",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController#ready",
    "access": "public",
    "description": "Is service ready to accept requests",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 490,
    "kind": "method",
    "name": "version",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/controllers/k8sController.js~K8sController#version",
    "access": "public",
    "description": "Get application version",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Content"
        ],
        "spread": false,
        "optional": false,
        "name": "ctx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 491,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js",
    "content": "module.exports = async function exceptionHandler(ctx, next) {\n  try {\n    await next();\n  } catch (err) {\n    ctx.status = 500;\n\n    if (process.env.NODE_ENV !== 'production') {\n      ctx.body = ctx.body || { error: err.toString() };\n    }\n\n    ctx.app.emit('error', err, ctx);\n  }\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 492,
    "kind": "function",
    "name": "exceptionHandler",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js~exceptionHandler",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/http/exceptionHandler.js",
    "importStyle": "exceptionHandler",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 493,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/http/index.js",
    "content": "const Koa = require('koa');\nconst Logger = require('koa-logger');\nconst Cors = require('kcors');\nconst BodyParser = require('koa-bodyparser');\nconst prometheus = require('@echo-health/koa-prometheus-exporter');\nconst exceptionHandler = require('./exceptionHandler');\nconst router = require('./router');\nconst K8sController = require('./controllers/k8sController');\n\n/**\n * Http server\n */\nclass HttpApp extends Koa {\n  /**\n   * Constructor\n   * @param {number} port\n   */\n  constructor(port) {\n    super();\n\n    this._server = null;\n\n    this._port = port;\n\n    this._controllers = {};\n  }\n\n  /**\n   * Get instance of server\n   * @return {null|*}\n   */\n  get server() {\n    return this._server;\n  }\n\n  /**\n   * Get server port\n   * @return {number}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * Shutdown http server\n   */\n  shutdown() {\n    if (this._server) {\n      this._server.close();\n    }\n  }\n\n  /**\n   * Set application readyness status\n   * @param {boolean} status\n   */\n  setReadyStatus(status) {\n    const { k8sController } = this._controllers;\n\n    if (!k8sController) {\n      throw new Error({\n        message: 'k8sController does not exists',\n        exit: 1,\n      });\n    }\n\n    k8sController.setReadyStatus(status);\n  }\n\n  /**\n   * Get application shutdown status\n   * @return {boolean}\n   */\n  getShuttingDownStatus() {\n    const { k8sController } = this._controllers;\n\n    if (!k8sController) {\n      throw new Error({\n        message: 'k8sController does not exists',\n        exit: 1,\n      });\n    }\n\n    return k8sController.shuttingDownStatus;\n  }\n\n  /**\n   * Set application shutdown status\n   * @param {boolean} status\n   */\n  setShuttingDownStatus(status) {\n    const { k8sController } = this._controllers;\n\n    if (!k8sController) {\n      throw new Error({\n        message: 'k8sController does not exists',\n        exit: 1,\n      });\n    }\n\n    k8sController.setShuttingDownStatus(status);\n  }\n\n  /**\n   * Start http server\n   * @param {Router} appRouter\n   * @return {Promise}\n   */\n  bootstrap(appRouter) {\n    this._controllers.k8sController = new K8sController();\n    const coreRouter = router(this._controllers);\n\n    this\n      .use(exceptionHandler)\n      .use(new Logger())\n      .use(new Cors())\n      .use(new BodyParser())\n      .use(appRouter.routes())\n      .use(coreRouter.routes())\n      .use(prometheus.httpMetricMiddleware())\n      .use(prometheus.middleware({}));\n\n    return new Promise((resolve, reject) => {\n      this._server = this.listen(this._port, (err) => {\n        if (err) {\n          reject(new Error(err));\n          return;\n        }\n\n        resolve({\n          host: 'http://localhost',\n          port: this._port,\n        });\n      });\n    });\n  }\n}\n\nmodule.exports = HttpApp;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/http/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 494,
    "kind": "class",
    "name": "HttpApp",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/http/index.js",
    "importStyle": "HttpApp",
    "description": "Http server",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "koa~Koa"
    ]
  },
  {
    "__docId__": 495,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "port",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 496,
    "kind": "member",
    "name": "_server",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#_server",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 497,
    "kind": "member",
    "name": "_port",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#_port",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 498,
    "kind": "member",
    "name": "_controllers",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#_controllers",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 499,
    "kind": "get",
    "name": "server",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#server",
    "access": "public",
    "description": "Get instance of server",
    "lineNumber": 32,
    "return": {
      "nullable": null,
      "types": [
        "null",
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 500,
    "kind": "get",
    "name": "port",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#port",
    "access": "public",
    "description": "Get server port",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 501,
    "kind": "method",
    "name": "shutdown",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#shutdown",
    "access": "public",
    "description": "Shutdown http server",
    "lineNumber": 47,
    "params": [],
    "return": null
  },
  {
    "__docId__": 502,
    "kind": "method",
    "name": "setReadyStatus",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#setReadyStatus",
    "access": "public",
    "description": "Set application readyness status",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 503,
    "kind": "method",
    "name": "getShuttingDownStatus",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#getShuttingDownStatus",
    "access": "public",
    "description": "Get application shutdown status",
    "lineNumber": 74,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 504,
    "kind": "method",
    "name": "setShuttingDownStatus",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#setShuttingDownStatus",
    "access": "public",
    "description": "Set application shutdown status",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 505,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/index.js~HttpApp#bootstrap",
    "access": "public",
    "description": "Start http server",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "appRouter",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 507,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/http/router/index.js",
    "content": "const Router = require('koa-router');\n\n\nmodule.exports = (controllers) => {\n  const router = new Router();\n\n  const { k8sController } = controllers;\n\n  router\n    .get('/ready', k8sController.ready)\n    .get('/live', k8sController.live)\n    .get('/version', k8sController.version);\n\n  return router;\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/http/router/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 508,
    "kind": "function",
    "name": "index",
    "memberof": "dip-platform/shared/etherisc-microservice/io/http/router/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/http/router/index.js~index",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/http/router/index.js",
    "importStyle": "index",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "controllers",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 509,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/log/index.js",
    "content": "/* eslint no-console: 0 */\nmodule.exports = {\n  debug: console.log,\n  info: console.log,\n  warn: console.log,\n  error: console.error,\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/log/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 510,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/module.js",
    "content": "const Amqp = require('./amqp');\nconst Database = require('./db');\nconst HttpApp = require('./http');\nconst log = require('./log');\nconst S3 = require('./s3');\nconst WebSocket = require('./websocket');\n\n\nconst { MESSAGE_BROKER } = process.env;\n\nmodule.exports = (config) => {\n  const s3 = new S3({\n    accessKeyId: process.env.AWS_ACCESS_KEY || 'accesskey',\n    secretAccessKey: process.env.AWS_SECRET_KEY || 'secretkey',\n    endpoint: process.env.AWS_ENDPOINT || 'http://localhost:9000',\n    s3ForcePathStyle: true,\n    signatureVersion: 'v4',\n  });\n\n  const db = new Database(config.knexfile);\n  const http = new HttpApp(config.httpPort);\n\n  /**\n   * Create WebSocket endpoint\n   * @param {Server} server\n   * @return {WebSocket}\n   */\n  const websocket = server => new WebSocket({ server, config, log });\n\n  const { appName, appVersion, exchangeName } = config;\n\n  const amqp = new Amqp(MESSAGE_BROKER || 'amqp://localhost:5672', appName, appVersion, exchangeName);\n\n  return {\n    amqp, db, http, log, s3, config, websocket,\n  };\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/module.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 511,
    "kind": "variable",
    "name": "MESSAGE_BROKER",
    "memberof": "dip-platform/shared/etherisc-microservice/io/module.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/module.js~MESSAGE_BROKER",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 512,
    "kind": "function",
    "name": "module",
    "memberof": "dip-platform/shared/etherisc-microservice/io/module.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/module.js~module",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/module.js",
    "importStyle": "module",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"amqp\": *, \"db\": *, \"http\": *, \"log\": *, \"s3\": *, \"config\": *, \"websocket\": *}"
      ]
    }
  },
  {
    "__docId__": 513,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/s3/index.js",
    "content": "const AWS = require('aws-sdk');\n\n/**\n * Database\n */\nclass S3 {\n  /**\n   * Constructor\n   * @param {options} options\n   */\n  constructor(options) {\n    this.options = options;\n\n    this.client = null;\n  }\n\n  /**\n   * Start module\n   * @param {string} bucket\n   * @return {Promise<void>}\n   */\n  async bootstrap(bucket) {\n    this.bucket = bucket;\n    this.client = new AWS.S3(this.options);\n    if (!this.bucket) return;\n    await this.client.createBucket({ Bucket: this.bucket }).promise()\n      .catch((e) => {\n        const error = new Error(JSON.stringify({ message: e.message, stack: e.stack }));\n        if (e.code !== 'BucketAlreadyOwnedByYou') {\n          error.exit = true;\n          throw (error);\n        }\n      });\n  }\n\n  /**\n   * Send artifact list\n   * @param {string} product\n   * @param {string} network\n   * @return {string}\n   */\n  async getLastVersion(product, network) {\n    const prefix = `${product}/${network}/`;\n    const response = await this.client.listObjects({\n      Bucket: this.bucket,\n      Prefix: prefix,\n    }).promise();\n    return response.Contents\n      .map(o => o.Key.replace(prefix, '').replace(/(.+)\\/.+/, '$1'))\n      .sort()\n      .slice(-1)[0];\n  }\n\n  /**\n   * Getting artifacts\n   * @param {string} product\n   * @param {string} network\n   * @param {string} version\n   * @return {array<buffer>}\n   */\n  async getArtifacts(product, network, version) {\n    const prefix = `${product}/${network}/${version || await this.getLastVersion(product, network)}/`;\n    const list = await this.client.listObjects({\n      Bucket: this.bucket,\n      Delimiter: '/',\n      Prefix: prefix,\n    }).promise();\n    return Promise.all(\n      list.Contents.map(async (o) => {\n        const object = await this.client.getObject({\n          Bucket: this.bucket,\n          Key: o.Key,\n        }).promise();\n        return {\n          name: o.Key.replace(prefix, ''),\n          content: JSON.parse(object.Body.toString()),\n        };\n      }),\n    );\n  }\n\n  /**\n   * Shutdown module\n   */\n  shutdown() {\n    if (this.client) {\n      this.client = null;\n    }\n  }\n}\n\nmodule.exports = S3;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/s3/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 514,
    "kind": "class",
    "name": "S3",
    "memberof": "dip-platform/shared/etherisc-microservice/io/s3/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/s3/index.js",
    "importStyle": "S3",
    "description": "Database",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 515,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "options"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 516,
    "kind": "member",
    "name": "options",
    "memberof": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3#options",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 517,
    "kind": "member",
    "name": "client",
    "memberof": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3#client",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3#bootstrap",
    "access": "public",
    "description": "Start module",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bucket",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 519,
    "kind": "member",
    "name": "bucket",
    "memberof": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3#bucket",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 521,
    "kind": "method",
    "name": "getLastVersion",
    "memberof": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3#getLastVersion",
    "access": "public",
    "description": "Send artifact list",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "product",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 522,
    "kind": "method",
    "name": "getArtifacts",
    "memberof": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3#getArtifacts",
    "access": "public",
    "description": "Getting artifacts",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "product",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array<buffer>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 523,
    "kind": "method",
    "name": "shutdown",
    "memberof": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/s3/index.js~S3#shutdown",
    "access": "public",
    "description": "Shutdown module",
    "lineNumber": 85,
    "params": [],
    "return": null
  },
  {
    "__docId__": 525,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/io/websocket/index.js",
    "content": "const WS = require('ws');\nconst uuid = require('uuid/v1');\n\n/**\n * WebSocket IO\n */\nclass WebSocket {\n  /**\n   * Constructor\n   * @param {{}} http\n   * @param {{}} config\n   * @param {{}} log\n   */\n  constructor({ server, config, log }) {\n    this._server = server;\n    this._config = config;\n    this._log = log;\n    this._connections = {};\n  }\n\n  /**\n   * Start\n   */\n  async bootstrap() {\n    this._wss = new WS.Server({ server: this._server });\n\n    this._wss.on('connection', ws => this._register(ws));\n  }\n\n  /**\n   * Register new WebSocket connection\n   * @param {{}} connection\n   * @private\n   */\n  _register(connection) {\n    const connectionId = uuid();\n\n    this._connections[connectionId] = connection;\n\n    this.send(connectionId, {\n      microservice: `${this._config.appName}.v${this._config.appVersion}`,\n      topic: null,\n      msg: 'WebSocket connection successfully established',\n    });\n\n    connection.on('message', message => this._handleMessage(connectionId, message));\n  }\n\n\n  /**\n   * Handle WebSocker message\n   * @param {string} connectionId\n   * @param {string} message\n   * @private\n   */\n  _handleMessage(connectionId, message) {\n    this._log.info(connectionId, message);\n\n    if (this._handler) {\n      this._handler(connectionId, message);\n    } else {\n      this._log.error('Handler for WebSocket messages is not defined');\n    }\n  }\n\n  /**\n   * Bind external handler for processing WebSocket messages\n   * @param {function} handler\n   */\n  setHandler(handler) {\n    this._handler = handler;\n  }\n\n  /**\n   * Send message to WebSocker connection\n   * @param {string} connectionId\n   * @param {{}} msg\n   */\n  send(connectionId, msg) {\n    if (!connectionId) return;\n    this._connections[connectionId].send(JSON.stringify(msg));\n  }\n}\n\nmodule.exports = WebSocket;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/io/websocket/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 526,
    "kind": "class",
    "name": "WebSocket",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/io/websocket/index.js",
    "importStyle": "WebSocket",
    "description": "WebSocket IO",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 527,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "log",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 528,
    "kind": "member",
    "name": "_server",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#_server",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 529,
    "kind": "member",
    "name": "_config",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#_config",
    "access": "private",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 530,
    "kind": "member",
    "name": "_log",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#_log",
    "access": "private",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 531,
    "kind": "member",
    "name": "_connections",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#_connections",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 532,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#bootstrap",
    "access": "public",
    "description": "Start",
    "lineNumber": 24,
    "params": [],
    "return": null
  },
  {
    "__docId__": 533,
    "kind": "member",
    "name": "_wss",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#_wss",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 534,
    "kind": "method",
    "name": "_register",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#_register",
    "access": "private",
    "description": "Register new WebSocket connection",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 535,
    "kind": "method",
    "name": "_handleMessage",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#_handleMessage",
    "access": "private",
    "description": "Handle WebSocker message",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "connectionId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 536,
    "kind": "method",
    "name": "setHandler",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#setHandler",
    "access": "public",
    "description": "Bind external handler for processing WebSocket messages",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 537,
    "kind": "member",
    "name": "_handler",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#_handler",
    "access": "private",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 538,
    "kind": "method",
    "name": "send",
    "memberof": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/io/websocket/index.js~WebSocket#send",
    "access": "public",
    "description": "Send message to WebSocker connection",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "connectionId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 539,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/knexfile.js",
    "content": "const _ = require('lodash');\n\n\nconst schema = _.last((process.env.npm_package_name || '').split('/'));\n\nmodule.exports = {\n  schema,\n  client: 'pg',\n  connection: {\n    host: process.env.POSTGRES_SERVICE_HOST || 'localhost',\n    port: process.env.POSTGRES_SERVICE_PORT || (process.env.CI || (process.env.NODE_ENV === 'test') ? 5432 : 5433),\n    user: process.env.POSTGRES_USER || 'postgresql',\n    password: process.env.POSTGRES_PASSWORD || 'postgresql',\n    database: process.env.POSTGRES_DB || 'postgresql',\n  },\n  pool: {\n    min: 0,\n    max: 5,\n  },\n  migrations: {\n    schemaName: schema,\n  },\n  triggers: {\n    onUpdateTrigger: {\n      up: table => `\n            CREATE TRIGGER ${table}_updated\n            BEFORE UPDATE ON ${schema}.${table}\n            FOR EACH ROW\n            EXECUTE PROCEDURE ${schema}.update_updated()\n          `,\n      down: table => `DROP TRIGGER ${table}_updated on ${schema}.${table}`,\n    },\n  },\n  functions: {\n    update_updated: {\n      up: () => `\n        CREATE OR REPLACE FUNCTION ${schema}.update_updated()\n        RETURNS TRIGGER AS $$\n        BEGIN\n            NEW.updated = now();\n            RETURN NEW;  \n        END;\n        $$ language 'plpgsql';\n      `,\n      down: () => `\n        DROP FUNCTION IF EXISTS ${schema}.update_updated RESTRICT;\n      `,\n    },\n  },\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/knexfile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 540,
    "kind": "variable",
    "name": "schema",
    "memberof": "dip-platform/shared/etherisc-microservice/knexfile.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/knexfile.js~schema",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/knexfile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 541,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js",
    "content": "const Router = require('koa-router');\nconst { throwError } = require('../../utils');\n\n/**\n * Base DIP microservice wrapper\n */\nclass DipMicroservice {\n  /**\n   * Constructor\n   * @param {Class} App\n   * @param {ioModule} ioDeps\n   * @param {{}} services\n   */\n  constructor(App, ioDeps, services) {\n    this.App = App;\n\n    this.amqp = ioDeps.amqp;\n    this.db = ioDeps.db;\n    this.http = ioDeps.http;\n    this.log = ioDeps.log;\n    this.config = ioDeps.config;\n    this.s3 = ioDeps.s3;\n    this.services = services;\n    this.websocket = ioDeps.websocket;\n  }\n\n  /**\n   * Start application\n   * @return {Promise<void>}\n   */\n  async bootstrap() {\n    try {\n      const deps = {};\n\n      if (this.config.amqp || this.config.genericInsurance) {\n        await this.amqp.bootstrap();\n        deps.amqp = this.amqp;\n      }\n\n      if (this.config.db) {\n        await this.db.bootstrap();\n        deps.db = this.db.getConnection();\n      }\n\n      if (this.config.s3) {\n        await this.s3.bootstrap(this.config.bucket);\n        deps.s3 = this.s3;\n      }\n\n      if (this.config.genericInsurance) {\n        const { GenericInsurance } = this.services;\n        deps.genericInsurance = new GenericInsurance({ amqp: this.amqp });\n      }\n\n      const applicationRouter = new Router();\n\n      await this.http.bootstrap(applicationRouter);\n\n      if (this.config.websocket || this.config.genericInsurance) {\n        const websocket = this.websocket(this.http.server);\n        await websocket.bootstrap();\n        deps.websocket = websocket;\n      }\n\n      this.app = new this.App({\n        ...deps,\n        http: this.http,\n        log: this.log,\n        config: this.config,\n        router: applicationRouter,\n        appName: this.config.appName,\n        appVersion: this.config.appVersion,\n      });\n\n      await this.app.bootstrap();\n\n      this.http.setReadyStatus(true);\n\n      this.log.info(`${this.config.appName}.v${this.config.appVersion} listening on http://localhost:${this.http.port}`);\n\n      ['SIGTERM', 'SIGHUP', 'SIGINT'].forEach((signal) => {\n        process.on(signal, () => {\n          this.log.debug(`${signal} received, shutdown ${this.config.appName}.v${this.config.appVersion} microservice`);\n\n          this.shutdown();\n        });\n      });\n    } catch (e) {\n      throwError(e);\n    }\n  }\n\n\n  /**\n   * Shutdown application\n   */\n  shutdown() {\n    const status = this.http.getShuttingDownStatus();\n\n    if (status === true) {\n      this.log.debug('Server is already shutting down');\n      return;\n    }\n\n    this.http.setReadyStatus(false);\n    this.http.setShuttingDownStatus(true);\n\n    this.amqp.shutdown();\n    this.db.shutdown();\n    this.http.shutdown();\n    this.s3.shutdown();\n\n    process.exit();\n  }\n}\n\nmodule.exports = DipMicroservice;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 542,
    "kind": "class",
    "name": "DipMicroservice",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js",
    "importStyle": "DipMicroservice",
    "description": "Base DIP microservice wrapper",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 543,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "App",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ioModule"
        ],
        "spread": false,
        "optional": false,
        "name": "ioDeps",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "services",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 544,
    "kind": "member",
    "name": "App",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#App",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 545,
    "kind": "member",
    "name": "amqp",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#amqp",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 546,
    "kind": "member",
    "name": "db",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#db",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 547,
    "kind": "member",
    "name": "http",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#http",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 548,
    "kind": "member",
    "name": "log",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#log",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 549,
    "kind": "member",
    "name": "config",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#config",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 550,
    "kind": "member",
    "name": "s3",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#s3",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 551,
    "kind": "member",
    "name": "services",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#services",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 552,
    "kind": "member",
    "name": "websocket",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#websocket",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 553,
    "kind": "method",
    "name": "bootstrap",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#bootstrap",
    "access": "public",
    "description": "Start application",
    "lineNumber": 31,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 554,
    "kind": "member",
    "name": "app",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#app",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 555,
    "kind": "method",
    "name": "shutdown",
    "memberof": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/DipMicroservice/index.js~DipMicroservice#shutdown",
    "access": "public",
    "description": "Shutdown application",
    "lineNumber": 97,
    "params": [],
    "return": null
  },
  {
    "__docId__": 556,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js",
    "content": "const uuid = require('uuid/v1');\n\n/**\n * Generic insurance\n */\nclass GenericInsurance {\n  /**\n   * Constructor\n   * @param {{}} amqp\n   */\n  constructor({ amqp }) {\n    this._amqp = amqp;\n  }\n\n  /**\n   * Send policy creation message to broker\n   * @param {string} correlationId\n   * @param {{}} payload\n   */\n  createPolicy(correlationId, payload) {\n    this._amqp.publish({\n      messageType: 'policyCreationSuccess',\n      messageVersion: '1.*',\n      content: payload,\n      correlationId: correlationId || uuid(),\n    });\n  }\n\n  /**\n   * Send card charding message to broker\n   * @param {string} correlationId\n   * @param {string} policyId\n   */\n  chargeCard(correlationId, policyId) {\n    this._amqp.publish({\n      messageType: 'chargeCard',\n      messageVersion: '1.*',\n      content: { policyId },\n      correlationId,\n    });\n  }\n\n  /**\n   * Send fiat payout message to broker\n   * @param {string} correlationId\n   * @param {string} policyId\n   */\n  payout(correlationId, policyId) {\n    this._amqp.publish({\n      messageType: 'payout',\n      messageVersion: '1.*',\n      content: { policyId },\n      correlationId,\n    });\n  }\n\n  /**\n   * Send certificate issuing message to broker\n   * @param {string} correlationId\n   * @param {string} policyId\n   */\n  issueCertificate(correlationId, policyId) {\n    this._amqp.publish({\n      messageType: 'issueCertificate',\n      messageVersion: '1.*',\n      content: { policyId },\n      correlationId,\n    });\n  }\n}\n\nmodule.exports = GenericInsurance;\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 557,
    "kind": "class",
    "name": "GenericInsurance",
    "memberof": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js",
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance",
    "access": "public",
    "export": true,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js",
    "importStyle": "GenericInsurance",
    "description": "Generic insurance",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 558,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "amqp",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 559,
    "kind": "member",
    "name": "_amqp",
    "memberof": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance",
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance#_amqp",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 560,
    "kind": "method",
    "name": "createPolicy",
    "memberof": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance#createPolicy",
    "access": "public",
    "description": "Send policy creation message to broker",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{}"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 561,
    "kind": "method",
    "name": "chargeCard",
    "memberof": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance#chargeCard",
    "access": "public",
    "description": "Send card charding message to broker",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 562,
    "kind": "method",
    "name": "payout",
    "memberof": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance#payout",
    "access": "public",
    "description": "Send fiat payout message to broker",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 563,
    "kind": "method",
    "name": "issueCertificate",
    "memberof": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "dip-platform/shared/etherisc-microservice/services/GenericInsurance/index.js~GenericInsurance#issueCertificate",
    "access": "public",
    "description": "Send certificate issuing message to broker",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "policyId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 564,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/services/module.js",
    "content": "const DipMicroservice = require('./DipMicroservice');\nconst GenericInsurance = require('./GenericInsurance');\n\n\nmodule.exports = {\n  DipMicroservice,\n  GenericInsurance,\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/services/module.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 565,
    "kind": "file",
    "name": "dip-platform/shared/etherisc-microservice/utils.js",
    "content": "const isDockerHost = require('is-docker');\n\n/**\n * Throw error\n * @param {*} e\n */\nfunction throwError(e) {\n  if (e instanceof Error) {\n    throw e;\n  } else {\n    throw new Error(e);\n  }\n}\n\nmodule.exports = {\n  throwError,\n  isDockerHost,\n  isKubernetesHost: () => isDockerHost() && !process.env.CI,\n};\n",
    "static": true,
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/shared/etherisc-microservice/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 566,
    "kind": "function",
    "name": "throwError",
    "memberof": "dip-platform/shared/etherisc-microservice/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "dip-platform/shared/etherisc-microservice/utils.js~throwError",
    "access": "public",
    "export": false,
    "importPath": "@etherisc/dip-platform/dip-platform/shared/etherisc-microservice/utils.js",
    "importStyle": null,
    "description": "Throw error",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# DIP Platform\n\n###### Documentation\n![documentation-badge](https://img.shields.io/badge/Documentation-53.3%25%20%28218%2F409%29-yellow.svg)\n\n###### Test coverage summary\n\nModule         | % Stmts       | % Branch      | % Funcs       | % Lines\n-------------- | --------------| --------------| --------------| --------------\nestore_contracts.v1.0.0 | - | - | - | -\n@etherisc/etherisc_flight_delay_api.v0.1.1 | 2.38% (2/84) | 0% (0/24) | 3.33% (1/30) | 2.86% (2/70)\n@etherisc/etherisc_flight_delay_ui.v0.1.1 | 35% (14/40) | 0% (0/4) | 28.57% (4/14) | 38.89% (14/36)\n@etherisc/dip_artifacts_storage.v1.0.0 | 33.33% (15/45) | 0% (0/4) | 27.27% (3/11) | 35.71% (15/42)\n@etherisc/dip_contracts.v1.0.0 | - | - | - | -\n@etherisc/dip_ethereum_client.v0.1.1 | - | - | - | -\n@etherisc/dip_event_listener.v0.1.0 | 40.74% (55/135) | 38.89% (7/18) | 41.38% (12/29) | 42.4% (53/125)\n@etherisc/dip_event_logging.v0.2.0 | 35.14% (13/37) | 37.5% (3/8) | 46.15% (6/13) | 37.14% (13/35)\n@etherisc/dip_fiat_payment_gateway.v0.1.1 | - | - | - | -\n@etherisc/dip_fiat_payout_gateway.v0.1.1 | - | - | - | -\n@etherisc/dip_pdf_generator.v1.0.1 | - | - | - | -\n@etherisc/dip_policy_storage.v0.1.1 | 51.28% (80/156) | 41.67% (5/12) | 41.46% (17/41) | 55.56% (80/144)\n@etherisc/microservice.v0.4.1 | - | - | - | -\n[endOfCoverageTable]: #\n\n\n\n* [Contribution guidelines](CONTRIBUTION.md)\n* [License](LICENSE)\n\n## Setup environments\n\n### A. Setup local development environment\n1. Install [Docker](https://docs.docker.com/install/#supported-platforms).\n2. Install [NodeJS](https://nodejs.org/en/). NodeJs version should be >= 11, npm >= 6.\n3. `npm ci` to install package dependencies\n4. `npm run bootstrap` to install dependencies for Lerna packages\n5. `npm run dev:services:run` to run Docker Compose with RabbitMQ and PostreSQL\n6. `npm run migrate` to run migrations.\n7. `npm run dev` to start applications.\n8. `npm login` login into npm account with access to @etherisc organization private packages.\n9. `npm run publish` to update NPM packages\n\n### B. Setup local development e2e test environment\n1. Install [Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/). Make sure `kubectl` is the latest version.\n2. Run Minikube:\n\n    `minikube start` will start Minikube\n    \n    `minikube ip` will return local Minikube IP\n    \n    `minikube dashboard` will open Minikube dashboard for local Kubernetes cluster\n    \n    `minikube delete` will delete Minikube cluster\n\n    Note that the IP is new each time you restart minikube. You can get it at any time by running `minikube ip`.\n    Keep it handy for all other ports we'll potentially expose later on in the process.\n3. `npm install` to install package dependencies\n\n4. `npm run bootstrap` to install dependencies for Lerna packages\n\n5. `NPM_TOKEN=<token> npm run deploy:minikube` to deploy to Minikube. To get the token sign in to npm and create token of type Publish on `https://www.npmjs.com/settings/etherisc_user/tokens/create`.\n\n#### Notes\n- By navigating to a `<minikubeip>:31672` in your browser you can open RabbitMQ's management plugin. The default administrative credentials are `guest/guest`.\n\n- `etherisc_flight_delay_ui` is available on `<minikubeip>:80`.\n\n- `postgresql` is available on `<minikubeip>:30032`. Connections string `postgresql://dipadmin:dippassword@postgres:5432/dip`.\n\n- To check whether the pods were created:\n\n`kubectl get pods --show-labels`\n\n`kubectl describe pod <pod name>`\n\n`kubectl logs <pod name>`\n\n- For the front-end services, the deployments should ideally be accompanied by services exposing node-ports outward. \nBut to forward the ports so deployment port interfaces are available from your local environment, run:\n\n`kubectl port-forward deployment/< DEPLOYMENT NAME> 8080:8080 8081:8081`\n\nFinal param is a list of space-delimetered port pairs going local:minikube.\n    \n    \n### C. Setup local development environment for deployment to GKE clusters\n1. Install and set up [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/)\n2. Install and initialize [Google Cloud SDK](https://cloud.google.com/sdk/docs/quickstarts)\n3. Create account / login to [Google Cloud Platform Console](https://console.cloud.google.com)\n4. In GCP dashboard navigate to Kubernetes Engine > Clusters and create new cluster\n5. Click \"connect\" button and run proposed command\n6. `npm install` to install package dependencies\n7. `npm run bootstrap` to install dependencies for Lerna packages\n8. `gcloud auth configure-docker --quiet` to authorize to Google Registry\n9. If you deploy first time run `npm run deploy:gke:secret <name>` to generate and deploy secrets for `minio`, `pg-connection` and `chain`\n10. `GCLOUD_PROJECT_ID=<project name> GCLOUD_CLUSTER=<cluster name> GCLOUD_ZONE=<cluster zone> NPM_TOKEN=<token> npm run deploy:gke` to deploy to GKE cluster.  To get the token sign in to npm and create token of type Publish on `https://www.npmjs.com/settings/etherisc_user/tokens/create`.\n\n### D. Setup deployment to GKE clusters from Bitbucket Pipelines CI\n\n#### Setup Google Cloud\n1. Create account / login to [Google Cloud Platform Console](https://console.cloud.google.com)\n2. Select or create a GCP project ([manage resources page](https://console.cloud.google.com/cloud-resource-manager))\n3. Make sure that billing is enabled for your project ([learn how](https://cloud.google.com/billing/docs/how-to/modify-project))\n4. Enable the App Engine Admin API ([enable APIs](https://console.cloud.google.com/flows/enableapi?apiid=appengine))\n\n#### Create Kubernetes cluster\n1. In GCP dashboard navigate to Kubernetes Engine > Clusters\n2. Create new cluster\n3. If you deploy first time run `npm run deploy:gke:secret <name>` to generate and deploy secrets for `minio`, `pg-connection` and `chain`\n\n#### Create authorization credentials for Bitbucket\nCreate an App Engine service account and API key. Bitbucket needs this information to deploy to App Engine.\n\n1. In the Google Cloud Platform Console, go to the [Credentials](https://console.cloud.google.com/apis/credentials) page.\n\n2. Click Create credentials > Service account key.\n\n3. In the next page select Compute Engine default service account in the Service account dropdown.\n\n4. Click the Create button. A copy of the JSON file downloads to your computer. (This is your JSON credential file)\n\n#### Configure the environment variables required by the pipeline script\nOpen up your terminal and browse to the location of your JSON credential file from earlier. Then run the command below to encode your file in base64 format. Copy the output of the command to your clipboard.\n\n`base64 <your-credentials-file.json>`\n\nGo to your repository settings in Bitbucket and navigate to Pipelines > Environment variables. Create a new variable named GCLOUD_API_KEYFILE and paste the encoded service account credentials in it.\n\nAdd another variable called GCLOUD_PROJECT_ID and set the value to the key of your Google Cloud project that you created in the first step `your-project-name`.\n\nAdd GCLOUD_CLUSTER, GCLOUD_ZONE variables to specify your GKE cluster.\n\nUse custom commands specified in bitbucket-pipelines.yml to deploy info Kubernetes cluster.\n",
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@etherisc/dip-platform\",\n  \"description\": \"Etherisc Decentralized Insurance Platform\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \"11.1.0\",\n    \"npm\": \"6.4.1\"\n  },\n  \"scripts\": {\n    \"deploy:minikube\": \"echo 'Deploy to Minikube'; NODE_ENV=development ./bin/run deploy\",\n    \"deploy:gke:secret\": \"echo Deploy secrets to GKE; ./bin/run deploySecret\",\n    \"deploy:gke\": \"echo 'Deploy to GKE'; NODE_ENV=production ./bin/run deploy\",\n    \"bootstrap\": \"./bin/bootstrap.sh && lerna link\",\n    \"clean\": \"echo 'Cleaning local /node_modules folders'; lerna clean --concurrency 100 --progress\",\n    \"migrate\": \"echo 'Run database migrations for packages'; lerna run migrate --parallel --concurrency 100 --progress\",\n    \"migrate:test\": \"echo 'Run database migrations for packages'; NODE_ENV=test lerna run migrate --parallel --concurrency 100 --progress\",\n    \"dev\": \"echo 'Start packages in development mode'; lerna run dev --parallel --concurrency 100 --progress\",\n    \"dev:services:run\": \"echo 'Run dockerized services'; docker-compose -f ./services/compose/docker-compose.yml up -d --remove-orphans\",\n    \"dev:services:kill\": \"echo 'Kill dockerized services'; docker-compose -f ./services/compose/docker-compose.yml kill\",\n    \"dev:services:purge\": \"docker-compose -f ./services/compose/docker-compose.yml down -v; rm -rf ./services/compose/minio; rm -rf ./services/compose/postgresql; rm -rf ./services/compose/ganache\",\n    \"lint\": \"echo 'Lint javascript files'; eslint --ext js .\",\n    \"lint:fix\": \"echo 'Lint javascript files'; eslint --ext js --fix .\",\n    \"docs\": \"echo 'Generage documentation'; esdoc\",\n    \"test:e2e\": \"echo 'Run e2e tests'; NODE_ENV=test mocha\",\n    \"test\": \"echo 'Run tests for packages'; lerna run test --concurrency 1 --progress\",\n    \"coverage\": \"echo 'Run tests coverage for packages'; lerna run coverage --parallel --concurrency 100 --progress\",\n    \"collect:coverage\": \"echo 'Collect tests coverage from packages in README.md'; ./bin/run collectCoverage\",\n    \"publish\": \"echo 'Publish updated packages to NPM'; lerna publish --progress\"\n  },\n  \"files\": [\n    \"*\"\n  ],\n  \"oclif\": {\n    \"commands\": \"./commands\",\n    \"plugins\": [\n      \"@oclif/plugin-help\"\n    ]\n  },\n  \"devDependencies\": {\n    \"amqplib\": \"^0.5.2\",\n    \"app-module-path\": \"^2.2.0\",\n    \"babel-eslint\": \"^10.0.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.9.0\",\n    \"eslint-config-airbnb\": \"^17.1.0\",\n    \"eslint-plugin-import\": \"^2.14.0\",\n    \"eslint-plugin-jsx-a11y\": \"^6.1.2\",\n    \"eslint-plugin-react\": \"^7.11.1\",\n    \"knex\": \"^0.15.2\",\n    \"lerna\": \"^3.4.3\",\n    \"mocha\": \"^5.2.0\",\n    \"pg\": \"^7.6.1\",\n    \"should\": \"^13.2.3\",\n    \"should-sinon\": \"0.0.6\",\n    \"sinon\": \"^7.1.1\",\n    \"wait-on\": \"^3.2.0\",\n    \"ws\": \"^6.1.0\"\n  },\n  \"dependencies\": {\n    \"@oclif/command\": \"^1.5.4\",\n    \"@oclif/config\": \"^1.9.0\",\n    \"@oclif/plugin-help\": \"^2.1.3\",\n    \"@rauschma/stringio\": \"^1.4.0\",\n    \"fast-glob\": \"^2.2.4\",\n    \"inquirer\": \"^6.2.0\",\n    \"js-yaml\": \"^3.12.0\",\n    \"lodash\": \"^4.17.11\",\n    \"pg\": \"^7.5.0\",\n    \"uuid\": \"^3.3.2\"\n  }\n}\n",
    "longname": "/Users/ka/Projects/Altoros/Etherisc/dip-platform/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]